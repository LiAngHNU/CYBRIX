PARSFILE
! VS Road Calculator
! Utility to calculate road and path coordinates for visualization
! Revision 45964, April 26, 2018

TITLE East Entrance, 3d Exit, 1022 <Roundabout, D = 36 m>

! Echo: Roads\BuilderSegment\RoadSeg_76190737-1036-4925-ae86-9bf3f139ba39_echo.par
! This run was made 13:47 on April 28, 2018.

!------------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION AND MODEL OPTIONS)
!------------------------------------------------------------------------------------
! [D] (default) indicates that a parameter was not set by reading from a Parsfile.
! [I] indicates that changing the parameter via an Event triggers an initialization.

! DR      57.29577951 ; - ! CALC -- Deg/rad symbol to use in formulas (read-only)
! G           9.80665 ; - ! CALC -- Symbol for gravity constant m/s/s (read-only)
ID_EVENT            0 ; - ! ID number that can be assigned to the current event
ID_RUN              0 ; - ! ID number that can be assigned to a simulation run
NDIGITS_ECHO       10 ! [D] Max. no. of digits for printing floating-point numbers
! NIMPORT           0 ! CALC -- Number of variables activated for import
! NOUT_ANI_LIVE     0 ! CALC -- Number of variables sent live to animators
! NOUT_EXPORT       0 ! CALC -- Number of output variables activated for export
! NOUT_WRITE        0 ! CALC -- Number of output variables written to file
OPT_ALL_WRITE       0 ! Write all outputs to file? 1 -> all, 0 -> only activated
                      ! outputs
OPT_BUFFER_WRITE    0 ! [D] Use buffer for outputs written to file? 0 -> no, write
                      ! during run, 1 -> yes, write after run finishes
OPT_CHECK_MATH      2 ! [D] Check for math exceptions? 2 -> as errors, 1 -> as
                      ! warnings, 0 -> no checks
OPT_ECHO_ALL_PARS   0 ! [D] Echo all parameters in this VS Solver? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! [D] Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! [D] Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_KEYWORDS_LC 0 ! [D] Echo all keywords in lowercase? -> 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    0 ! [D] Show pop-up dialog box if fatal error occurs: 1 -> yes
                      ! (normal use), 0 -> no (for batch runs)
OPT_ERROR_DUP_DEF   0 ! [D] Handle case where DEFINE_IMPORT, DEFINE_OUTPUT,
                      ! DEFINE_PARAMETER, or DEFINE_VARIABLE attempts to define a
                      ! variable that already exists. 0 -> write warning in log
                      ! file, 1 -> generate error and stop the run
OPT_ERROR_SHOW_ALL  0 ! [D] Show pop-up boxes for all errors: 0 -> only show the
                      ! first, 1 -> also show subsequent errors
OPT_LINEARIZATION   0 ! [D] Numerical linearization applied for: 0 -> all ODEs of
                      ! the model, 1 -> only selected derivatives [I]
OPT_LOG_DEBUG       0 ! [D] Log file writing: 0 -> normal, 1 -> crash expected
OPT_LOG_VERBOSE     2 ! [D] Log file verbosity: 2 -> errors + most events + parsfile
                      ! names, 0 -> errors only, 1 -> errors + events, 3 ->
                      ! advanced diagnostics
OPT_LOG_WARNINGS    1 ! [D] Write warnings into log file? 1 -> yes, 0 -> no
OPT_PAUSE           0 ! [D] Pause at end of run with window open? 0 -> no, 1 -> yes
OPT_SKIP_INIT_DYN   0 ! [D] Skip initial dynamic calculations (for some RT systems)?
                      ! 0 -> no, 1 -> yes
OPT_STOP            0 ! [D] Option for stopping the run: 0 -> stop when T reaches
                      ! TSTOP; 1 -> stop when T reaches TSTOP or station reaches
                      ! SSTOP; -1 -> run until stopped using VS Commands or
                      ! external control
OPT_VS_FILETYPE     1 ! [D] Type of output file: 3 -> 32-bit ERD, 1-> 64-bit VS, 2->
                      ! 32-bit VS, 4 -> text CSV (no binary), 0 -> no output file
OPT_WRITE           0 ; - ! [D] Write outputs when T > TSTART_WRITE? 1 -> write, 0
                      ! -> don't write; change this using VS Commands or Events
! PI      3.141592654 ; - ! CALC -- Symbol for PI to use in formulas (read-only)
TSTART              0 ; s ! [D] Starting time for the simulation clock
TSTART_T_EVENT      0 ; s ! [D] Event clock reset time: T_EVENT = T - TSTART_T_EVENT
TSTART_WRITE        0 ; s ! [D] Start writing outputs when this time is reached
TSTEP            0.04 ; s ! [D] Time step for numerical integration
TSTOP              10 ; s ! [D] Stop when this time is reached
! T_DT           0.04 ; s ! CALC -- Time increment between calculations
! ZERO              0 ; - ! CALC -- Symbol for zero to use in VS Events (read-only)

!------------------------------------------------------------------------------------
! REFERENCE PATHS
!------------------------------------------------------------------------------------
! Reference Paths provide station-based coordinate systems used to define 3D road
! surfaces, targets for the driver model, and positions of moving objects. In
! addition to the parameters shown in this section, the paths may include spline
! X-Y tables (keyword = SEGMENT_XY_TABLE).

! NPATH             1 ! CALC -- Number of installed paths available for roads,
                      ! driver model, and moving objects
DEFINE_PATHS        1 ! VS Command to install reference paths
N_LTARG             0 ! [D] Number of LTARG datasets that are listed in this Echo
                      ! file (out of 200 that exist)
PATH_ID_DM       1022 ! PATH_ID of reference path for the driver [I]
LTARG_DM            0 ! [D] LTARG_ID of the offset for the driver model (0 -> no
                      ! LTARG)
OPT_DIRECTION       1 ! [D] Travel direction along path PATH_ID_DM: 0 -> set to 1 or
                      ! -1 using SSTART and SSTOP values (legacy); 1 -> increasing
                      ! station, -1 -> decreasing station [I]
OPT_INIT_PATH       1 ! [D] Initialize vehicle yaw, Xo, and Yo, to match path
                      ! PATH_ID_DM at station SSTART? 1 -> yes, 0 -> no [I]
SSTART              0 ; m ! [D] Start the vehicle at this station on the driver path
                      ! specified by PATH_ID_DM. The current station on this path
                      ! is the state variable SV_STATION, also available as the
                      ! output variable "Station." If the driver path is different
                      ! from the road surface path ROAD_PATH_ID for the road
                      ! surface ID CURRENT_ROAD_ID, then it might be a good idea to
                      ! specify an initial value for the state variable SV_STA_ROAD
                      ! (station along the road reference path). [I]

PATH_ID(1)       1022 ! [D] ID number for this Reference Path
SPATH_START(1)      0 ; m ! Station at the start of this path
OPT_PATH_START(1)   1 ! Specify an initial heading and start position for the path?
                      ! 0 -> no, 1 -> yes
X_PATH_START(1)  83.6 ; m ! Global X coordinate at the start of this path
Y_PATH_START(1)   2.1 ; m ! Global Y coordinate at the start of this path
HEADING_START(1)  180 ; deg ! Heading at the start of this path
OPT_PATH_LOOP(1)    0 ! Is this path looped? 0 -> no, 1 -> yes

NSEGMENTS(1)        5 ! Number of segments in this path
SEGMENT_TYPE(1,1)   0 ! 0 -> straight, 1 -> spline table, 2 -> rho, 3 -> radius, 4
                      ! -> clothoid
SEGMENT_LENGTH(1,1) 50 ; m ! Segment length
! S_SEGMENT_END(1,1) 50 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,1) 33.6 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,1) 2.1 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,1) 180 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,2)   3 ! 0 -> straight, 1 -> spline table, 2 -> rho, 3 -> radius, 4
                      ! -> clothoid
SEGMENT_RADIUS(1,2) -31.5 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,2)   45 ; deg ! Central angle of arc
! S_SEGMENT_END(1,2) 74.74004215 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,2) 11.32613639 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,2) 11.32613639 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,2) 135 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,3)   3 ! 0 -> straight, 1 -> spline table, 2 -> rho, 3 -> radius, 4
                      ! -> clothoid
SEGMENT_RADIUS(1,3) 16 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,3)  180 ; deg ! Central angle of arc
! S_SEGMENT_END(1,3) 125.0055246 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,3) -11.30128061 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,3) -11.30128061 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,3) -45 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,4)   3 ! 0 -> straight, 1 -> spline table, 2 -> rho, 3 -> radius, 4
                      ! -> clothoid
SEGMENT_RADIUS(1,4) -31.5 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,4)   45 ; deg ! Central angle of arc
! S_SEGMENT_END(1,4) 149.7455668 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,4) -2.075144213 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,4) -33.57514421 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,4) -90 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,5)   0 ! 0 -> straight, 1 -> spline table, 2 -> rho, 3 -> radius, 4
                      ! -> clothoid
SEGMENT_LENGTH(1,5) 50 ; m ! Segment length
! S_SEGMENT_END(1,5) 199.7455668 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,5) -2.075144213 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,5) -83.57514421 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,5) -90 ; deg ! CALC -- Heading at end of segment

!------------------------------------------------------------------------------------
! ROAD SURFACES
!------------------------------------------------------------------------------------
! Road surfaces define elevation Z and friction MU as functions of global X and Y
! coordinates, using a station-based coordinate system defined with a Reference
! Path. The Z and MU values for a road surface are calculated using Configurable
! Functions MU_ROAD, ROAD_DZ, and ROAD_ZS. Boundaries that control automatic
! switching from one road surface to another make use of the Configurable Functions
! ROAD_L_BOUNDARY, ROAD_NEW_ID, and ROAD_NEW_S.

! NROAD             1 ! CALC -- Number of installed road surfaces
NROAD_DZ            0 ! [D] Number of ROAD_DZ datasets
DEFINE_ROADS        1 ! VS Command to define road surfaces
CURRENT_ROAD_ID     1 ! ROAD_ID for the vehicle during initialization [I]

ROAD_ID(1)          1 ! [D] ID number for this road
ROAD_PATH_ID(1)  1022 ! PATH_ID of reference path used for this road [I]
ROAD_SMAX_NEW_ID(1) 0 ! [D] 0 -> No SMAX boundary, -1 -> stop if S > ROAD_SMAX, > 0
                      ! -> switch to road with this ID if S > ROAD_SMAX
ROAD_SMIN_NEW_ID(1) 0 ! [D] 0 -> No SMIN boundary, -1 -> stop if S < ROAD_SMIN, > 0
                      ! -> switch to road with this ID if S < ROAD_SMIN
RR_SURF(1)          1 ; - ! [D] Tire rolling resistance surface-effect coefficient
ROAD_N_DZ(1)        0 ! [D] Number of ROAD_DZ layers added to the surface

!------------------------------------------------------------------------------------
! CONFIGURABLE FUNCTIONS
!------------------------------------------------------------------------------------

! MU_ROAD: Tire/road friction coefficient (MU) for a road surface. Use MU = -1 for
! original tire data (no scaling). MU can be a nonlinear CARPET function of lateral
! position and station or a function of station (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function MU_ROAD_L of lateral position (CONSTANT, COEFFICIENT, or
! TABLE). Alternatively, a custom equation can be defined at runtime. MU from the
! calculation can be adjusted with MU_ROAD_GAIN and MU_ROAD_OFFSET. Station used in
! the calculation can be adjusted with SSCALE_MU_ROAD and SSTART_MU_ROAD. Lateral
! position used in the calculation can be adjusted with L_SCALE_MU_ROAD and
! L_START_MU_ROAD. This configurable function supports 100 datasets; if indices shown
! below are not used, e.g., (2), the current value of the index IROAD is used to
! identify the dataset when reading data.

MU_ROAD_CONSTANT(1) -1 ; - ! [D] Constant MU component due to station
MU_ROAD_GAIN(1)     1 ! Gain multiplied with calculated value to get MU
MU_ROAD_OFFSET(1)   0 ; - ! Offset added (after gain) to get MU
MU_ROAD_COMBINE(1) MULTIPLY ! How to combine the two components
MU_ROAD_L_CONSTANT(1) 1 ; - ! [D] Constant MU component due to lateral position

! ROAD_NEW_ID: Left/right boundary: 0 -> no boundary, -1 stop when L reaches
! boundary, > 0 ID of adjacent road. ID is a function of S (CONSTANT, COEFFICIENT, or
! TABLE). Alternatively, a custom equation can be defined at runtime. ID from the
! calculation can be adjusted with ROAD_NEW_ID_GAIN and ROAD_NEW_ID_OFFSET. S used in
! the calculation can be adjusted with SSCALE_ROAD_NEW_ID and SSTART_ROAD_NEW_ID.
! This configurable function supports 200 datasets; if indices shown below are not
! used, e.g., (1,2), the current values of the indices IROAD and ISIDE are used to
! identify the dataset when reading data.

ROAD_NEW_ID_CONSTANT(1,1) 0 ; - ! [D] Constant ID, Road 1, left side boundary
ROAD_NEW_ID_OFFSET(1,1) 0 ; - ! Offset added (after gain) to get ID

ROAD_NEW_ID_CONSTANT(1,2) 0 ; - ! [D] Constant ID, Road 1, right side boundary
ROAD_NEW_ID_OFFSET(1,2) 0 ; - ! Offset added (after gain) to get ID

! ROAD_ZS: Road elevation component related only to road station S. Elevation is a
! function of station (CONSTANT, COEFFICIENT, or TABLE). Elevation from the
! calculation can be adjusted with ROAD_ZS_GAIN and ROAD_ZS_OFFSET. Station used in
! the calculation can be adjusted with SSCALE_ROAD_ZS and SSTART_ROAD_ZS. The
! derivative of this function is used internally. This configurable function supports
! 100 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IROAD is used to identify the dataset when reading data.

ROAD_ZS_CONSTANT(1) 0 ; m ! [D] Constant elevation
ROAD_ZS_OFFSET(1)   0 ; m ! Offset added (after gain) to get elevation


END
