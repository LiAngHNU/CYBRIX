PARSFILE
! TruckSim 2020.1
! Revision 143796, June 26, 2020
MODEL_LAYOUT S_S

DATASET_TITLE Roughness Profile 04: 55 in/mi
CATEGORY Road Networks: 3D Geometry and Terrain
TITLE Roughness Profile 04: 55 in/mi <Road Networks: 3D Geometry and Terrain>

! Echo: Results\Run_4bcf2dca-a140-4f63-80c1-8807f2cb48e1\LastRun_echo.par
! This run was made 11:26 on June 29, 2020.

!------------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION OPTIONS)
!------------------------------------------------------------------------------------
! [D] (default) indicates that a parameter was not set by reading from a Parsfile.
! [I] indicates that changing the parameter via an Event triggers an initialization.
! [L] indicates that the parameter is locked once the simulation starts.

ID_EVENT            0 ; - ! ID number that can be assigned to the current event
ID_RUN              0 ; - ! ID number that can be assigned to a simulation run
IPRINT             50 ! Print interval: output time step TSTEP_WRITE = TSTEP*IPRINT;
                      ! set IPRINT = 0 for debug (TSTEP_WRITE = T_DT) [L]
NDIGITS_ECHO       10 ! [D] Max. no. of digits for printing floating-point numbers
! NIMPORT           0 ! Number of variables activated for import (read only)
! NOUT_ANI_LIVE    73 ! Number of variables sent live to animators (read only)
! NOUT_EXPORT       0 ! Number of output variables activated for export (read only)
! NOUT_WRITE      101 ! Number of output variables written to file (read only)
OPT_ALL_WRITE       0 ! Write all outputs to file? 1 -> all, 0 -> only activated
                      ! outputs
OPT_BUFFER_WRITE    0 ! [D] Retain output data in memory buffer until end of run? 0
                      ! -> no, write immediately to file, 1 -> yes, buffer during
                      ! run and write to file after run finishes [L]
OPT_CHECK_MATH      2 ! [D] Check for math exceptions? 2 -> as errors, 1 -> as
                      ! warnings, 0 -> no checks
OPT_ECHO_ALL_PARS   0 ! [D] Echo all parameters in this VS Solver? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! [D] Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ANI_LIVE   0 ! [D] Echo variables sent live to video? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! [D] Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_KEYWORDS_LC 0 ! [D] Echo all keywords in lowercase? 0 -> no, 1 -> yes
OPT_ECHO_WRITE      0 ! [D] Echo written outputs? 0 -> no, 1 -> yes
OPT_ENABLE_PYTHON   0 ! [D] Enable access to embedded Python? 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    1 ! [D] Show pop-up dialog box if fatal error occurs: 1 -> yes
                      ! (normal use), 0 -> no (for batch runs)
OPT_ERROR_DUP_DEF   0 ! [D] Handle case where DEFINE_IMPORT, DEFINE_OUTPUT,
                      ! DEFINE_PARAMETER, or DEFINE_VARIABLE attempts to define a
                      ! variable with a name that is already in use. 0 -> write
                      ! warning in log file, 1 -> generate error [L]
OPT_ERROR_SHOW_ALL  0 ! [D] Show pop-up boxes for all errors: 0 -> only show the
                      ! first, 1 -> also show subsequent errors
OPT_INT_METHOD      0 ! Numerical integration method: 0 -> AB-2; 1 -> RK-2; 2 ->
                      ! AM-2; 3 -> AM-3; 4 -> AM-4; -1 -> Euler. AB-2 and Euler are
                      ! full-step methods (TSTEP = 0.0005s is typical); AM and RK-2
                      ! use half-steps (TSTEP = 0.001s is typical, i.e., half-step
                      ! = 0.0005s) [L]
OPT_LINEARIZATION   0 ! [D] Numerical linearization applied for: 0 -> all ODEs of
                      ! the model, 1 -> only selected derivatives [L]
OPT_LOG_DEBUG       0 ! [D] Log file writing: 0 -> normal, 1 -> crash expected
OPT_LOG_VERBOSE     2 ! [D] Log file verbosity: 2 -> errors + most events + parsfile
                      ! names, 0 -> errors only, 1 -> errors + events, 3 ->
                      ! advanced diagnostics
OPT_LOG_WARNINGS    1 ! [D] Write warnings into log file? 1 -> yes, 0 -> no
OPT_PAUSE           0 ! [D] Pause at end of run with window open? 0 -> no, 1 -> yes
OPT_SKIP_INIT_DYN   0 ! [D] Skip initial dynamic calculations (for some RT systems)?
                      ! 0 -> no, 1 -> yes
OPT_SORT_WRITE      1 ! [D] Sort written outputs? 1 -> alphabetical, 0 -> as entered
OPT_STOP            1 ! Option for stopping the run: 0 -> stop when T reaches TSTOP;
                      ! 1 -> stop when T reaches TSTOP or station reaches SSTOP; -1
                      ! -> run until stopped using VS Commands or external control
OPT_VS_FILETYPE     2 ! Type of output file: 1-> 64-bit VS, 2-> 32-bit VS, 3 ->
                      ! 32-bit ERD, 4 -> text CSV (no binary), 0 -> no output file
OPT_WRITE           1 ; - ! [D] Write outputs when T > TSTART_WRITE? 1 -> write, 0
                      ! -> don't write; change this using VS Commands or Events
! RTIME  0.2497890915 ; - ! CALC -- Computational efficiency (sec/sim. sec)
TSTART             30 ; s ! Starting time for the simulation clock
TSTART_T_EVENT      0 ; s ! [D] Event clock reset time: T_EVENT = T - TSTART_T_EVENT
TSTART_WRITE       30 ; s ! Start writing outputs when this time is reached
TSTEP          0.0005 ; s ! Time step for numerical integration [L]
! TSTEP_WRITE   0.025 ; s ! CALC -- Time interval in output time-series file
TSTOP              60 ; s ! Stop when this time is reached
! T_DT         0.0005 ; s ! CALC -- Time increment between calculations

!------------------------------------------------------------------------------------
! SYSTEM CONSTANTS
!------------------------------------------------------------------------------------
! DR      57.29577951 ; - ! Deg/rad symbol to use in formulas (read-only)
! G           9.80665 ; - ! Symbol for gravity constant m/s/s (read-only)
! PI      3.141592654 ; - ! Symbol for PI to use in formulas (read-only)
! ZERO              0 ; - ! Symbol for zero to use in VS Events (read-only)

!------------------------------------------------------------------------------------
! VEHICLE INITIALIZATION, LIMITS, AND GRAVITY
!------------------------------------------------------------------------------------
R_GRAVITY           1 ; - ! [D] Scale factor applied to acceleration of gravity [I]

OPT_INIT_CONFIG     0 ! Initialize vehicle height, pitch, roll, and deflection
                      ! variables? 1 -> yes, 0 -> no, start 'as is' [I]
OPT_INIT_SPEED      0 ! Initialize vehicle speed variables? 1 -> yes, 0 -> no, start
                      ! 'as is' [I]
ROLL_MAX_STOP      80 ; deg ! [D] Maximum roll angle magnitude: stop the run if
                      ! reached
VLOW_STOP        -100 ; km/h ! Minimum allowed absolute speed: stop the run if
                      ! reached; use -1 to disable

!------------------------------------------------------------------------------------
! VEHICLE CONFIGURATION
!------------------------------------------------------------------------------------
! N_VEHICLES        1 ! Number of vehicles (lead units) (read-only)
! VEHICLE_NUNITS    1 ! Number of vehicle units (read-only)
! VEHICLE_NAXLES    2 ! Number of vehicle axles (read-only)
! VEHICLE_AXLE_MAP(1) 2 ! Number of axles on unit 1 (read-only)

!------------------------------------------------------------------------------------
! VEHICLE
!------------------------------------------------------------------------------------
! The instant center of gravity is calculated every time step using the sprung mass
! + axles and wheels + payloads. Output variables for the vehicle such as Vx, Vy,
! Vz, Ax, Ay, and Az are based on the motion of this instant CG for the total laden
! (TL) unit.

! H_CG_TL 1003.803706 ; mm ! CALC -- Height of TL CG
! LX_CG_TL 1784.79808 ; mm ! CALC -- X distance TL CG is behind origin
! Y_CG_TL -0.03415606183 ; mm ! CALC -- Y coordinate of TL CG
! M_TL           6042 ; kg ! CALC -- TL mass
! IXX_TL  3256.154518 ; kg-m2 ! CALC -- TL roll inertia moment
! IYY_TL  51691.92488 ; kg-m2 ! CALC -- TL pitch inertia moment
! IZZ_TL  50635.42709 ; kg-m2 ! CALC -- TL yaw inertia moment

!------------------------------------------------------------------------------------
! SPRUNG MASS
!------------------------------------------------------------------------------------
! The following parameters apply for the sprung mass without payloads, designated
! SU (sprung mass unladen). If any payloads are attached, the combined inertia
! properties (SU sprung mass + payloads) are also listed and designated SL (sprung
! mass laden).

H_CG_SU          1175 ; mm ! Height of CG of sprung mass, unladen (SU) [I]
LX_CG_SU         1250 ; mm ! X distance SU CG is behind sprung mass origin [I]
Y_CG_SU             0 ; mm ! Y coordinate of SU CG [I]
M_SU             4455 ; kg ! Mass of unladen sprung mass (SU) [I]
IXX_SU         2286.8 ; kg-m2 ! Roll inertia for unladen sprung mass [I]
IYY_SU        35408.7 ; kg-m2 ! Pitch inertia for SU [I]
IZZ_SU        34823.2 ; kg-m2 ! Yaw inertia for SU [I]
IXY_SU              0 ; kg-m2 ! XY product of inertia for SU [I]
IXZ_SU           1626 ; kg-m2 ! XZ product of inertia for SU [I]
IYZ_SU              0 ; kg-m2 ! YZ product of inertia for SU [I]

! N_PAYLOADS        0 ! No. of payloads attached to this sprung mass (read only)

HT_SM            1500 ; mm ! [D] Reference height of sprung mass (maybe for target)
LEN_SM           4000 ; mm ! [D] Reference length of sprung mass (maybe for target)
WID_SM           1600 ; mm ! [D] Reference width of sprung mass (maybe for target)
LX_F_SM          1000 ; mm ! [D] Length from front to control pt (maybe for target)

!------------------------------------------------------------------------------------
! PAYLOADS
!------------------------------------------------------------------------------------
! NLOAD             0 ! Number of installed payloads (read only)

!------------------------------------------------------------------------------------
! AERODYNAMICS
!------------------------------------------------------------------------------------
! Aerodynamic coefficients are largely defined with the nonlinear Configurable
! Functions xx_AERO_SHAPING (where xx = FX, FY, etc.). Wind speed and direction are
! defined with the functions WIND_HEADING and WIND_SPEED.

D_AIR           1.206 ; kg/m3 ! Air mass density

AREA_AERO          10 ; m2 ! Frontal cross-section area
H_REF_AERO          0 ; mm ! Height of aerodynamic reference point
L_REF_AERO       5000 ; mm ! Aerodynamic reference length
X_REF_AERO      -2500 ; mm ! X coordinate of aerodynamic reference point
Y_REF_AERO          0 ; mm ! Y coordinate of aerodynamic reference point

!------------------------------------------------------------------------------------
! SUSPENSION GEOMETRY AND INERTIA
!------------------------------------------------------------------------------------
! Suspension geometry is specified with the following parameters along with some
! nonlinear Configurable Functions that can use tables of measured or simulated
! suspension kinematical relationships. For solid-axle suspensions, these include
! the functions SUSP_AXLE_ROLL_STEER, SUSP_DIVE_AXLE, SUSP_X_AXLE, and
! SUSP_Y_AXLE_ROLL. All coordinate parameters are relative to the origin of the
! sprung mass (SM) coordinate system.

! Solid-axle suspension for axle 1
OPT_JNC_DESIGN(1)   1 ! Specify JNC_DESIGN (jounce when the wheel center is at the
                      ! reference Z coordinate H_WC) explicitly? 1 -> yes, 0 -> no,
                      ! calculate JNC_DESIGN from the ride spring data [I]
A_CAMBER(1,1)       0 ; deg ! Static camber for wheel L1 [I]
A_CAMBER(1,2)       0 ; deg ! Static camber for wheel R1 [I]
A_TOE(1,1)          0 ; deg ! Static toe for wheel L1 [I]
A_TOE(1,2)          0 ; deg ! Static toe for wheel R1 [I]
H_CG_AXLE(1)      510 ; mm ! Z coordinate of axle 1 CG [I]
H_WC(1,1)         510 ; mm ! Reference Z coordinate of wheel center L1 (in SM
                      ! coordinate system) [I]
H_WC(1,2)         510 ; mm ! Reference Z coordinate of wheel center R1 [I]
IA(1)              80 ; kg-m2 ! Yaw and roll moment of inertia, axle 1 [I]
! ISPIN(1,1)     14.8 ; kg-m2 ! CALC -- Spin inertia for wheel + tire(s) L1 [I]
! ISPIN(1,2)     14.8 ; kg-m2 ! CALC -- Spin inertia for wheel + tire(s) R1 [I]
! ISPIN_XXZZ(1,1)   0 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire(s) L1 [I]
! ISPIN_XXZZ(1,2)   0 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire(s) R1 [I]
IW(1,1)            10 ; kg-m2 ! Spin inertia for wheel L1 [I]
IW(1,2)            10 ; kg-m2 ! Spin inertia for wheel R1 [I]
IW_XXZZ(1,1)        0 ; kg-m2 ! IXX/IZZ inertia for wheel L1 [I]
IW_XXZZ(1,2)        0 ; kg-m2 ! IXX/IZZ inertia for wheel R1 [I]
JNC_DESIGN(1,1)     0 ; mm ! Jounce when center of wheel L1 is at the reference
                      ! coordinate H_WC [I]
JNC_DESIGN(1,2)     0 ; mm ! Jounce when center of wheel R1 is at H_WC [I]
L_TRACK(1)       2030 ; mm ! Track width, wheel-center to wheel-center, axle 1 [I]
LX_AXLE(1)          0 ; mm ! X dist. axle 1 is behind the sprung-mass origin [I]
M_US_AXLE(1)      290 ; kg ! Unsteered mass for axle 1 [I]
M_US_STR(1,1)      36 ; kg ! Steered mass for wheel L1 [I]
M_US_STR(1,2)      36 ; kg ! Steered mass for wheel R1 [I]
! M_US(1)         544 ; kg ! CALC -- Total unsprung mass for axle 1
! R_US_STR(1) 0.4669117647 ; - ! CALC -- Steered fraction of unsprung mass, axle 1
Y_CG_AXLE(1)        0 ; mm ! [D] Y offset of M_US_AXLE CG from track center [I]
! Y_CG_SUSP(1)      0 ; mm ! CALC -- Y coord. for total unsprung mass, axle 1 [I]
Y_CL_SUSP(1)        0 ; mm ! Y coord. for suspension centerline, axle 1 [I]

! Solid-axle suspension for axle 2
OPT_JNC_DESIGN(2)   1 ! Specify JNC_DESIGN explicitly for axle 2? [I]
A_CAMBER(2,1)       0 ; deg ! Static camber for wheel L2 [I]
A_CAMBER(2,2)       0 ; deg ! Static camber for wheel R2 [I]
A_TOE(2,1)          0 ; deg ! Static toe for wheel L2 [I]
A_TOE(2,2)          0 ; deg ! Static toe for wheel R2 [I]
H_CG_AXLE(2)      530 ; mm ! Z coordinate of axle 2 CG [I]
H_WC(2,1)         530 ; mm ! Reference Z coordinate of wheel center L2 [I]
H_WC(2,2)         530 ; mm ! Reference Z coordinate of wheel center R2 [I]
IA(2)             215 ; kg-m2 ! Yaw and roll moment of inertia, axle 2 [I]
! ISPIN(2,1)     29.6 ; kg-m2 ! CALC -- Spin inertia for wheel + tire(s) L2 [I]
! ISPIN(2,2)     29.6 ; kg-m2 ! CALC -- Spin inertia for wheel + tire(s) R2 [I]
! ISPIN_XXZZ(2,1)   0 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire(s) L2 [I]
! ISPIN_XXZZ(2,2)   0 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire(s) R2 [I]
IW(2,1)            20 ; kg-m2 ! Spin inertia for wheel L2 [I]
IW(2,2)            20 ; kg-m2 ! Spin inertia for wheel R2 [I]
IW_XXZZ(2,1)        0 ; kg-m2 ! IXX/IZZ inertia for wheel L2 [I]
IW_XXZZ(2,2)        0 ; kg-m2 ! IXX/IZZ inertia for wheel R2 [I]
JNC_DESIGN(2,1)     0 ; mm ! Jounce when center of wheel L2 is at H_WC [I]
JNC_DESIGN(2,2)     0 ; mm ! Jounce when center of wheel R2 is at H_WC [I]
L_TRACK(2)       1863 ; mm ! Track width, wheel-center to wheel-center, axle 2 [I]
LX_AXLE(2)       5000 ; mm ! X dist. axle 2 is behind the sprung-mass origin [I]
M_US_AXLE(2)      679 ; kg ! Unsteered mass for axle 2 [I]
M_US_STR(2,1)       0 ; kg ! Steered mass for wheel L2 [I]
M_US_STR(2,2)       0 ; kg ! Steered mass for wheel R2 [I]
! M_US(2)        1043 ; kg ! CALC -- Total unsprung mass for axle 2
! R_US_STR(2) 0.3489932886 ; - ! CALC -- Steered fraction of unsprung mass, axle 2
Y_CG_AXLE(2)        0 ; mm ! [D] Y offset of M_US_AXLE CG from track center [I]
! Y_CG_SUSP(2)      0 ; mm ! CALC -- Y coord. for total unsprung mass, axle 2 [I]
Y_CL_SUSP(2)        0 ; mm ! Y coord. for suspension centerline, axle 2 [I]

!------------------------------------------------------------------------------------
! SUSPENSION SPRINGS AND DAMPERS
!------------------------------------------------------------------------------------
! Suspension springs and dampers are specified with the following parameters, along
! with the nonlinear Configurable Functions CMP_DAMP, CMP_JSTOP, CMP_RSTOP,
! CMP_SPR_SEAT, FD, F_JNC_STOP, F_REB_STOP, FS_COMP, FS_EXT, and MX_AUX. All
! suspension models calculate compliance effects using the functions CC_FX, CI_FY,
! CI_MZ, CS_FY, CS_MZ, and CT_FX. Solid-axle suspensions also use the functions
! C_LAT_AXLE and C_LONG_AXLE.

! Solid-axle suspension for axle 1
OPT_EXT_SP(1,1)     0 ! External option for spring L1: 0 -> use built-in spring
                      ! (with or without external model), 1 -> disable built-in
                      ! spring and use an external model [I]
OPT_EXT_SP(1,2)     0 ! Disable built-in spring R1? 0 -> no, 1 -> yes [I]
OPT_SUSP_COMPLIANCE_METHOD(1) 1 ! [D] Subtract offset from each compliance table to
                                ! avoid double-counting kinematical offset? 1 ->
                                ! Yes, subtract the offset, 0 -> No, use compliance
                                ! table as is [I]
CMP_OFFSET(1,1)     0 ; mm ! Initial compression of external spring L1 [I]
CMP_OFFSET(1,2)     0 ; mm ! Initial compression of external spring R1 [I]
! CMP_DESIGN(1,1) 65.53293862 ; mm ! CALC -- Compression at design load, spring L1
! CMP_DESIGN(1,2) 65.53293862 ; mm ! CALC -- Compression at design load, spring R1
DAUX(1)             0 ; N-m-s/deg ! Auxiliary roll damping, axle 1
DMP_AX(1,1)         0 ; deg ! [D] Front-view inclination angle for damper L1 [I]
DMP_AX(1,2)         0 ; deg ! [D] Front-view inclination angle for damper R1 [I]
DMP_AY(1,1)         0 ; deg ! [D] Side-view inclination angle for damper L1 [I]
DMP_AY(1,2)         0 ; deg ! [D] Side-view inclination angle for damper R1 [I]
DMP_LEN(1,1)        0 ; mm ! [D] Length at design for damper L1 [I]
DMP_LEN(1,2)        0 ; mm ! [D] Length at design for damper R1 [I]
SPG_AX(1,1)         0 ; deg ! [D] Front-view inclination angle for spring L1 [I]
SPG_AX(1,2)         0 ; deg ! [D] Front-view inclination angle for spring R1 [I]
SPG_AY(1,1)         0 ; deg ! [D] Side-view inclination angle for spring L1 [I]
SPG_AY(1,2)         0 ; deg ! [D] Side-view inclination angle for spring R1 [I]
SPG_LEN(1,1)        0 ; mm ! [D] Length at design for spring L1 [I]
SPG_LEN(1,2)        0 ; mm ! [D] Length at design for spring R1 [I]
! FSA_DESIGN(1) 32766.46931 ; N ! CALC -- Design Load (susp., unladen), axle 1
! FSA_L(1) 32766.46931 ; N ! CALC -- Static suspension load, laden, axle  1
FS_OFFSET(1,1)      0 ; N ! Force offset subtracted from built-in spring L1 [I]
FS_OFFSET(1,2)      0 ; N ! Force offset subtracted from built-in spring R1 [I]
! FS_STATIC(1,1) 16383.23466 ; N ! CALC -- Static spring force, laden, spring L1
! FS_STATIC(1,2) 16383.23466 ; N ! CALC -- Static spring force, laden, spring R1
! FZA_L(1) 38101.28691 ; N ! CALC -- Static ground load, laden, axle 1
! FZA_UL(1) 38101.28691 ; N ! CALC -- Static ground load, unladen, axle 1
! FZ_STATIC(1,1) 19050.64346 ; N ! CALC -- Static ground force, laden, wheel L1
! FZ_STATIC(1,2) 19050.64346 ; N ! CALC -- Static ground force, laden, wheel R1
! KA_ROLL(1) 10228.09413 ; N-m/deg ! CALC -- Total roll stiffness, axle 1
L_DAMPERS(1)     1100 ; mm ! Distance between dampers on axle 1 [I]
Y_DAMPERS(1)        0 ; mm ! [D] Lateral (left) offset of dampers on axle 1 [I]
L_JNC_STOPS(1)    890 ; mm ! Distance between jounce stops on axle 1 [I]
L_REB_STOPS(1)    890 ; mm ! Distance between rebound stops on axle 1 [I]
L_SPRINGS(1)      890 ; mm ! Distance between springs on axle 1 [I]
Y_SPRINGS(1)        0 ; mm ! [D] Lateral (left) offset of springs on axle 1 [I]
L_SPG_ADJ(1,1)      0 ; mm ! Upper seat height increase for spring L1 to reduce
                      ! spring compression [I]
L_SPG_ADJ(1,2)      0 ; mm ! Upper seat height increase for spring R1 [I]
SPRING_COMP_BETA(1,1) 2 ; mm ! Reference hysteretic compression (1/3 of the
                        ! compression needed to go from the lower force boundary to
                        ! the upper force boundary) for ride spring L1 
SPRING_COMP_BETA(1,2) 2 ; mm ! Ref. hysteretic compression, ride spring R1
SPRING_EXT_BETA(1,1) 2 ; mm ! Ref. hysteretic extension, ride spring L1
SPRING_EXT_BETA(1,2) 2 ; mm ! Ref. hysteretic extension, ride spring R1

! Solid-axle suspension for axle 2
OPT_EXT_SP(2,1)     0 ! Disable built-in spring L2? 0 -> no, 1 -> yes [I]
OPT_EXT_SP(2,2)     0 ! Disable built-in spring R2? 0 -> no, 1 -> yes [I]
OPT_SUSP_COMPLIANCE_METHOD(2) 1 ! [D] Adjust compliance tables to avoid
                                ! double-counting? 1 -> Adjust, 0 -> No [I]
CMP_OFFSET(2,1)     0 ; mm ! Initial compression of external spring L2 [I]
CMP_OFFSET(2,2)     0 ; mm ! Initial compression of external spring R2 [I]
! CMP_DESIGN(2,1) 7.801540313 ; mm ! CALC -- Compression at design load, spring L2
! CMP_DESIGN(2,2) 7.801540313 ; mm ! CALC -- Compression at design load, spring R2
DAUX(2)             0 ; N-m-s/deg ! Auxiliary roll damping, axle 2
DMP_AX(2,1)         0 ; deg ! [D] Front-view inclination angle for damper L2 [I]
DMP_AX(2,2)         0 ; deg ! [D] Front-view inclination angle for damper R2 [I]
DMP_AY(2,1)         0 ; deg ! [D] Side-view inclination angle for damper L2 [I]
DMP_AY(2,2)         0 ; deg ! [D] Side-view inclination angle for damper R2 [I]
DMP_LEN(2,1)        0 ; mm ! [D] Length at design for damper L2 [I]
DMP_LEN(2,2)        0 ; mm ! [D] Length at design for damper R2 [I]
SPG_AX(2,1)         0 ; deg ! [D] Front-view inclination angle for spring L2 [I]
SPG_AX(2,2)         0 ; deg ! [D] Front-view inclination angle for spring R2 [I]
SPG_AY(2,1)         0 ; deg ! [D] Side-view inclination angle for spring L2 [I]
SPG_AY(2,2)         0 ; deg ! [D] Side-view inclination angle for spring R2 [I]
SPG_LEN(2,1)        0 ; mm ! [D] Length at design for spring L2 [I]
SPG_LEN(2,2)        0 ; mm ! [D] Length at design for spring R2 [I]
! FSA_DESIGN(2) 10922.15644 ; N ! CALC -- Design Load (susp., unladen), axle 2
! FSA_L(2) 10922.15644 ; N ! CALC -- Static suspension load, laden, axle  2
FS_OFFSET(2,1)      0 ; N ! Force offset subtracted from built-in spring L2 [I]
FS_OFFSET(2,2)      0 ; N ! Force offset subtracted from built-in spring R2 [I]
! FS_STATIC(2,1) 5461.078219 ; N ! CALC -- Static spring force, laden, spring L2
! FS_STATIC(2,2) 5461.078219 ; N ! CALC -- Static spring force, laden, spring R2
! FZA_L(2) 21150.49239 ; N ! CALC -- Static ground load, laden, axle 2
! FZA_UL(2) 21150.49239 ; N ! CALC -- Static ground load, unladen, axle 2
! FZ_STATIC(2,1) 10575.24619 ; N ! CALC -- Static ground force, laden, wheel L2
! FZ_STATIC(2,2) 10575.24619 ; N ! CALC -- Static ground force, laden, wheel R2
! KA_ROLL(2) 7608.652382 ; N-m/deg ! CALC -- Total roll stiffness, axle 2
L_DAMPERS(2)     1000 ; mm ! Distance between dampers on axle 2 [I]
Y_DAMPERS(2)        0 ; mm ! [D] Lateral (left) offset of dampers on axle 2 [I]
L_JNC_STOPS(2)   1000 ; mm ! Distance between jounce stops on axle 2 [I]
L_REB_STOPS(2)   1000 ; mm ! Distance between rebound stops on axle 2 [I]
L_SPRINGS(2)     1000 ; mm ! Distance between springs on axle 2 [I]
Y_SPRINGS(2)        0 ; mm ! [D] Lateral (left) offset of springs on axle 2 [I]
L_SPG_ADJ(2,1)      0 ; mm ! Upper seat height increase for spring L2 [I]
L_SPG_ADJ(2,2)      0 ; mm ! Upper seat height increase for spring R2 [I]
SPRING_COMP_BETA(2,1) 2 ; mm ! Ref. hysteretic compression, ride spring L2
SPRING_COMP_BETA(2,2) 2 ; mm ! Ref. hysteretic compression, ride spring R2
SPRING_EXT_BETA(2,1) 2 ; mm ! Ref. hysteretic extension, ride spring L2
SPRING_EXT_BETA(2,2) 2 ; mm ! Ref. hysteretic extension, ride spring R2

!------------------------------------------------------------------------------------
! STEERING
!------------------------------------------------------------------------------------
! The steering system is specified with the following parameters along with the
! nonlinear Configurable Functions F_BOOST_R, GEAR_ROT, M_BOOST_G, M_SW, M_TBAR,
! MZ_PARKING_STEER, RACK_KIN, RACK_TRAVEL, R_STEER_SPEED, STEER_COMP, and
! STEER_KIN. Open-loop steering can be specified with the function STEER_SW (angle
! control) or M_STR_IN (torque control)

OPT_M_SW_CALC       0 ! [D] Option for calculating steering wheel torque when the
                      ! angle is controlled (OPT_STR_BY_TRQ = 0): 0 -> from table,
                      ! 1 -> calculated (see the steering Help document for
                      ! details) [I]
OPT_POWER           0 ! [D] Power steering? 0 -> No, 1 -> Rack or Gear assist, 2 ->
                      ! Column assist [I]
OPT_STEER_DEF       1 ! How are steer angles of knuckles defined? 1 -> as in K&C
                      ! test, 0 -> rotation angle about a kingpin axis
BETA_COL            2 ; deg ! [D] Ref hysteretic angle for steering column friction
D_COL               0 ; N-m-s/deg ! [D] Steering column viscous damping
HYS_COL             0 ; N-m ! [D] Steering column friction torque
A_STR_STOP_L      -45 ; deg ! [D] Steer angle limit during torque control (Left)
A_STR_STOP_R       45 ; deg ! [D] Steer angle limit during torque control (Right)
K_STR_STOP_L        0 ; N-m/deg ! [D] Steering stop stiffness (Left)
K_STR_STOP_R        0 ; N-m/deg ! [D] Steering stop stiffness (Right)

OPT_STEER_EXT(1)    0 ! Steer model option for axle 1: 0 -> Internal model, 1 -> Not
                      ! steered, 2 -> External gear/rack, 3 -> External except
                      ! tie-rod linkage, 4 -> Full external model [I]
OPT_CS(1)           1 ! Compliance steer option, axle 1: 0 -> symmetric, 1 ->
                      ! control L wheel, 2 -> control R wheel
OPT_RACK(1)         0 ! Steer gear type: 0 -> Recirc. ball, 1 -> Rack & pinion [I]
A_CASTER(1,1)     5.2 ; deg ! Caster for wheel L1 [I]
A_CASTER(1,2)     5.2 ; deg ! Caster for wheel R1 [I]
A_KPI(1,1)        7.2 ; deg ! Kingpin inclination for wheel L1 [I]
A_KPI(1,2)        7.2 ; deg ! Kingpin inclination for wheel R1 [I]
A_MZ_BETA(1,1)    0.1 ; deg ! Ref. hysteresis angle for L1 parking steer torque
A_MZ_BETA(1,2)    0.1 ; deg ! Ref. hysteresis angle for R1 parking steer torque
BETA_GEAR(1)        2 ; deg ! Ref hys. angle for steering gear friction, axle 1
CS_MZ_ROD(1)   0.0006 ; deg/N/m ! Compliance: steer due to tie rod, axle 1
CS_MZ_SHAFT(1) 0.0001 ; deg/N/m ! Compliance: steering shaft, axle 1
C_WRAP(1)    0.000186 ; deg/N/m ! Wrap compliance: (rel. axle pitch) / (total wheel
                      ! spin torque), axle 1
D_GEAR(1)           0 ; N-m-s/deg ! Steering gear viscous damping, axle 1
HYS_GEAR(1)         0 ; N-m ! Steering gear hysteresis, axle 1
L_KPO(1,1)        100 ; mm ! Lateral kingpin offset to center of wheel L1 [I]
L_KPO(1,2)        100 ; mm ! Lateral kingpin offset to center of wheel R1 [I]
R_BMP_STR(1)  0.00404 ; deg/mm ! Ratio: suspension steer per unit of jounce,
                      ! relative to design jounce (bump steer coefficient), axle 1
R_WRAP_STR(1)    0.14 ; - ! Ratio: suspension steer per relative axle pitch, axle 1
X_KPO(1,1)          0 ; mm ! X coord. of kingpin at center of wheel L1 [I]
X_KPO(1,2)          0 ; mm ! X coord. of kingpin at center of wheel R1 [I]

OPT_STEER_EXT(2)    1 ! Steer model option for axle 2: 1 -> Not steered, 0 ->
                      ! Internal model, 2 -> External gear/rack, 3 -> External
                      ! except tie-rod linkage, 4 -> Full external model [I]

!------------------------------------------------------------------------------------
! TIRES
!------------------------------------------------------------------------------------
! Tire behavior is specified with the following parameters. Depending on the
! selected options, the following nonlinear Configurable Functions might also be
! used: FX_TIRE, FY_TIRE, FYG_TIRE, FZ_TIRE, KGAMMA, L_CONTACT_X, L_CONTACT_Y,
! L_RELAX_X, L_RELAX_Y, MX_TIRE, MXG_TIRE, MZ_TIRE, STI_TYPARR, and Z_PROFILE

VLOW_DRIFT_X      0.1 ; km/h ! [D] Low speed limit: allow near-static Fx to avoid
                      ! drift when stopped on a grade
VLOW_DRIFT_Y      0.1 ; km/h ! [D] Low speed limit: allow near-static Fy to avoid
                      ! drift when stopped on a grade

L_DUAL(1)           0 ; mm ! Dual-tire spacing for axle 1 [I]
L_DUAL(2)         310 ; mm ! Dual-tire spacing for axle 2 [I]

OPT_TIRE_MODEL(1,1,1) 1 ! Internal tire shear-model option, tire L1i: 1 -> original
                        ! tabular model; 0 -> fully external model; 2 -> built-in
                        ! lags; 3 -> built-in for Fx, My, and lags; 6 -> tabular
                        ! with camber extensions; 7 -> built-in Pacejka 5.2; 8 ->
                        ! TNO Delft-Tyre; 9 -> COSIN FTire; 10 -> third-party STI
                        ! tire model [I]
OPT_TIRE_COMB(1,1,1) 0 ! Option for combined slip calculation: 0 -> use only
                       ! theoretical combined slip; 1 -> use transition between the
                       ! normalized and theoretical combined slip
OPT_TIRE_LAG_ALPHA(1,1,1) 1 ! Options for handling lag in tire alpha: 1 ->
                            ! transition to using instant slip when the time
                            ! constant is less than 12*TSTEP, 0 -> use fixed time
                            ! constant 12*TSTEP at high speeds
OPT_TIRE_LAG_KAPPA(1,1,1) 2 ! Options for handling lag in tire kappa: 2 -> use
                            ! instant slip when absolute kappa is decreasing and
                            ! transition to instant slip when the time constant is
                            ! less than 12*TSTEP; 1 -> transition to instant slip
                            ! when the time constant is less than 12*TSTEP; 0 ->
                            ! use fixed time constant 12*TSTEP at high speeds
FZ_MAX(1,1,1) 1000000 ; N ! Maximum allowed vertical force, tire L1i [I]
FZ_REF(1,1,1)   30000 ; N ! Reference vertical force: Not used directly in the VS
                      ! Math Model; provided as a standard reference for advanced
                      ! users to scale other parameters and Configurable Functions
                      ! for this tire
IT(1,1,1)         4.8 ; kg-m2 ! Spin inertia for tire L1i [I]
IT_XXZZ(1,1,1)      0 ; kg-m2 ! XX/ZZ inertia for tire L1i [I]
M_TIRE(1,1,1)      91 ; kg ! Mass of tire L1i
MU_REF_X(1,1,1)   0.8 ; - ! Ground friction during meas. of Fx data, tire L1i
MU_REF_Y(1,1,1)   0.8 ; - ! Ground friction during meas. of Fy data, tire L1i
R0(1,1,1)         520 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(1,1,1)        510 ; mm ! Effective rolling radius (Vx/AVy), tire L1i [I]
RR_C(1,1,1)    0.0041 ; - ! Rolling resistance: MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(1,1,1)        1 ; - ! Switch: 0 -> do not add the effect of tire Fx to the
                      ! rolling resistance moment MyRR; 1 add the effect
RR_V(1,1,1)  2.56e-05 ; h/km ! Rolling resistance: MyRR = R*Fz*RR_surf*(RR_c +
                      ! RR_v*Vx)
VLOW_ALPHA(1,1,1)   2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(1,1,1)  0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(1,1,1)   2 ; km/h ! Minimum Vx used in ODE for lagged kappa


OPT_TIRE_MODEL(1,2,1) 1 ! Internal tire shear-model option, R1i [I]
OPT_TIRE_COMB(1,2,1) 0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(1,2,1) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(1,2,1) 2 ! Options for handling lag in kappa
FZ_MAX(1,2,1) 1000000 ; N ! Maximum allowed vertical force, tire R1i [I]
FZ_REF(1,2,1)   30000 ; N ! Reference vertical force
IT(1,2,1)         4.8 ; kg-m2 ! Spin inertia for tire R1i [I]
IT_XXZZ(1,2,1)      0 ; kg-m2 ! XX/ZZ inertia for tire R1i [I]
M_TIRE(1,2,1)      91 ; kg ! Mass of tire R1i
MU_REF_X(1,2,1)   0.8 ; - ! Ground friction during meas. of Fx data, tire R1i
MU_REF_Y(1,2,1)   0.8 ; - ! Ground friction during meas. of Fy data, tire R1i
R0(1,2,1)         520 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(1,2,1)        510 ; mm ! Effective rolling radius (Vx/AVy), tire R1i [I]
RR_C(1,2,1)    0.0041 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(1,2,1)        1 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(1,2,1)  2.56e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(1,2,1)   2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(1,2,1)  0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(1,2,1)   2 ; km/h ! Minimum Vx used in ODE for lagged kappa


OPT_TIRE_MODEL(2,1,1) 1 ! Internal tire shear-model option, L2i [I]
OPT_TIRE_COMB(2,1,1) 0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(2,1,1) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(2,1,1) 2 ! Options for handling lag in kappa
FZ_MAX(2,1,1) 1000000 ; N ! Maximum allowed vertical force, tire L2i [I]
FZ_REF(2,1,1)   30000 ; N ! Reference vertical force
IT(2,1,1)         4.8 ; kg-m2 ! Spin inertia for tire L2i [I]
IT_XXZZ(2,1,1)      0 ; kg-m2 ! XX/ZZ inertia for tire L2i [I]
M_TIRE(2,1,1)      91 ; kg ! Mass of tire L2i
MU_REF_X(2,1,1)   0.8 ; - ! Ground friction during meas. of Fx data, tire L2i
MU_REF_Y(2,1,1)   0.8 ; - ! Ground friction during meas. of Fy data, tire L2i
R0(2,1,1)         520 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(2,1,1)        510 ; mm ! Effective rolling radius (Vx/AVy), tire L2i [I]
RR_C(2,1,1)    0.0041 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(2,1,1)        1 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(2,1,1)  2.56e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(2,1,1)   2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(2,1,1)  0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(2,1,1)   2 ; km/h ! Minimum Vx used in ODE for lagged kappa

OPT_TIRE_MODEL(2,1,2) 1 ! Internal tire shear-model option, L2o [I]
OPT_TIRE_COMB(2,1,2) 0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(2,1,2) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(2,1,2) 2 ! Options for handling lag in kappa
FZ_MAX(2,1,2) 1000000 ; N ! Maximum allowed vertical force, tire L2o [I]
FZ_REF(2,1,2)   30000 ; N ! Reference vertical force
IT(2,1,2)         4.8 ; kg-m2 ! Spin inertia for tire L2o [I]
IT_XXZZ(2,1,2)      0 ; kg-m2 ! XX/ZZ inertia for tire L2o [I]
M_TIRE(2,1,2)      91 ; kg ! Mass of tire L2o
MU_REF_X(2,1,2)   0.8 ; - ! Ground friction during meas. of Fx data, tire L2o
MU_REF_Y(2,1,2)   0.8 ; - ! Ground friction during meas. of Fy data, tire L2o
R0(2,1,2)         520 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(2,1,2)        510 ; mm ! Effective rolling radius (Vx/AVy), tire L2o [I]
RR_C(2,1,2)    0.0041 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(2,1,2)        1 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(2,1,2)  2.56e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(2,1,2)   2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(2,1,2)  0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(2,1,2)   2 ; km/h ! Minimum Vx used in ODE for lagged kappa

OPT_TIRE_MODEL(2,2,1) 1 ! Internal tire shear-model option, R2i [I]
OPT_TIRE_COMB(2,2,1) 0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(2,2,1) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(2,2,1) 2 ! Options for handling lag in kappa
FZ_MAX(2,2,1) 1000000 ; N ! Maximum allowed vertical force, tire R2i [I]
FZ_REF(2,2,1)   30000 ; N ! Reference vertical force
IT(2,2,1)         4.8 ; kg-m2 ! Spin inertia for tire R2i [I]
IT_XXZZ(2,2,1)      0 ; kg-m2 ! XX/ZZ inertia for tire R2i [I]
M_TIRE(2,2,1)      91 ; kg ! Mass of tire R2i
MU_REF_X(2,2,1)   0.8 ; - ! Ground friction during meas. of Fx data, tire R2i
MU_REF_Y(2,2,1)   0.8 ; - ! Ground friction during meas. of Fy data, tire R2i
R0(2,2,1)         520 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(2,2,1)        510 ; mm ! Effective rolling radius (Vx/AVy), tire R2i [I]
RR_C(2,2,1)    0.0041 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(2,2,1)        1 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(2,2,1)  2.56e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(2,2,1)   2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(2,2,1)  0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(2,2,1)   2 ; km/h ! Minimum Vx used in ODE for lagged kappa

OPT_TIRE_MODEL(2,2,2) 1 ! Internal tire shear-model option, R2o [I]
OPT_TIRE_COMB(2,2,2) 0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(2,2,2) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(2,2,2) 2 ! Options for handling lag in kappa
FZ_MAX(2,2,2) 1000000 ; N ! Maximum allowed vertical force, tire R2o [I]
FZ_REF(2,2,2)   30000 ; N ! Reference vertical force
IT(2,2,2)         4.8 ; kg-m2 ! Spin inertia for tire R2o [I]
IT_XXZZ(2,2,2)      0 ; kg-m2 ! XX/ZZ inertia for tire R2o [I]
M_TIRE(2,2,2)      91 ; kg ! Mass of tire R2o
MU_REF_X(2,2,2)   0.8 ; - ! Ground friction during meas. of Fx data, tire R2o
MU_REF_Y(2,2,2)   0.8 ; - ! Ground friction during meas. of Fy data, tire R2o
R0(2,2,2)         520 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(2,2,2)        510 ; mm ! Effective rolling radius (Vx/AVy), tire R2o [I]
RR_C(2,2,2)    0.0041 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(2,2,2)        1 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(2,2,2)  2.56e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(2,2,2)   2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(2,2,2)  0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(2,2,2)   2 ; km/h ! Minimum Vx used in ODE for lagged kappa

!------------------------------------------------------------------------------------
! BRAKES
!------------------------------------------------------------------------------------
! The brake system is specified with the following parameters along with the
! nonlinear Configurable Functions BRAKE_COOL, F_BRAKE_PEDAL_BOOST, MY_BRAKE,
! MY_BRAKE_TEMP, PBK_CALIPER, and PBK_DL. Open-loop braking can be specified with
! the function F_BRAKE_PEDAL (pedal force) or PBK_CON (master cylinder pressure)

LOCK_BK_R_FREQ     33 ; - ! [D] Ratio: simulation update frequency (1/dt) divided by
                      ! torsional natural frequency of a wheel during brake lockup
LOCK_BK_ZETA        2 ; - ! [D] Torsional damping ratio of each wheel during lockup

OPT_BK_PEDAL        0 ! Brake input: 0 -> pressure (M/C), 1 -> pedal force (manual),
                      ! 2 -> pedal force with boost

OPT_BK_DYN(1,1)     1 ! Fluid dynamics: 1 -> time constant for actuator pressure, 2
                      ! -> hydraulic resistance for flow into actuator, 0 -> no
                      ! dynamics (instant actuator response)
OPT_BK_THERMAL(1,1) 0 ! [D] Brake L1 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(1,1)    2 ; N-m ! Bearing/brake friction, wheel L1
TC_BK(1,1)       0.06 ; s ! Time constant for brake actuator L1
TLAG_BK(1,1)        0 ; s ! Transport time delay for fluid to reach brake L1 [I]

OPT_BK_DYN(1,2)     1 ! Dynamics: 1 -> time const., 2 -> hyd. res., 0 -> none
OPT_BK_THERMAL(1,2) 0 ! [D] Brake R1 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(1,2)    2 ; N-m ! Bearing/brake friction, wheel R1
TC_BK(1,2)       0.06 ; s ! Time constant for brake actuator R1
TLAG_BK(1,2)        0 ; s ! Transport time delay for fluid to reach brake R1 [I]

OPT_BK_DYN(2,1)     1 ! Dynamics: 1 -> time const., 2 -> hyd. res., 0 -> none
OPT_BK_THERMAL(2,1) 0 ! [D] Brake L2 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(2,1)    2 ; N-m ! Bearing/brake friction, wheel L2
TC_BK(2,1)       0.06 ; s ! Time constant for brake actuator L2
TLAG_BK(2,1)        0 ; s ! Transport time delay for fluid to reach brake L2 [I]

OPT_BK_DYN(2,2)     1 ! Dynamics: 1 -> time const., 2 -> hyd. res., 0 -> none
OPT_BK_THERMAL(2,2) 0 ! [D] Brake R2 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(2,2)    2 ; N-m ! Bearing/brake friction, wheel R2
TC_BK(2,2)       0.06 ; s ! Time constant for brake actuator R2
TLAG_BK(2,2)        0 ; s ! Transport time delay for fluid to reach brake R2 [I]

!------------------------------------------------------------------------------------
! POWERTRAIN
!------------------------------------------------------------------------------------
! The powertrain model is specified with the following parameters along with up to
! 25 nonlinear Configurable Functions. Open-loop throttle can be specified with the
! function THROTTLE_ENGINE. Engine behavior is specified in part with the functions
! MENGINE and FUEL_RATE.

OPT_PT              2 ! Powertrain type: 0 -> Simple, 1 -> front-axle-drive, 2 ->
                      ! rear-axle-drive, 3 -> 2-axle- drive, 4 -> 3-axle-drive, 5
                      ! -> 4-axle-drive, 6 -> 5-axle-drive, 7->AVL Cruise
R_DRIVE_SC(1)       0 ; - ! Ratio: [axle drive torque]/[total drive torque] [I]
R_DRIVE_SC(2)       1 ; - ! Ratio: [axle drive torque]/[total drive torque] [I]
OPT_HEV             0 ! Propulsion types: 0 -> internal-combustion engine, 1 ->
                      ! hybrid electric, 2 -> electric
R_MDRIVE            1 ; - ! Multiplier for driveshaft torque acting on sprung mass
                      ! from drive axle: +1 -> cause positive vehicle roll, -1 ->
                      ! cause negative vehicle roll, 0 -> no effect. [I]
VLOW_IW             0 ; km/h ! [D] Increase wheel spin inertia below this speed to
                      ! fix instability with some HIL systems; set 0 to disable

! The powertrain differentials are specified with the following parameters along
! with the functions M_DIFF_VISC, CLUTCH_CONTROL_DIFF, CLUTCH_TORQUE_DIFF,
! CLUTCH_TORQUE_DIFF2, CLUTCH_TWIN, and M_TWIN.

OPT_DIFF_INTERNAL(2) 1 ! 2nd drive axle diff model: 1 -> internal, 0 -> external [I]
OPT_LOCKED_DIFF(2)  0 ! Is the 2nd drive axle diff locked? 0 -> no, 1 -> yes [I]
LOCKED_DIFF_DAMP(2) 0.8 ; N-m-s/deg ! Torsional damping for locked 2nd drive axle
                        ! diff [I]
LOCKED_DIFF_K(2)   80 ; N-m/deg ! Torsional spring rate for locked 2nd drive axle
                      ! diff [I]
R_EFF_F_DIFF(2)  0.99 ; - ! Forward efficiency of 2nd drive axle diff [I]
R_EFF_R_DIFF(2)  0.99 ; - ! Reverse efficiency of 2nd drive axle diff [I]
R_GEAR_DIFF(2)      5 ; - ! Gear ratio of 2nd drive axle diff [I]
IDS(2)          0.013 ; kg-m2 ! Spin inertia of 2nd drive axle diff input shaft [I]
IHS_L(2)        0.009 ; kg-m2 ! Spin inertia of left half shaft, 2nd drive axle diff
                      ! [I]
IHS_R(2)        0.009 ; kg-m2 ! Spin inertia of right half shaft, 2nd drive axle
                      ! diff [I]
OPT_CLUTCH_DIFF(2)  0 ! [D] Clutch control for 2nd drive axle diff: 0 -> table
                      ! lookup or external, 1 -> Torsen parameters, 2 -> yaw
                      ! control [I]
OPT_TWIN_CLUTCH(2)  0 ! [D] Twin clutches on 2nd drive axle diff? 0 -> no, 1 -> yes
                      ! [I]

!------------------------------------------------------------------------------------
! ENGINE
!------------------------------------------------------------------------------------
INSTALL_ENGINE        ! VS Command to install an engine

OPT_ENGINE_INTERNAL 1 ! Engine model: 1 -> internal, 0 -> external [I]
OPT_ENGINE_RUNNING  1 ! [D] Is engine running? 1 -> yes, 0 -> no
OPT_THROTTLE_DELAY  0 ! Use throttle time constants: 0 -> no, 1 -> yes
AV_ENG_IDLE       725 ; rpm ! Engine idle speed [I]
ENGINE_ESC_PG       5 ; 1/s ! [D] P gain of ESC engine torque control
ENGINE_ESC_IG     0.5 ; 1/s2 ! [D] I gain of ESC engine torque control
ENGINE_STALL_DAMP 0.2 ; N-m-s/deg ! [D] Damping rate of the stalled engine
IENG             1.75 ; kg-m2 ! Spin inertia of engine crankshaft [I]
ITC_INPUT_SHAFT 0.015 ; kg-m2 ! Spin inertia of input shaft of torque converter

!------------------------------------------------------------------------------------
! TORQUE TRANSFER DEVICE
!------------------------------------------------------------------------------------
! Transfer of power from the engine to the transmission is specified with the
! following parameters along with the functions CLUTCH_TORQUE, INV_CAP_TC, and
! RM_TC. Open-loop clutch control can be specified with the function
! CLUTCH_CONTROL.

INSTALL_TORQUE_TRANSFER_DEVICE  ! VS Command to install a clutch or torque converter

OPT_CLUTCH          1 ! Torque transfer to transmission: 0 -> hydraulic torque
                      ! converter, 1 -> mechanical clutch, 2 -> torque converter
                      ! with lock-up clutch, 3 -> centrifugal clutch [I]
OPT_CLUTCH_MODE     1 ! Clutch control mode: 0 -> open-loop, 1 -> closed-loop (based
                      ! on shifting) [I]
OPT_CLUTCH_DELAY    1 ! Use clutch torque time constants: 0 -> no, 1 -> yes
OPT_PWR_CPL_INTERNAL 1 ! Internal power coupling model (torque converter and
                       ! clutch): 1 -> internal, 0 -> external
TC_CLUTCH_DISENGAGE 0.001 ; s ! Time constant for clutch torque (disengage)
TC_CLUTCH_ENGAGE  0.1 ; s ! Time constant for clutch torque (engage)
T_CL_DISENGAGE    0.1 ; s ! Time when clutch is fully disengaged [I]
T_CL_HALF_HOLD    0.1 ; s ! Time holding the clutch at half pressure [I]
! T_CL_HALF_TOTAL 0.2 ; s ! CALC -- Time releasing the clutch during shift
! T_CL_PRESS_HOLD 0.2 ; s ! CALC -- Time holding the clutch fully disengaged
T_CL_PRESS_TOTAL  0.3 ; s ! Time applying the clutch to full pressure during shift
                      ! [I]
T_CL_RE_ENGAGE    0.5 ; s ! Time clutch is fully re-engaged after starting shift [I]
T_GEAR_LAG        0.1 ; s ! Time lag in shifting
! T_TH_RETURN     0.1 ; s ! CALC -- Time spent returning to original throttle [I]
T_TH_RETURNED     0.4 ; s ! Time when throttle has returned to pre-shift level [I]
T_TH_ZERO         0.1 ; s ! Time when throttle drops to zero [I]
! T_TH_ZERO_HOLD  0.2 ; s ! CALC -- Time holding zero throttle during shift [I]
T_TH_ZERO_TOTAL   0.3 ; s ! Time when starting to return throttle [I]
VLOW_CLUTCH         5 ; km/h ! Press the clutch pedal when average of wheel speeds
                      ! is below this speed while deccelerating with brake during
                      ! the simulation, or accelerating from stop when the
                      ! simulation starts. [I]

!------------------------------------------------------------------------------------
! TRANSMISSION
!------------------------------------------------------------------------------------
! The transmission is specified with the following parameters and the functions
! DOWNSHIFT_TRANS, UPSHIFT_TRANS, LOCK_AT, UNLOCK_AT, R_GEAR_CVT, R_EFF_CVT_F, and
! R_EFF_CVT_R. Transmission controller mode can be specified with the open-loop
! function MODE_TRANS and transmission gear can be specified with the open-loop
! function GEAR_TRANS.

INSTALL_TRANSMISSION  ! VS Command to install a transmission

OPT_TRANS_INTERNAL  1 ! Transmission model: 1 -> internal, 0 -> external [I]
OPT_TR_GEAR_INTERNAL 1 ! Transmission gear ratio and inertia: 1 -> up to 18 gears, 2
                       ! -> continuously variable (CVT), 0 -> external model [I]
NGEARS              7 ! Number of gears in transmission [I]
OPT_SHIFT_INTERNAL  1 ! Gear shift command model: 1 -> internal, 0 -> external [I]
ITC_OUTPUT_SHAFT 0.09 ; kg-m2 ! Spin inertia of torque converter output shaft [I]
ITR_NEUTRAL       0.2 ; kg-m2 ! Neutral-gear spin inertia of transmission
ITR_REVERSE       0.2 ; kg-m2 ! Reverse-gear spin inertia of transmission
R_EFF_TR_F_REVERSE 0.9 ; - ! Reverse-gear forward efficiency of transmission
R_EFF_TR_R_REVERSE 0.9 ; - ! Reverse-gear reverse efficiency of transmission
R_GEAR_TR_REVERSE -6.15 ; - ! Reverse-gear ratio of trans. (should be negative)
T_SHIFT          0.25 ; s ! Shift duration in closed-loop transmission control

ITR(1)           0.25 ; kg-m2 ! 1st-gear transmission spin inertia at output shaft
                      ! (Transmission spin inertias do not include the torque
                      ! converter)
R_EFF_TR_F(1)    0.92 ; - ! 1st-gear forward efficiency of transmission
R_EFF_TR_R(1)    0.92 ; - ! 1st-gear reverse efficiency of transmission
R_GEAR_TR(1)      6.5 ; - ! 1st-gear ratio of transmission
T_SHIFT_UP(1)      -1 ; - ! [D] Duration of up-shift from 1st-gear [I]
T_SHIFT_DOWN(1)    -1 ; - ! [D] Duration of down-shift to 1st-gear [I]

ITR(2)           0.25 ; kg-m2 ! 2nd-gear trans output shaft spin inertia
R_EFF_TR_F(2)    0.92 ; - ! 2nd-gear forward efficiency of transmission
R_EFF_TR_R(2)    0.92 ; - ! 2nd-gear reverse efficiency of transmission
R_GEAR_TR(2)      4.2 ; - ! 2nd-gear ratio of transmission
T_SHIFT_UP(2)      -1 ; - ! [D] Duration of up-shift from 2nd-gear
T_SHIFT_DOWN(2)    -1 ; - ! [D] Duration of down-shift to 2nd-gear

ITR(3)            0.2 ; kg-m2 ! 3rd-gear trans output shaft spin inertia
R_EFF_TR_F(3)    0.92 ; - ! 3rd-gear forward efficiency of transmission
R_EFF_TR_R(3)    0.92 ; - ! 3rd-gear reverse efficiency of transmission
R_GEAR_TR(3)     2.55 ; - ! 3rd-gear ratio of transmission
T_SHIFT_UP(3)      -1 ; - ! [D] Duration of up-shift from 3rd-gear
T_SHIFT_DOWN(3)    -1 ; - ! [D] Duration of down-shift to 3rd-gear

ITR(4)            0.2 ; kg-m2 ! 4th-gear trans output shaft spin inertia
R_EFF_TR_F(4)    0.92 ; - ! 4th-gear forward efficiency of transmission
R_EFF_TR_R(4)    0.92 ; - ! 4th-gear reverse efficiency of transmission
R_GEAR_TR(4)     1.55 ; - ! 4th-gear ratio of transmission
T_SHIFT_UP(4)      -1 ; - ! [D] Duration of up-shift from 4th-gear
T_SHIFT_DOWN(4)    -1 ; - ! [D] Duration of down-shift to 4th-gear

ITR(5)            0.2 ; kg-m2 ! 5th-gear trans output shaft spin inertia
R_EFF_TR_F(5)    0.92 ; - ! 5th-gear forward efficiency of transmission
R_EFF_TR_R(5)    0.92 ; - ! 5th-gear reverse efficiency of transmission
R_GEAR_TR(5)        1 ; - ! 5th-gear ratio of transmission
T_SHIFT_UP(5)      -1 ; - ! [D] Duration of up-shift from 5th-gear
T_SHIFT_DOWN(5)    -1 ; - ! [D] Duration of down-shift to 5th-gear

ITR(6)            0.2 ; kg-m2 ! 6th-gear trans output shaft spin inertia
R_EFF_TR_F(6)    0.92 ; - ! 6th-gear forward efficiency of transmission
R_EFF_TR_R(6)    0.92 ; - ! 6th-gear reverse efficiency of transmission
R_GEAR_TR(6)     0.75 ; - ! 6th-gear ratio of transmission
T_SHIFT_UP(6)      -1 ; - ! [D] Duration of up-shift from 6th-gear
T_SHIFT_DOWN(6)    -1 ; - ! [D] Duration of down-shift to 6th-gear

ITR(7)            0.2 ; kg-m2 ! 7th-gear trans output shaft spin inertia
R_EFF_TR_F(7)    0.92 ; - ! 7th-gear forward efficiency of transmission
R_EFF_TR_R(7)    0.92 ; - ! 7th-gear reverse efficiency of transmission
R_GEAR_TR(7)     0.65 ; - ! 7th-gear ratio of transmission

DRIVELINE_FREQ      9 ; Hz ! Natural frequency of entire driveline, including
                      ! transmission, differentials, and wheels, not including
                      ! engine. [I]
DRIVELINE_ZETA    0.9 ; - ! Damping ratio of entire driveline, including
                      ! transmission, differentials, and wheels, not including
                      ! engine. [I]

!------------------------------------------------------------------------------------
! REFERENCE PATHS
!------------------------------------------------------------------------------------
! Up to 500 reference paths may be installed to provide station-based coordinate
! systems used to define 3D road surfaces, targets for the driver model, and
! positions of moving objects. In addition to the parameters shown in this section,
! the paths may include spline X-Y tables (keyword = SEGMENT_XY_TABLE).

! NPATH             1 ! Number of installed paths available for roads, driver model,
                      ! and moving objects (read only)
DEFINE_PATHS        1 ! VS Command to install reference paths

PATH_ID(1)          1 ; Straight Path East
OPT_PATH_START(1)   0 ! Set initial heading and X-Y coordinates of the path? 0 -> no
                      ! (legacy, using table data), 1 -> yes
OPT_PATH_LOOP(1)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(1)      0 ; m ! Station at the start of this path
! HEADING_START(1)  0 ; deg ! Heading at the start of this path
! X_PATH_START(1)   0 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(1)   0 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(1)        1 ! Number of segments in this path
SEGMENT_TYPE(1,1)   0 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_LENGTH(1,1) 100 ; m ! Segment length
! S_SEGMENT_END(1,1) 100 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,1) 100 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,1) 0 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,1)  0 ; deg ! CALC -- Heading at end of segment

!------------------------------------------------------------------------------------
! ROAD SURFACES
!------------------------------------------------------------------------------------
! Road surfaces define elevation Z and friction MU as functions of global X and Y
! coordinates, using a station-based coordinate system defined with a Reference
! Path. Up to 200 surfaces may be installed to represent sections, intersections,
! multiple lanes, etc. The Z, MU, and RR_SURF values for a road surface are
! provided with Configurable Functions MU_ROAD, ROAD_DZ, RR_SURF, and ROAD_ZS.
! Boundaries that control automatic switching from one road surface to another make
! use of the Configurable Functions ROAD_L_BOUNDARY, ROAD_NEW_ID, and ROAD_NEW_S.

! NROAD             1 ! Number of installed road surfaces (read only)
NROAD_DZ            0 ! [D] Number of ROAD_DZ datasets
DEFINE_ROADS        1 ! VS Command to define road surfaces
CURRENT_ROAD_ID     1 ! ROAD_ID during initialization [I]

ROAD_ID(1)          1 ; 1200 m, One Lane, Mu = 0.85 (No Trees)
ROAD_PATH_ID(1)     1 ; PATH_ID for: Straight Path East
ROAD_SMAX_NEW_ID(1) 0 ! [D] 0 -> No SMAX limit, -1 -> stop if S > ROAD_SMAX, > 0 ->
                      ! switch to road with this ID if S > ROAD_SMAX
ROAD_SMIN_NEW_ID(1) 0 ! [D] 0 -> No SMIN limit, -1 -> stop if S < ROAD_SMIN, > 0 ->
                      ! switch to road with this ID if S < ROAD_SMIN
ROAD_N_DZ(1)        0 ! [D] Number of ROAD_DZ layers added to the surface

!------------------------------------------------------------------------------------
! DRIVER MODEL: STEERING CONTROLLER AND VEHICLE REFERENCE PATH
!------------------------------------------------------------------------------------
! The built-in steering controller is a closed-loop path follower that calculates
! steering wheel angle in order to follow a specified lateral offset (LTARG_ID =
! LTARG_ID_DM) relative to a specified reference path (PATH_ID = PATH_ID_DM).
! Preview time is calculated with the Configurable Function TPREV.

N_LTARG             1 ! Number of LTARG datasets that are used in this run

PATH_ID_DM          1 ! PATH_ID of the vehicle and DM reference path [I]
LTARG_ID_DM         1 ! LTARG_ID of LTARG dataset for DM (0 -> LTARG = 0)
OPT_INIT_PATH       0 ! Set Xo, Yo, and Yaw to match path PATH_ID_DM and LTARG_ID_DM
                      ! at station SSTART? 1 -> yes, 0 -> no [I]
OPT_DIRECTION       1 ! Travel direction along path PATH_ID_DM: 0 -> set to 1 or -1
                      ! using SSTART and SSTOP values (legacy); 1 -> increasing
                      ! station, -1 -> decreasing station [I]
SSTOP     2134.361015 ; m ! Use to set OPT_DIRECTION (if OPT_DIRECTION = 0); stop
                      ! when the vehicle reaches this station (if OPT_STOP = 1)

OPT_DM              3 ! Driver model option: 0 -> no driver model; 1 -> use linear
                      ! dynamic model and 10 preview points; 2 -> same as 1, but
                      ! with no rear steer effect (legacy); 3 -> use geometry and a
                      ! single preview point [I]
OPT_DRIVER_ACTION   1 ! [D] Use steer from driver model (Steer_DM) when OPT_DM > 0?
                      ! 1 -> use Steer_DM, 0 -> ignore Steer_DM [I]
OPT_STR_BY_TRQ      0 ! Control by steering wheel torque? 0 -> no, 1 -> yes [I]
A_SW_MAX_DM       720 ; deg ! Limit steering wheel angle for DM
AV_SW_MAX_DM     1200 ; deg/s ! Limit steering wheel rate for DM
VLOW_DM            10 ; km/h ! Minimum speed for preview dist = V*TPREV
! XREF_DM           0 ; mm ! CALC -- Local X coordinate of DM reference point
XREF_DM_F           0 ; mm ! [D] X distance of DM ref. point in front of axle 1
XREF_DM_R           0 ; mm ! [D] X distance of DM ref. point in front of rear axle
YREF_DM             0 ; mm ! [D] Local Y coordinate of DM ref. point
! NPREVIEW          0 ! No. of installed preview sensors for external DM (read only)

!------------------------------------------------------------------------------------
! DRIVER MODEL: SPEED CONTROLLER
!------------------------------------------------------------------------------------
N_SPEED_TARGET      2 ! Number of SPEED_TARGET datasets for driver model, moving
                      ! objects, and VS Commands that are written below: 0 - 200

INSTALL_SPEED_CONTROLLER  ! VS Command to install the built-in speed controller
! The speed controller uses throttle and braking controls to follow target speed
! specified as a function of time and/or station along reference path PATH_ID_DM.
! The target speed is specified with Configurable Function SPEED_TARGET. If the
! speed is based on the path, then acceleration limits are specified using
! functions SPEED_AX_BRAKE, SPEED_AX_THROTTLE, SPEED_AY_LEFT, and SPEED_AY_RIGHT.

OPT_SC              3 ! Speed controller: 0 -> Off (open-loop), 1 - 3, target speed
                      ! is function of time and station, 4 -> target speed is
                      ! determined using path preview, 5 -> use acceleration
                      ! command Ax_SCcmd [I]
OPT_AUTO_RESET_IC   1 ! [D] Reset integral of speed error Vx_Err when Vx_Err changes
                      ! sign AND |Vx_IErr| > VX_IERR_DEAD_SC: 1 -> yes, 0 -> no
OPT_BK_SC           0 ! [D] Braking and SC: 0 -> turn controller off while brakes
                      ! are applied, 1 -> controller can use the brakes
OPT_SC_ENGINE_BRAKING 0 ! Use engine braking to control speed? 0 -> no, 1 -> yes
SPEED_ID_SC         2 ! SPEED_TARGET_ID for speed controller [I]
SPEED_KP         0.14 ; s/m ! [D] Speed controller: proportional control gain
SPEED_KP3           0 ; s3/m3 ! [D] Speed controller: cubic (verr^3) control gain
SPEED_KI         0.16 ; 1/m ! [D] Speed controller: integral control gain
VX_IERR_DEAD_SC     1 ; m ! [D] Integral control deadband for auto reset

!------------------------------------------------------------------------------------
! MOTION SENSORS
!------------------------------------------------------------------------------------
GPS_REF_ALT       250 ; m ! [D] GPS altitude when Z = 0
GPS_REF_LAT    42.231 ; deg ! [D] GPS latitude when Y = GPS_REF_Y [I]
GPS_REF_LONG  -83.727 ; deg ! [D] GPS longitude at GPS_REF_X and GPS_REF_Y
GPS_RANGE_Y      5000 ; m ! [D] Range in Y allowed before a GPS reset
GPS_REF_X           0 ; m ! [D] X coordinate at GPS_REF_LAT and GPS_REF_LONG
GPS_REF_Y           0 ; m ! [D] Y coordinate at GPS_REF_LAT

! NSENSOR_M         0 ! Number of installed custom motion sensors (read only)

!------------------------------------------------------------------------------------
! REFERENCE POINTS AND IMPORTED FORCES
!------------------------------------------------------------------------------------
! NREF_PT           0 ! Number of installed reference points and forces (read only)

!------------------------------------------------------------------------------------
! ABS CONTROLLER
!------------------------------------------------------------------------------------
INSTALL_ABS_CONTROLLER  ! VS Command to install the built-in ABS controller

OPT_ABS_CTRL(1)     2 ! ABS control option, axle 1: 0 -> No ABS, 1-> Single control
                      ! channel for axle, 2 -> Independent control channels for
                      ! each wheel
ABS_SLIP_ON(1)    0.1 ; - ! ABS: allow braking for slip below this limit
ABS_SLIP_OFF(1)   0.2 ; - ! ABS: release brake for slip above this limit
ABS_VMIN(1)         6 ; km/h ! Disable ABS for speed below this limit

OPT_ABS_CTRL(2)     2 ! ABS control option, axle 2
ABS_SLIP_ON(2)    0.1 ; - ! ABS: allow braking for slip below this limit
ABS_SLIP_OFF(2)   0.2 ; - ! ABS: release brake for slip above this limit
ABS_VMIN(2)         6 ; km/h ! Disable ABS for speed below this limit

!------------------------------------------------------------------------------------
! CONFIGURABLE FUNCTIONS
!------------------------------------------------------------------------------------

! CC_FX: Compliance: wheel camber due to in- and out-phase Fx. Camber displacement
! can be a nonlinear CARPET function of force (other side) and force or a function of
! force (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Camber displacement from the calculation can be adjusted with
! CC_FX_GAIN and CC_FX_OFFSET. Force used in the calculation can be adjusted with
! F_SCALE_CC_FX and F_START_CC_FX. Force (other side) used in the calculation can be
! adjusted with F2_SCALE_CC_FX and F2_START_CC_FX. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

CC_FX_COEFFICIENT(1,1) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 1, left side
CC_FX_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(1,1)  1 ! Scale factor divided into (force - F_START_CC_FX)

CC_FX_COEFFICIENT(1,2) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 1, right side
CC_FX_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(1,2)  1 ! Scale factor divided into (force - F_START_CC_FX)

CC_FX_COEFFICIENT(2,1) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 2, left side
CC_FX_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(2,1)  1 ! Scale factor divided into (force - F_START_CC_FX)

CC_FX_COEFFICIENT(2,2) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 2, right side
CC_FX_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(2,2)  1 ! Scale factor divided into (force - F_START_CC_FX)

! CI_FY: Compliance: inclination of wheel due in- and out-phase Fy. Inclination
! displacement can be a nonlinear CARPET function of force (other side) and force or
! a function of force (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. Inclination displacement from the calculation
! can be adjusted with CI_FY_GAIN and CI_FY_OFFSET. Force used in the calculation can
! be adjusted with F_SCALE_CI_FY and F_START_CI_FY. Force (other side) used in the
! calculation can be adjusted with F2_SCALE_CI_FY and F2_START_CI_FY. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CI_FY_COEFFICIENT(1,1) 0 ! Coefficient: inclination displacement per unit force
                         ! (deg/N), axle 1, left side
CI_FY_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(1,1)  1 ! Scale factor divided into (force - F_START_CI_FY)

CI_FY_COEFFICIENT(1,2) 0 ! Coefficient: inclination displacement per unit force
                         ! (deg/N), axle 1, right side
CI_FY_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(1,2)  1 ! Scale factor divided into (force - F_START_CI_FY)

CI_FY_COEFFICIENT(2,1) 0 ! Coefficient: inclination displacement per unit force
                         ! (deg/N), axle 2, left side
CI_FY_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(2,1)  1 ! Scale factor divided into (force - F_START_CI_FY)

CI_FY_COEFFICIENT(2,2) 0 ! Coefficient: inclination displacement per unit force
                         ! (deg/N), axle 2, right side
CI_FY_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(2,2)  1 ! Scale factor divided into (force - F_START_CI_FY)

! CI_MZ: Compliance: inclination of wheel due to in- and out-phase Mz. Inclination
! displacement can be a nonlinear CARPET function of moment (other side) and moment
! or a function of moment (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. Inclination displacement from the calculation
! can be adjusted with CI_MZ_GAIN and CI_MZ_OFFSET. Moment used in the calculation
! can be adjusted with M_SCALE_CI_MZ and M_START_CI_MZ. Moment (other side) used in
! the calculation can be adjusted with M2_SCALE_CI_MZ and M2_START_CI_MZ. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CI_MZ_COEFFICIENT(1,1) 0 ! Coefficient: inclination displacement per unit moment
                         ! (deg/N-m), axle 1, left side
CI_MZ_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(1,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(1,1)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

CI_MZ_COEFFICIENT(1,2) 0 ! Coefficient: inclination displacement per unit moment
                         ! (deg/N-m), axle 1, right side
CI_MZ_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(1,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(1,2)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

CI_MZ_COEFFICIENT(2,1) 0 ! Coefficient: inclination displacement per unit moment
                         ! (deg/N-m), axle 2, left side
CI_MZ_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(2,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(2,1)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

CI_MZ_COEFFICIENT(2,2) 0 ! Coefficient: inclination displacement per unit moment
                         ! (deg/N-m), axle 2, right side
CI_MZ_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(2,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(2,2)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

! CLUTCH_CONTROL_DIFF: Differential clutch control input based on total torque
! applied to both output shafts. Normalized clutch input is a function of torque
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Normalized clutch input from the calculation can be adjusted with
! CLUTCH_CONTROL_DIFF_GAIN and CLUTCH_CONTROL_DIFF_OFFSET. Torque used in the
! calculation can be adjusted with M_SCALE_CL_CON_DIFF and M_START_CL_CON_DIFF. This
! configurable function supports 9 datasets; if indices shown below are not used,
! e.g., (2), the current value of the index IDIFF is used to identify the dataset
! when reading data.

CLUTCH_CONTROL_DIFF_CONSTANT(2) 1 ; - ! [D] Constant normalized clutch input, 2nd
                                  ! drive axle diff
CLUTCH_CONTROL_DIFF_GAIN(2) 1 ! Gain multiplied with calculated value to get
                              ! normalized clutch input
CLUTCH_CONTROL_DIFF_OFFSET(2) 0 ; - ! Offset added (after gain) to get normalized
                                ! clutch input

! CLUTCH_TORQUE: Available clutch torque. Available clutch torque is a function of
! normalized clutch control (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a
! custom equation can be defined at runtime. Available clutch torque from the
! calculation can be adjusted with CLUTCH_TORQUE_GAIN and CLUTCH_TORQUE_OFFSET.
! Normalized clutch control used in the calculation can be adjusted with
! CON_SCALE_CL_TORQ and CON_START_CL_TORQ.

! 1D table: col 1 = normalized clutch control (-), col 2 = available clutch torque (N-m)
CLUTCH_TORQUE_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
 0, 900
 1, 0
ENDTABLE
CLUTCH_TORQUE_GAIN  1 ! Gain multiplied with calculated value to get available
                      ! clutch torque
CLUTCH_TORQUE_OFFSET 0 ; N-m ! Offset added (after gain) to get available clutch
                       ! torque
CON_START_CL_TORQ   0 ; - ! Offset subtracted from normalized clutch control
CON_SCALE_CL_TORQ   1 ! Scale factor divided into (normalized clutch control -
                      ! CON_START_CL_TORQ)

! CLUTCH_TORQUE_DIFF: Available torque for differential clutch. Available torque is
! a function of normalized clutch input (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Available torque from
! the calculation can be adjusted with CLUTCH_TORQUE_DIFF_GAIN and
! CLUTCH_TORQUE_DIFF_OFFSET. Normalized clutch input used in the calculation can be
! adjusted with CON_SCALE_CL_TORQ_DIFF and CON_START_CL_TORQ_DIFF. This configurable
! function supports 9 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IDIFF is used to identify the dataset when reading data.

CLUTCH_TORQUE_DIFF_CONSTANT(2) 0 ; N-m ! [D] Constant available torque, 2nd drive
                                 ! axle diff
CLUTCH_TORQUE_DIFF_OFFSET(2) 0 ; N-m ! Offset added (after gain) to get available
                               ! torque

! CMP_DAMP: Damper compression. Damper compression is a function of jounce at wheel
! (CONSTANT, COEFFICIENT, or TABLE). Damper compression from the calculation can be
! adjusted with CMP_DAMP_GAIN and CMP_DAMP_OFFSET. Jounce at wheel used in the
! calculation can be adjusted with JNC_SCALE_CMP_DAMP and JNC_START_CMP_DAMP. The
! derivative of this function is used internally. This configurable function supports
! 4 datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

CMP_DAMP_COEFFICIENT(1,1) 1 ! Coefficient: damper compression per unit jounce at
                            ! wheel (mm/mm), axle 1, left side
CMP_DAMP_GAIN(1,1)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(1,1) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

CMP_DAMP_COEFFICIENT(1,2) 1 ! Coefficient: damper compression per unit jounce at
                            ! wheel (mm/mm), axle 1, right side
CMP_DAMP_GAIN(1,2)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(1,2) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

CMP_DAMP_COEFFICIENT(2,1) 1 ! Coefficient: damper compression per unit jounce at
                            ! wheel (mm/mm), axle 2, left side
CMP_DAMP_GAIN(2,1)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(2,1) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

CMP_DAMP_COEFFICIENT(2,2) 1 ! Coefficient: damper compression per unit jounce at
                            ! wheel (mm/mm), axle 2, right side
CMP_DAMP_GAIN(2,2)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(2,2) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

! CMP_JSTOP: Jounce bumper deflection. Jounce stop deflection is a function of
! jounce at wheel (CONSTANT, COEFFICIENT, or TABLE). Jounce stop deflection from the
! calculation can be adjusted with CMP_JSTOP_GAIN and CMP_JSTOP_OFFSET. Jounce at
! wheel used in the calculation can be adjusted with JNC_SCALE_CMP_JSTOP and
! JNC_START_CMP_JSTOP. The derivative of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CMP_JSTOP_COEFFICIENT(1,1) 1 ! Coefficient: jounce stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 1, left side
CMP_JSTOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(1,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

CMP_JSTOP_COEFFICIENT(1,2) 1 ! Coefficient: jounce stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 1, right side
CMP_JSTOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(1,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

CMP_JSTOP_COEFFICIENT(2,1) 1 ! Coefficient: jounce stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, left side
CMP_JSTOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(2,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

CMP_JSTOP_COEFFICIENT(2,2) 1 ! Coefficient: jounce stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, right side
CMP_JSTOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(2,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

! CMP_RSTOP: Rebound stop deflection. Rebound stop deflection is a function of
! jounce at wheel (CONSTANT, COEFFICIENT, or TABLE). Rebound stop deflection from the
! calculation can be adjusted with CMP_RSTOP_GAIN and CMP_RSTOP_OFFSET. Jounce at
! wheel used in the calculation can be adjusted with JNC_SCALE_CMP_RSTOP and
! JNC_START_CMP_RSTOP. The derivative of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CMP_RSTOP_COEFFICIENT(1,1) 1 ! Coefficient: rebound stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 1, left side
CMP_RSTOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(1,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

CMP_RSTOP_COEFFICIENT(1,2) 1 ! Coefficient: rebound stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 1, right side
CMP_RSTOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(1,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

CMP_RSTOP_COEFFICIENT(2,1) 1 ! Coefficient: rebound stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, left side
CMP_RSTOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(2,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

CMP_RSTOP_COEFFICIENT(2,2) 1 ! Coefficient: rebound stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, right side
CMP_RSTOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(2,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

! CMP_SPR_SEAT: Lower spring seat movement. Lower spring seat movement is a function
! of jounce at wheel (COEFFICIENT or TABLE). Lower spring seat movement from the
! calculation can be adjusted with CMP_SPR_SEAT_GAIN and CMP_SPR_SEAT_OFFSET. Jounce
! at wheel used in the calculation can be adjusted with JNC_SCALE_CMP_SPR_SEAT and
! JNC_START_CMP_SPR_SEAT. An inverse version of this function is used internally. The
! derivative of this function is used internally. This configurable function supports
! 4 datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

CMP_SPR_SEAT_COEFFICIENT(1,1) 1 ! Coefficient: lower spring seat movement per unit
                                ! jounce at wheel (mm/mm), axle 1, left side
CMP_SPR_SEAT_GAIN(1,1) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(1,1) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

CMP_SPR_SEAT_COEFFICIENT(1,2) 1 ! Coefficient: lower spring seat movement per unit
                                ! jounce at wheel (mm/mm), axle 1, right side
CMP_SPR_SEAT_GAIN(1,2) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(1,2) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

CMP_SPR_SEAT_COEFFICIENT(2,1) 1 ! Coefficient: lower spring seat movement per unit
                                ! jounce at wheel (mm/mm), axle 2, left side
CMP_SPR_SEAT_GAIN(2,1) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(2,1) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

CMP_SPR_SEAT_COEFFICIENT(2,2) 1 ! Coefficient: lower spring seat movement per unit
                                ! jounce at wheel (mm/mm), axle 2, right side
CMP_SPR_SEAT_GAIN(2,2) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(2,2) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

! CS_FY: Compliance: steer due to in- and out-phase Fy. Steer displacement can be a
! nonlinear CARPET function of force (other side) and force or a function of force
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Steer displacement from the calculation can be adjusted with CS_FY_GAIN
! and CS_FY_OFFSET. Force used in the calculation can be adjusted with F_SCALE_CS_FY
! and F_START_CS_FY. Force (other side) used in the calculation can be adjusted with
! F2_SCALE_CS_FY and F2_START_CS_FY. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

CS_FY_COEFFICIENT(1,1) 0 ! Coefficient: Steer displacement per unit force (deg/N),
                         ! axle 1, left side
CS_FY_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(1,1)  1 ! Scale factor divided into (force - F_START_CS_FY)

CS_FY_COEFFICIENT(1,2) 0 ! Coefficient: Steer displacement per unit force (deg/N),
                         ! axle 1, right side
CS_FY_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(1,2)  1 ! Scale factor divided into (force - F_START_CS_FY)

CS_FY_COEFFICIENT(2,1) 0 ! Coefficient: Steer displacement per unit force (deg/N),
                         ! axle 2, left side
CS_FY_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(2,1)  1 ! Scale factor divided into (force - F_START_CS_FY)

CS_FY_COEFFICIENT(2,2) 0 ! Coefficient: Steer displacement per unit force (deg/N),
                         ! axle 2, right side
CS_FY_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(2,2)  1 ! Scale factor divided into (force - F_START_CS_FY)

! CS_MZ: Compliance: steer due to in- and out-phase Mz. Steer displacement can be a
! nonlinear CARPET function of moment and moment or a function of moment (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Steer displacement from the calculation can be adjusted with CS_MZ_GAIN and
! CS_MZ_OFFSET. Moment used in the calculation can be adjusted with M_SCALE_CS_MZ and
! M_START_CS_MZ. Moment used in the calculation can be adjusted with M2_SCALE_CS_MZ
! and M2_START_CS_MZ. This configurable function supports 4 datasets; if indices
! shown below are not used, e.g., (1,2), the current values of the indices IAXLE and
! ISIDE are used to identify the dataset when reading data.

CS_MZ_COEFFICIENT(1,1) 0 ! Coefficient: steer displacement per unit moment
                         ! (deg/N-m), axle 1, left side
CS_MZ_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(1,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(1,1)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

CS_MZ_COEFFICIENT(1,2) 0 ! Coefficient: steer displacement per unit moment
                         ! (deg/N-m), axle 1, right side
CS_MZ_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(1,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(1,2)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

CS_MZ_COEFFICIENT(2,1) 0 ! Coefficient: steer displacement per unit moment
                         ! (deg/N-m), axle 2, left side
CS_MZ_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(2,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(2,1)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

CS_MZ_COEFFICIENT(2,2) 0 ! Coefficient: steer displacement per unit moment
                         ! (deg/N-m), axle 2, right side
CS_MZ_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(2,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(2,2)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

! CT_FX: Compliance: wheel toe due to in- and out-phase Fx. Toe displacement can be
! a nonlinear CARPET function of force (other side) and force or a function of force
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Toe displacement from the calculation can be adjusted with CT_FX_GAIN
! and CT_FX_OFFSET. Force used in the calculation can be adjusted with F_SCALE_CT_FX
! and F_START_CT_FX. Force (other side) used in the calculation can be adjusted with
! F2_SCALE_CT_FX and F2_START_CT_FX. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

CT_FX_COEFFICIENT(1,1) 0 ! Coefficient: toe displacement per unit force (deg/N),
                         ! axle 1, left side
CT_FX_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(1,1)  1 ! Scale factor divided into (force - F_START_CT_FX)

CT_FX_COEFFICIENT(1,2) 0 ! Coefficient: toe displacement per unit force (deg/N),
                         ! axle 1, right side
CT_FX_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(1,2)  1 ! Scale factor divided into (force - F_START_CT_FX)

CT_FX_COEFFICIENT(2,1) 0 ! Coefficient: toe displacement per unit force (deg/N),
                         ! axle 2, left side
CT_FX_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(2,1)  1 ! Scale factor divided into (force - F_START_CT_FX)

CT_FX_COEFFICIENT(2,2) 0 ! Coefficient: toe displacement per unit force (deg/N),
                         ! axle 2, right side
CT_FX_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(2,2)  1 ! Scale factor divided into (force - F_START_CT_FX)

! C_LAT_AXLE: Compliance: axle lateral leftward deflection due to total Fy.
! C_LAT_AXLE displacement is a function of force (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. C_LAT_AXLE displacement
! from the calculation can be adjusted with C_LAT_AXLE_GAIN and C_LAT_AXLE_OFFSET.
! Force used in the calculation can be adjusted with F_SCALE_C_LAT_AXLE and
! F_START_C_LAT_AXLE. This configurable function supports 2 datasets; if indices
! shown below are not used, e.g., (2), the current value of the index IAXLE is used
! to identify the dataset when reading data.

C_LAT_AXLE_COEFFICIENT(1) 0 ! Coefficient: C_LAT_AXLE displacement per unit force
                            ! (mm/N), axle 1
C_LAT_AXLE_OFFSET(1) 0 ; mm ! Offset added (after gain) to get C_LAT_AXLE
                       ! displacement
F_START_C_LAT_AXLE(1) 0 ; N ! Offset subtracted from force
F_SCALE_C_LAT_AXLE(1) 1 ! Scale factor divided into (force - F_START_C_LAT_AXLE)

C_LAT_AXLE_COEFFICIENT(2) 0 ! Coefficient: C_LAT_AXLE displacement per unit force
                            ! (mm/N), axle 2
C_LAT_AXLE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get C_LAT_AXLE
                       ! displacement
F_START_C_LAT_AXLE(2) 0 ; N ! Offset subtracted from force
F_SCALE_C_LAT_AXLE(2) 1 ! Scale factor divided into (force - F_START_C_LAT_AXLE)

! C_LONG_AXLE: Compliance: axle longitudinal deflection due to total Fx. C_LONG_AXLE
! displacement is a function of force (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. C_LONG_AXLE
! displacement from the calculation can be adjusted with C_LONG_AXLE_GAIN and
! C_LONG_AXLE_OFFSET. Force used in the calculation can be adjusted with
! F_SCALE_C_LONG_AXLE and F_START_C_LONG_AXLE. This configurable function supports 2
! datasets; if indices shown below are not used, e.g., (2), the current value of the
! index IAXLE is used to identify the dataset when reading data.

C_LONG_AXLE_COEFFICIENT(1) 0 ! Coefficient: C_LONG_AXLE displacement per unit force
                             ! (mm/N), axle 1
C_LONG_AXLE_OFFSET(1) 0 ; mm ! Offset added (after gain) to get C_LONG_AXLE
                        ! displacement
F_START_C_LONG_AXLE(1) 0 ; N ! Offset subtracted from force
F_SCALE_C_LONG_AXLE(1) 1 ! Scale factor divided into (force - F_START_C_LONG_AXLE)

C_LONG_AXLE_COEFFICIENT(2) 0 ! Coefficient: C_LONG_AXLE displacement per unit force
                             ! (mm/N), axle 2
C_LONG_AXLE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get C_LONG_AXLE
                        ! displacement
F_START_C_LONG_AXLE(2) 0 ; N ! Offset subtracted from force
F_SCALE_C_LONG_AXLE(2) 1 ! Scale factor divided into (force - F_START_C_LONG_AXLE)

! DOWNSHIFT_TRANS: Transmission speed when downshift occurs. IGEAR specifies the
! lower gear for each table (e.g., IGEAR 2 means downshift from 3 to 2). Transmission
! speed is a function of throttle position (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Transmission speed from
! the calculation can be adjusted with DOWNSHIFT_TRANS_GAIN and
! DOWNSHIFT_TRANS_OFFSET. Throttle position used in the calculation can be adjusted
! with THROTTLE_SCALE_DOWNSHIFT and THROTTLE_START_DOWNSHIFT. This configurable
! function supports 17 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IGEAR is used to identify the dataset when reading data.

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(1) LINEAR_FLAT ! shifting between gears 1 and 2
 0, 70
 0.2, 70
 0.8, 110
 1, 110
ENDTABLE
DOWNSHIFT_TRANS_GAIN(1) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(1) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(1) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(1) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(2) LINEAR_FLAT ! shifting between gears 2 and 3
 0, 213
 0.2, 213
 0.8, 480
 1, 480
ENDTABLE
DOWNSHIFT_TRANS_GAIN(2) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(2) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(2) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(2) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(3) LINEAR_FLAT ! shifting between gears 3 and 4
 0, 320
 0.2, 320
 0.8, 740
 1, 740
ENDTABLE
DOWNSHIFT_TRANS_GAIN(3) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(3) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(3) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(3) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(4) LINEAR_FLAT ! shifting between gears 4 and 5
 0, 480
 0.75, 480
 0.9, 1067
 1, 1067
ENDTABLE
DOWNSHIFT_TRANS_GAIN(4) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(4) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(4) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(4) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(5) LINEAR_FLAT ! shifting between gears 5 and 6
 0, 620
 0.75, 620
 0.9, 1250
 1, 1250
ENDTABLE
DOWNSHIFT_TRANS_GAIN(5) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(5) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(5) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(5) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(6) LINEAR_FLAT ! shifting between gears 6 and 7
 0, 960
 0.75, 960
 0.9, 1500
 1, 1500
ENDTABLE
DOWNSHIFT_TRANS_GAIN(6) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(6) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(6) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(6) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! FD: Suspension damper force (1 side). Damper force is a function of compression
! speed (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Damper force from the calculation can be adjusted with FD_GAIN
! and FD_OFFSET. Compression speed used in the calculation can be adjusted with
! CMP_R_SCALE_FD and CMP_R_START_FD. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

FD_COEFFICIENT(1,1) 15 ! Coefficient: damper force per unit compression speed
                       ! (N/[mm/s]), axle 1, left side
FD_GAIN(1,1)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(1,1)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(1,1) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(1,1) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

FD_COEFFICIENT(1,2) 15 ! Coefficient: damper force per unit compression speed
                       ! (N/[mm/s]), axle 1, right side
FD_GAIN(1,2)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(1,2)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(1,2) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(1,2) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

FD_COEFFICIENT(2,1) 30 ! Coefficient: damper force per unit compression speed
                       ! (N/[mm/s]), axle 2, left side
FD_GAIN(2,1)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(2,1)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(2,1) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(2,1) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

FD_COEFFICIENT(2,2) 30 ! Coefficient: damper force per unit compression speed
                       ! (N/[mm/s]), axle 2, right side
FD_GAIN(2,2)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(2,2)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(2,2) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(2,2) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

! FS_COMP: Compression (upper) envelope of suspension spring force (1 side). Spring
! force can be a nonlinear CARPET function of static spring force and spring
! compression or a function of spring compression (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function FS_COMP_FSTATIC of static spring force (CONSTANT,
! COEFFICIENT, or TABLE). Spring force from the calculation can be adjusted with
! FS_COMP_GAIN and FS_COMP_OFFSET. Spring compression used in the calculation can be
! adjusted with CMP_SCALE_FS_COMP and CMP_START_FS_COMP. Static spring force used in
! the calculation can be adjusted with FSTATIC_SCALE_FS_COMP and
! FSTATIC_START_FS_COMP. An inverse version of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

FS_COMP_COEFFICIENT(1,1) 250 ! Coefficient: spring force per unit spring compression
                             ! (N/mm), axle 1, left side
FS_COMP_GAIN(1,1)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(1,1) 2000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(1,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(1,1) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(1,1) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(1,1) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 1, left side

FS_COMP_COEFFICIENT(1,2) 250 ! Coefficient: spring force per unit spring compression
                             ! (N/mm), axle 1, right side
FS_COMP_GAIN(1,2)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(1,2) 2000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(1,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(1,2) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(1,2) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(1,2) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 1, right side

FS_COMP_COEFFICIENT(2,1) 700 ! Coefficient: spring force per unit spring compression
                             ! (N/mm), axle 2, left side
FS_COMP_GAIN(2,1)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(2,1) 5000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(2,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(2,1) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(2,1) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(2,1) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 2, left side

FS_COMP_COEFFICIENT(2,2) 700 ! Coefficient: spring force per unit spring compression
                             ! (N/mm), axle 2, right side
FS_COMP_GAIN(2,2)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(2,2) 5000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(2,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(2,2) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(2,2) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(2,2) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 2, right side

! FS_EXT: Extension (lower) envelope of suspension spring force (1 side). Spring
! force can be a nonlinear CARPET function of static spring force and spring
! compression or a function of spring compression (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function FS_EXT_FSTATIC of static spring force (CONSTANT,
! COEFFICIENT, or TABLE). Spring force from the calculation can be adjusted with
! FS_EXT_GAIN and FS_EXT_OFFSET. Spring compression used in the calculation can be
! adjusted with CMP_SCALE_FS_EXT and CMP_START_FS_EXT. Static spring force used in
! the calculation can be adjusted with FSTATIC_SCALE_FS_EXT and FSTATIC_START_FS_EXT.
! An inverse version of this function is used internally. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

FS_EXT_COEFFICIENT(1,1) 250 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 1, left side
FS_EXT_GAIN(1,1)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(1,1) -2000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(1,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(1,1) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(1,1) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(1,1) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 1, left side

FS_EXT_COEFFICIENT(1,2) 250 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 1, right side
FS_EXT_GAIN(1,2)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(1,2) -2000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(1,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(1,2) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(1,2) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(1,2) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 1, right side

FS_EXT_COEFFICIENT(2,1) 700 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 2, left side
FS_EXT_GAIN(2,1)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(2,1) -5000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(2,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(2,1) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(2,1) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(2,1) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 2, left side

FS_EXT_COEFFICIENT(2,2) 700 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 2, right side
FS_EXT_GAIN(2,2)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(2,2) -5000 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(2,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(2,2) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(2,2) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(2,2) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 2, right side

! FUEL_RATE: Fuel consumption rate. Fuel rate can be a nonlinear CARPET function of
! throttle position and engine speed or a function of engine speed (CONSTANT or
! TABLE) multiplied by a function FUEL_RATE_THROTTLE of throttle position (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Fuel rate from the calculation can be adjusted with FUEL_RATE_GAIN and
! FUEL_RATE_OFFSET. Engine speed used in the calculation can be adjusted with
! SPIN_SCALE_FUEL_RATE and SPIN_START_FUEL_RATE. Throttle position used in the
! calculation can be adjusted with THROTTLE_SCALE_FUEL_RATE and
! THROTTLE_START_FUEL_RATE.

FUEL_RATE_CONSTANT  0 ; kg/s ! [D] Constant fuel rate component due to engine speed
FUEL_RATE_GAIN      1 ! Gain multiplied with calculated value to get fuel rate
FUEL_RATE_OFFSET    0 ; kg/s ! Offset added (after gain) to get fuel rate
FUEL_RATE_THROTTLE_CONSTANT 1 ; - ! [D] Constant fuel rate scaling due to throttle
                              ! position

! FX_AERO_SHAPING: Coefficient CFX for for X component of aerodynamic force. CFX is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CFX from the
! calculation can be adjusted with FX_AERO_SHAPING_GAIN and FX_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_FX_AERO and SLIP_START_FX_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CFX (-)
FX_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -20, 0.64
 -15, 0.65
 -10, 0.64
 -5, 0.59
 0, 0.56
 5, 0.59
 10, 0.64
 15, 0.65
 20, 0.64
ENDTABLE
FX_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CFX
FX_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CFX
SLIP_START_FX_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_FX_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_FX_AERO)

! FX_TIRE: Tire longitudinal force (Fx) as a function of vertical load (Fz) and
! longitudinal slip (Kappa). Fx can be a nonlinear CARPET function of Fz and Kappa or
! a function of Kappa multiplied by a function FX_TIRE_FZ of Fz (CONSTANT,
! COEFFICIENT, or TABLE). Fx from the calculation can be adjusted with FX_TIRE_GAIN
! and FX_TIRE_OFFSET. Kappa used in the calculation can be adjusted with
! KAPPA_SCALE_FX_TIRE and KAPPA_START_FX_TIRE. Fz used in the calculation can be
! adjusted with FZ_SCALE_FX_TIRE and FZ_START_FX_TIRE. This configurable function
! supports 8 datasets; if indices shown below are not used, e.g., (1,1,2), the
! current values of the indices IAXLE, ISIDE, and ITIRE are used to identify the
! dataset when reading data.

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Kappa (-) followed by 5 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(1,1,1) 2D_FROM_ZERO ! axle 1, left, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 0.025, 2276.6, 4390.6, 8130.8, 11220.5, 13822.4
 0.05, 4076.6, 7862, 14559.3, 20091.9, 24750.8
 0.075, 5263.6, 10151.1, 18798.4, 25941.8, 31957.3
 0.1, 5959.3, 11492.9, 21283.1, 29370.7, 36181.3
 0.125, 6334.2, 12216, 22622.2, 31218.7, 38457.8
 0.15, 6516.3, 12567.1, 23272.5, 32116, 39563.2
 0.175, 6585, 12699.7, 23517.9, 32454.7, 39980.4
 0.2, 6587, 12703.5, 23525, 32464.4, 39992.4
 0.225, 6549.3, 12630.8, 23390.5, 32278.8, 39763.8
 0.25, 6488, 12512.6, 23171.5, 31976.6, 39391.5
 0.3, 6329.4, 12206.7, 22605, 31194.9, 38428.5
 0.35, 6152.5, 11865.5, 21973.2, 30323, 37354.5
 0.4, 5974.2, 11521.7, 21336.4, 29444.2, 36271.9
 0.45, 5801.7, 11188.9, 20720.2, 28593.9, 35224.4
 0.5, 5637.9, 10873.1, 20135.4, 27786.9, 34230.2
 0.55, 5484, 10576.3, 19585.7, 27028.3, 33295.7
 0.6, 5340, 10298.6, 19071.5, 26318.7, 32421.6
 0.65, 5205.7, 10039.5, 18591.7, 25656.5, 31605.8
 0.7, 5080.4, 9797.8, 18144.1, 25038.9, 30845
 0.75, 4963.5, 9572.4, 17726.8, 24462.9, 30135.5
 0.8, 4854.4, 9362.1, 17337.2, 23925.4, 29473.3
 0.85, 4752.5, 9165.6, 16973.3, 23423.1, 28854.6
 0.9, 4657.2, 8981.7, 16632.8, 22953.3, 28275.8
 0.95, 4567.9, 8809.5, 16314, 22513.3, 27733.7
 1, 4567.9, 8809.5, 16314, 22513.3, 27733.7
ENDTABLE
FX_TIRE_GAIN(1,1,1) 1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(1,1,1) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(1,1,1) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(1,1,1) 1 ! Scale factor divided into (Kappa -
                             ! KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(1,1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(1,1,1) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Kappa (-) followed by 5 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(1,2,1) 2D_FROM_ZERO ! axle 1, right, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 0.025, 2276.6, 4390.6, 8130.8, 11220.5, 13822.4
 0.05, 4076.6, 7862, 14559.3, 20091.9, 24750.8
 0.075, 5263.6, 10151.1, 18798.4, 25941.8, 31957.3
 0.1, 5959.3, 11492.9, 21283.1, 29370.7, 36181.3
 0.125, 6334.2, 12216, 22622.2, 31218.7, 38457.8
 0.15, 6516.3, 12567.1, 23272.5, 32116, 39563.2
 0.175, 6585, 12699.7, 23517.9, 32454.7, 39980.4
 0.2, 6587, 12703.5, 23525, 32464.4, 39992.4
 0.225, 6549.3, 12630.8, 23390.5, 32278.8, 39763.8
 0.25, 6488, 12512.6, 23171.5, 31976.6, 39391.5
 0.3, 6329.4, 12206.7, 22605, 31194.9, 38428.5
 0.35, 6152.5, 11865.5, 21973.2, 30323, 37354.5
 0.4, 5974.2, 11521.7, 21336.4, 29444.2, 36271.9
 0.45, 5801.7, 11188.9, 20720.2, 28593.9, 35224.4
 0.5, 5637.9, 10873.1, 20135.4, 27786.9, 34230.2
 0.55, 5484, 10576.3, 19585.7, 27028.3, 33295.7
 0.6, 5340, 10298.6, 19071.5, 26318.7, 32421.6
 0.65, 5205.7, 10039.5, 18591.7, 25656.5, 31605.8
 0.7, 5080.4, 9797.8, 18144.1, 25038.9, 30845
 0.75, 4963.5, 9572.4, 17726.8, 24462.9, 30135.5
 0.8, 4854.4, 9362.1, 17337.2, 23925.4, 29473.3
 0.85, 4752.5, 9165.6, 16973.3, 23423.1, 28854.6
 0.9, 4657.2, 8981.7, 16632.8, 22953.3, 28275.8
 0.95, 4567.9, 8809.5, 16314, 22513.3, 27733.7
 1, 4567.9, 8809.5, 16314, 22513.3, 27733.7
ENDTABLE
FX_TIRE_GAIN(1,2,1) 1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(1,2,1) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(1,2,1) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(1,2,1) 1 ! Scale factor divided into (Kappa -
                             ! KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(1,2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(1,2,1) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Kappa (-) followed by 5 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(2,1,1) 2D_FROM_ZERO ! axle 2, left, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 0.025, 2276.6, 4390.6, 8130.8, 11220.5, 13822.4
 0.05, 4076.6, 7862, 14559.3, 20091.9, 24750.8
 0.075, 5263.6, 10151.1, 18798.4, 25941.8, 31957.3
 0.1, 5959.3, 11492.9, 21283.1, 29370.7, 36181.3
 0.125, 6334.2, 12216, 22622.2, 31218.7, 38457.8
 0.15, 6516.3, 12567.1, 23272.5, 32116, 39563.2
 0.175, 6585, 12699.7, 23517.9, 32454.7, 39980.4
 0.2, 6587, 12703.5, 23525, 32464.4, 39992.4
 0.225, 6549.3, 12630.8, 23390.5, 32278.8, 39763.8
 0.25, 6488, 12512.6, 23171.5, 31976.6, 39391.5
 0.3, 6329.4, 12206.7, 22605, 31194.9, 38428.5
 0.35, 6152.5, 11865.5, 21973.2, 30323, 37354.5
 0.4, 5974.2, 11521.7, 21336.4, 29444.2, 36271.9
 0.45, 5801.7, 11188.9, 20720.2, 28593.9, 35224.4
 0.5, 5637.9, 10873.1, 20135.4, 27786.9, 34230.2
 0.55, 5484, 10576.3, 19585.7, 27028.3, 33295.7
 0.6, 5340, 10298.6, 19071.5, 26318.7, 32421.6
 0.65, 5205.7, 10039.5, 18591.7, 25656.5, 31605.8
 0.7, 5080.4, 9797.8, 18144.1, 25038.9, 30845
 0.75, 4963.5, 9572.4, 17726.8, 24462.9, 30135.5
 0.8, 4854.4, 9362.1, 17337.2, 23925.4, 29473.3
 0.85, 4752.5, 9165.6, 16973.3, 23423.1, 28854.6
 0.9, 4657.2, 8981.7, 16632.8, 22953.3, 28275.8
 0.95, 4567.9, 8809.5, 16314, 22513.3, 27733.7
 1, 4567.9, 8809.5, 16314, 22513.3, 27733.7
ENDTABLE
FX_TIRE_GAIN(2,1,1) 1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(2,1,1) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(2,1,1) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(2,1,1) 1 ! Scale factor divided into (Kappa -
                             ! KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(2,1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(2,1,1) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Kappa (-) followed by 5 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(2,1,2) 2D_FROM_ZERO ! axle 2, left, outer
 0, 7357.5, 14715, 29430, 44145, 58860
 0.025, 2276.6, 4390.6, 8130.8, 11220.5, 13822.4
 0.05, 4076.6, 7862, 14559.3, 20091.9, 24750.8
 0.075, 5263.6, 10151.1, 18798.4, 25941.8, 31957.3
 0.1, 5959.3, 11492.9, 21283.1, 29370.7, 36181.3
 0.125, 6334.2, 12216, 22622.2, 31218.7, 38457.8
 0.15, 6516.3, 12567.1, 23272.5, 32116, 39563.2
 0.175, 6585, 12699.7, 23517.9, 32454.7, 39980.4
 0.2, 6587, 12703.5, 23525, 32464.4, 39992.4
 0.225, 6549.3, 12630.8, 23390.5, 32278.8, 39763.8
 0.25, 6488, 12512.6, 23171.5, 31976.6, 39391.5
 0.3, 6329.4, 12206.7, 22605, 31194.9, 38428.5
 0.35, 6152.5, 11865.5, 21973.2, 30323, 37354.5
 0.4, 5974.2, 11521.7, 21336.4, 29444.2, 36271.9
 0.45, 5801.7, 11188.9, 20720.2, 28593.9, 35224.4
 0.5, 5637.9, 10873.1, 20135.4, 27786.9, 34230.2
 0.55, 5484, 10576.3, 19585.7, 27028.3, 33295.7
 0.6, 5340, 10298.6, 19071.5, 26318.7, 32421.6
 0.65, 5205.7, 10039.5, 18591.7, 25656.5, 31605.8
 0.7, 5080.4, 9797.8, 18144.1, 25038.9, 30845
 0.75, 4963.5, 9572.4, 17726.8, 24462.9, 30135.5
 0.8, 4854.4, 9362.1, 17337.2, 23925.4, 29473.3
 0.85, 4752.5, 9165.6, 16973.3, 23423.1, 28854.6
 0.9, 4657.2, 8981.7, 16632.8, 22953.3, 28275.8
 0.95, 4567.9, 8809.5, 16314, 22513.3, 27733.7
 1, 4567.9, 8809.5, 16314, 22513.3, 27733.7
ENDTABLE
FX_TIRE_GAIN(2,1,2) 1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(2,1,2) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(2,1,2) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(2,1,2) 1 ! Scale factor divided into (Kappa -
                             ! KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(2,1,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(2,1,2) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Kappa (-) followed by 5 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(2,2,1) 2D_FROM_ZERO ! axle 2, right, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 0.025, 2276.6, 4390.6, 8130.8, 11220.5, 13822.4
 0.05, 4076.6, 7862, 14559.3, 20091.9, 24750.8
 0.075, 5263.6, 10151.1, 18798.4, 25941.8, 31957.3
 0.1, 5959.3, 11492.9, 21283.1, 29370.7, 36181.3
 0.125, 6334.2, 12216, 22622.2, 31218.7, 38457.8
 0.15, 6516.3, 12567.1, 23272.5, 32116, 39563.2
 0.175, 6585, 12699.7, 23517.9, 32454.7, 39980.4
 0.2, 6587, 12703.5, 23525, 32464.4, 39992.4
 0.225, 6549.3, 12630.8, 23390.5, 32278.8, 39763.8
 0.25, 6488, 12512.6, 23171.5, 31976.6, 39391.5
 0.3, 6329.4, 12206.7, 22605, 31194.9, 38428.5
 0.35, 6152.5, 11865.5, 21973.2, 30323, 37354.5
 0.4, 5974.2, 11521.7, 21336.4, 29444.2, 36271.9
 0.45, 5801.7, 11188.9, 20720.2, 28593.9, 35224.4
 0.5, 5637.9, 10873.1, 20135.4, 27786.9, 34230.2
 0.55, 5484, 10576.3, 19585.7, 27028.3, 33295.7
 0.6, 5340, 10298.6, 19071.5, 26318.7, 32421.6
 0.65, 5205.7, 10039.5, 18591.7, 25656.5, 31605.8
 0.7, 5080.4, 9797.8, 18144.1, 25038.9, 30845
 0.75, 4963.5, 9572.4, 17726.8, 24462.9, 30135.5
 0.8, 4854.4, 9362.1, 17337.2, 23925.4, 29473.3
 0.85, 4752.5, 9165.6, 16973.3, 23423.1, 28854.6
 0.9, 4657.2, 8981.7, 16632.8, 22953.3, 28275.8
 0.95, 4567.9, 8809.5, 16314, 22513.3, 27733.7
 1, 4567.9, 8809.5, 16314, 22513.3, 27733.7
ENDTABLE
FX_TIRE_GAIN(2,2,1) 1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(2,2,1) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(2,2,1) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(2,2,1) 1 ! Scale factor divided into (Kappa -
                             ! KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(2,2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(2,2,1) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Kappa (-) followed by 5 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(2,2,2) 2D_FROM_ZERO ! axle 2, right, outer
 0, 7357.5, 14715, 29430, 44145, 58860
 0.025, 2276.6, 4390.6, 8130.8, 11220.5, 13822.4
 0.05, 4076.6, 7862, 14559.3, 20091.9, 24750.8
 0.075, 5263.6, 10151.1, 18798.4, 25941.8, 31957.3
 0.1, 5959.3, 11492.9, 21283.1, 29370.7, 36181.3
 0.125, 6334.2, 12216, 22622.2, 31218.7, 38457.8
 0.15, 6516.3, 12567.1, 23272.5, 32116, 39563.2
 0.175, 6585, 12699.7, 23517.9, 32454.7, 39980.4
 0.2, 6587, 12703.5, 23525, 32464.4, 39992.4
 0.225, 6549.3, 12630.8, 23390.5, 32278.8, 39763.8
 0.25, 6488, 12512.6, 23171.5, 31976.6, 39391.5
 0.3, 6329.4, 12206.7, 22605, 31194.9, 38428.5
 0.35, 6152.5, 11865.5, 21973.2, 30323, 37354.5
 0.4, 5974.2, 11521.7, 21336.4, 29444.2, 36271.9
 0.45, 5801.7, 11188.9, 20720.2, 28593.9, 35224.4
 0.5, 5637.9, 10873.1, 20135.4, 27786.9, 34230.2
 0.55, 5484, 10576.3, 19585.7, 27028.3, 33295.7
 0.6, 5340, 10298.6, 19071.5, 26318.7, 32421.6
 0.65, 5205.7, 10039.5, 18591.7, 25656.5, 31605.8
 0.7, 5080.4, 9797.8, 18144.1, 25038.9, 30845
 0.75, 4963.5, 9572.4, 17726.8, 24462.9, 30135.5
 0.8, 4854.4, 9362.1, 17337.2, 23925.4, 29473.3
 0.85, 4752.5, 9165.6, 16973.3, 23423.1, 28854.6
 0.9, 4657.2, 8981.7, 16632.8, 22953.3, 28275.8
 0.95, 4567.9, 8809.5, 16314, 22513.3, 27733.7
 1, 4567.9, 8809.5, 16314, 22513.3, 27733.7
ENDTABLE
FX_TIRE_GAIN(2,2,2) 1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(2,2,2) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(2,2,2) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(2,2,2) 1 ! Scale factor divided into (Kappa -
                             ! KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(2,2,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(2,2,2) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! FY_AERO_SHAPING: Coefficient CFY for for Y component of aerodynamic force. CFY is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CFY from the
! calculation can be adjusted with FY_AERO_SHAPING_GAIN and FY_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_FY_AERO and SLIP_START_FY_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CFY (-)
FY_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
 -25, -2.05
 0, 0
 25, 2.05
ENDTABLE
FY_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CFY
FY_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CFY
SLIP_START_FY_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_FY_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_FY_AERO)

! FY_TIRE: Tire lateral force (Fy) as a function of vertical load (Fz) and lateral
! slip (Alpha). Fy can be a nonlinear CARPET function of Fz and Alpha or a function
! of Alpha multiplied by a function FY_TIRE_FZ of Fz (CONSTANT, COEFFICIENT, or
! TABLE). Fy from the calculation can be adjusted with FY_TIRE_GAIN and
! FY_TIRE_OFFSET. Alpha used in the calculation can be adjusted with
! ALPHA_SCALE_FY_TIRE and ALPHA_START_FY_TIRE. Fz used in the calculation can be
! adjusted with FZ_SCALE_FY_TIRE and FZ_START_FY_TIRE. This configurable function
! supports 8 datasets; if indices shown below are not used, e.g., (1,1,2), the
! current values of the indices IAXLE, ISIDE, and ITIRE are used to identify the
! dataset when reading data.

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(1,1,1) 2D_FROM_ZERO ! axle 1, left, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 1, 1253.8, 2418, 4477.9, 6179.4, 7612.3
 2, 2438.4, 4702.7, 8708.7, 12018.1, 14804.9
 4, 4389.6, 8465.7, 15677.2, 21634.5, 26651.2
 6, 5646, 10888.8, 20164.4, 27826.9, 34279.5
 8, 6298.9, 12147.8, 22496, 31044.4, 38243.1
 10, 6553.7, 12639.3, 23406, 32300.3, 39790.2
 12, 6586.8, 12703.1, 23524.3, 32463.5, 39991.2
 15, 6451.2, 12441.6, 23040.1, 31795.3, 39168.1
 20, 6103.2, 11770.4, 21797.1, 30080, 37055.1
 25, 5784.6, 11156, 20659.2, 28509.7, 35120.6
 30, 5528.4, 10661.9, 19744.3, 27247.1, 33565.3
 35, 5325.9, 10271.4, 19021, 26249, 32335.8
 40, 5164.3, 9959.8, 18444.1, 25452.8, 31355
 45, 5033.5, 9707.5, 17976.8, 24808, 30560.6
 50, 4925.9, 9499.9, 17592.4, 24277.5, 29907
 60, 4759.9, 9179.8, 16999.7, 23459.5, 28899.4
 70, 4638.4, 8945.5, 16565.8, 22860.8, 28161.9
 80, 4545.9, 8767.1, 16235.4, 22404.9, 27600.2
 89, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
 90, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
ENDTABLE
FY_TIRE_GAIN(1,1,1) 1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(1,1,1) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(1,1,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(1,1,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(1,1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(1,1,1) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(1,2,1) 2D_FROM_ZERO ! axle 1, right, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 1, 1253.8, 2418, 4477.9, 6179.4, 7612.3
 2, 2438.4, 4702.7, 8708.7, 12018.1, 14804.9
 4, 4389.6, 8465.7, 15677.2, 21634.5, 26651.2
 6, 5646, 10888.8, 20164.4, 27826.9, 34279.5
 8, 6298.9, 12147.8, 22496, 31044.4, 38243.1
 10, 6553.7, 12639.3, 23406, 32300.3, 39790.2
 12, 6586.8, 12703.1, 23524.3, 32463.5, 39991.2
 15, 6451.2, 12441.6, 23040.1, 31795.3, 39168.1
 20, 6103.2, 11770.4, 21797.1, 30080, 37055.1
 25, 5784.6, 11156, 20659.2, 28509.7, 35120.6
 30, 5528.4, 10661.9, 19744.3, 27247.1, 33565.3
 35, 5325.9, 10271.4, 19021, 26249, 32335.8
 40, 5164.3, 9959.8, 18444.1, 25452.8, 31355
 45, 5033.5, 9707.5, 17976.8, 24808, 30560.6
 50, 4925.9, 9499.9, 17592.4, 24277.5, 29907
 60, 4759.9, 9179.8, 16999.7, 23459.5, 28899.4
 70, 4638.4, 8945.5, 16565.8, 22860.8, 28161.9
 80, 4545.9, 8767.1, 16235.4, 22404.9, 27600.2
 89, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
 90, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
ENDTABLE
FY_TIRE_GAIN(1,2,1) 1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(1,2,1) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(1,2,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(1,2,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(1,2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(1,2,1) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(2,1,1) 2D_FROM_ZERO ! axle 2, left, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 1, 1253.8, 2418, 4477.9, 6179.4, 7612.3
 2, 2438.4, 4702.7, 8708.7, 12018.1, 14804.9
 4, 4389.6, 8465.7, 15677.2, 21634.5, 26651.2
 6, 5646, 10888.8, 20164.4, 27826.9, 34279.5
 8, 6298.9, 12147.8, 22496, 31044.4, 38243.1
 10, 6553.7, 12639.3, 23406, 32300.3, 39790.2
 12, 6586.8, 12703.1, 23524.3, 32463.5, 39991.2
 15, 6451.2, 12441.6, 23040.1, 31795.3, 39168.1
 20, 6103.2, 11770.4, 21797.1, 30080, 37055.1
 25, 5784.6, 11156, 20659.2, 28509.7, 35120.6
 30, 5528.4, 10661.9, 19744.3, 27247.1, 33565.3
 35, 5325.9, 10271.4, 19021, 26249, 32335.8
 40, 5164.3, 9959.8, 18444.1, 25452.8, 31355
 45, 5033.5, 9707.5, 17976.8, 24808, 30560.6
 50, 4925.9, 9499.9, 17592.4, 24277.5, 29907
 60, 4759.9, 9179.8, 16999.7, 23459.5, 28899.4
 70, 4638.4, 8945.5, 16565.8, 22860.8, 28161.9
 80, 4545.9, 8767.1, 16235.4, 22404.9, 27600.2
 89, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
 90, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
ENDTABLE
FY_TIRE_GAIN(2,1,1) 1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(2,1,1) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(2,1,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(2,1,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(2,1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(2,1,1) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(2,1,2) 2D_FROM_ZERO ! axle 2, left, outer
 0, 7357.5, 14715, 29430, 44145, 58860
 1, 1253.8, 2418, 4477.9, 6179.4, 7612.3
 2, 2438.4, 4702.7, 8708.7, 12018.1, 14804.9
 4, 4389.6, 8465.7, 15677.2, 21634.5, 26651.2
 6, 5646, 10888.8, 20164.4, 27826.9, 34279.5
 8, 6298.9, 12147.8, 22496, 31044.4, 38243.1
 10, 6553.7, 12639.3, 23406, 32300.3, 39790.2
 12, 6586.8, 12703.1, 23524.3, 32463.5, 39991.2
 15, 6451.2, 12441.6, 23040.1, 31795.3, 39168.1
 20, 6103.2, 11770.4, 21797.1, 30080, 37055.1
 25, 5784.6, 11156, 20659.2, 28509.7, 35120.6
 30, 5528.4, 10661.9, 19744.3, 27247.1, 33565.3
 35, 5325.9, 10271.4, 19021, 26249, 32335.8
 40, 5164.3, 9959.8, 18444.1, 25452.8, 31355
 45, 5033.5, 9707.5, 17976.8, 24808, 30560.6
 50, 4925.9, 9499.9, 17592.4, 24277.5, 29907
 60, 4759.9, 9179.8, 16999.7, 23459.5, 28899.4
 70, 4638.4, 8945.5, 16565.8, 22860.8, 28161.9
 80, 4545.9, 8767.1, 16235.4, 22404.9, 27600.2
 89, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
 90, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
ENDTABLE
FY_TIRE_GAIN(2,1,2) 1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(2,1,2) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(2,1,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(2,1,2) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(2,1,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(2,1,2) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(2,2,1) 2D_FROM_ZERO ! axle 2, right, inner
 0, 7357.5, 14715, 29430, 44145, 58860
 1, 1253.8, 2418, 4477.9, 6179.4, 7612.3
 2, 2438.4, 4702.7, 8708.7, 12018.1, 14804.9
 4, 4389.6, 8465.7, 15677.2, 21634.5, 26651.2
 6, 5646, 10888.8, 20164.4, 27826.9, 34279.5
 8, 6298.9, 12147.8, 22496, 31044.4, 38243.1
 10, 6553.7, 12639.3, 23406, 32300.3, 39790.2
 12, 6586.8, 12703.1, 23524.3, 32463.5, 39991.2
 15, 6451.2, 12441.6, 23040.1, 31795.3, 39168.1
 20, 6103.2, 11770.4, 21797.1, 30080, 37055.1
 25, 5784.6, 11156, 20659.2, 28509.7, 35120.6
 30, 5528.4, 10661.9, 19744.3, 27247.1, 33565.3
 35, 5325.9, 10271.4, 19021, 26249, 32335.8
 40, 5164.3, 9959.8, 18444.1, 25452.8, 31355
 45, 5033.5, 9707.5, 17976.8, 24808, 30560.6
 50, 4925.9, 9499.9, 17592.4, 24277.5, 29907
 60, 4759.9, 9179.8, 16999.7, 23459.5, 28899.4
 70, 4638.4, 8945.5, 16565.8, 22860.8, 28161.9
 80, 4545.9, 8767.1, 16235.4, 22404.9, 27600.2
 89, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
 90, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
ENDTABLE
FY_TIRE_GAIN(2,2,1) 1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(2,2,1) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(2,2,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(2,2,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(2,2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(2,2,1) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(2,2,2) 2D_FROM_ZERO ! axle 2, right, outer
 0, 7357.5, 14715, 29430, 44145, 58860
 1, 1253.8, 2418, 4477.9, 6179.4, 7612.3
 2, 2438.4, 4702.7, 8708.7, 12018.1, 14804.9
 4, 4389.6, 8465.7, 15677.2, 21634.5, 26651.2
 6, 5646, 10888.8, 20164.4, 27826.9, 34279.5
 8, 6298.9, 12147.8, 22496, 31044.4, 38243.1
 10, 6553.7, 12639.3, 23406, 32300.3, 39790.2
 12, 6586.8, 12703.1, 23524.3, 32463.5, 39991.2
 15, 6451.2, 12441.6, 23040.1, 31795.3, 39168.1
 20, 6103.2, 11770.4, 21797.1, 30080, 37055.1
 25, 5784.6, 11156, 20659.2, 28509.7, 35120.6
 30, 5528.4, 10661.9, 19744.3, 27247.1, 33565.3
 35, 5325.9, 10271.4, 19021, 26249, 32335.8
 40, 5164.3, 9959.8, 18444.1, 25452.8, 31355
 45, 5033.5, 9707.5, 17976.8, 24808, 30560.6
 50, 4925.9, 9499.9, 17592.4, 24277.5, 29907
 60, 4759.9, 9179.8, 16999.7, 23459.5, 28899.4
 70, 4638.4, 8945.5, 16565.8, 22860.8, 28161.9
 80, 4545.9, 8767.1, 16235.4, 22404.9, 27600.2
 89, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
 90, 4479.8, 8639.6, 15999.2, 22078.9, 27198.6
ENDTABLE
FY_TIRE_GAIN(2,2,2) 1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(2,2,2) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(2,2,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(2,2,2) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(2,2,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(2,2,2) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! FZ_AERO_SHAPING: Coefficient CFZ for for Z component of aerodynamic force. CFZ is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CFZ from the
! calculation can be adjusted with FZ_AERO_SHAPING_GAIN and FZ_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_FZ_AERO and SLIP_START_FZ_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CFZ (-)
FZ_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -25, 0.85
 -20, 0.55
 -15, 0.3
 -10, 0.05
 -5, -0.12
 0, -0.15
 5, -0.12
 10, 0.05
 15, 0.3
 20, 0.55
 25, 0.85
ENDTABLE
FZ_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CFZ
FZ_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CFZ
SLIP_START_FZ_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_FZ_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_FZ_AERO)

! FZ_TIRE: Tire vertical force. Vertical force is a function of tire compression
! (COEFFICIENT or TABLE). Vertical force from the calculation can be adjusted with
! FZ_TIRE_GAIN and FZ_TIRE_OFFSET. Tire compression used in the calculation can be
! adjusted with CMP_SCALE_FZ_TIRE and CMP_START_FZ_TIRE. An inverse version of this
! function is used internally. This configurable function supports 8 datasets; if
! indices shown below are not used, e.g., (1,1,2), the current values of the indices
! IAXLE, ISIDE, and ITIRE are used to identify the dataset when reading data.

FZ_TIRE_COEFFICIENT(1,1,1) 980 ! Coefficient: vertical force per unit tire
                               ! compression (N/mm), axle 1, left, inner
FZ_TIRE_GAIN(1,1,1) 1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(1,1,1) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(1,1,1) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(1,1,1) 1 ! Scale factor divided into (tire compression -
                           ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(1,2,1) 980 ! Coefficient: vertical force per unit tire
                               ! compression (N/mm), axle 1, right, inner
FZ_TIRE_GAIN(1,2,1) 1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(1,2,1) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(1,2,1) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(1,2,1) 1 ! Scale factor divided into (tire compression -
                           ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(2,1,1) 980 ! Coefficient: vertical force per unit tire
                               ! compression (N/mm), axle 2, left, inner
FZ_TIRE_GAIN(2,1,1) 1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(2,1,1) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(2,1,1) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(2,1,1) 1 ! Scale factor divided into (tire compression -
                           ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(2,1,2) 980 ! Coefficient: vertical force per unit tire
                               ! compression (N/mm), axle 2, left, outer
FZ_TIRE_GAIN(2,1,2) 1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(2,1,2) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(2,1,2) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(2,1,2) 1 ! Scale factor divided into (tire compression -
                           ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(2,2,1) 980 ! Coefficient: vertical force per unit tire
                               ! compression (N/mm), axle 2, right, inner
FZ_TIRE_GAIN(2,2,1) 1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(2,2,1) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(2,2,1) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(2,2,1) 1 ! Scale factor divided into (tire compression -
                           ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(2,2,2) 980 ! Coefficient: vertical force per unit tire
                               ! compression (N/mm), axle 2, right, outer
FZ_TIRE_GAIN(2,2,2) 1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(2,2,2) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(2,2,2) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(2,2,2) 1 ! Scale factor divided into (tire compression -
                           ! CMP_START_FZ_TIRE)

! F_JNC_STOP: Jounce stop force. Force is a function of suspension travel at jounce
! stop (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Force from the calculation can be adjusted with F_JNC_STOP_GAIN
! and F_JNC_STOP_OFFSET. Suspension travel at jounce stop used in the calculation can
! be adjusted with CMP_SCALE_F_JNC_STOP and CMP_START_F_JNC_STOP. This configurable
! function supports 4 datasets; if indices shown below are not used, e.g., (1,2), the
! current values of the indices IAXLE and ISIDE are used to identify the dataset when
! reading data.

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(1,1) LINEAR ! axle 1, left side
 100, 0
 149, 0
 150, 7000
ENDTABLE
F_JNC_STOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(1,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(1,1) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(1,2) LINEAR ! axle 1, right side
 100, 0
 149, 0
 150, 7000
ENDTABLE
F_JNC_STOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(1,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(1,2) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(2,1) LINEAR ! axle 2, left side
 60, 0
 100, 0
 101, 7000
ENDTABLE
F_JNC_STOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(2,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(2,1) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(2,2) LINEAR ! axle 2, right side
 60, 0
 100, 0
 101, 7000
ENDTABLE
F_JNC_STOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(2,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(2,2) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! F_REB_STOP: Rebound stop force. Force is a function of suspension travel at
! rebound stop (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation
! can be defined at runtime. Force from the calculation can be adjusted with
! F_REB_STOP_GAIN and F_REB_STOP_OFFSET. Suspension travel at rebound stop used in
! the calculation can be adjusted with CMP_SCALE_F_REB_STOP and CMP_START_F_REB_STOP.
! This configurable function supports 4 datasets; if indices shown below are not
! used, e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to
! identify the dataset when reading data.

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(1,1) LINEAR ! axle 1, left side
 -61, -7000
 -60, 0
 -50, 0
ENDTABLE
F_REB_STOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(1,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(1,1) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(1,2) LINEAR ! axle 1, right side
 -61, -7000
 -60, 0
 -50, 0
ENDTABLE
F_REB_STOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(1,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(1,2) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(2,1) LINEAR ! axle 2, left side
 -61, -7000
 -60, 0
 -50, 0
ENDTABLE
F_REB_STOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(2,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(2,1) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(2,2) LINEAR ! axle 2, right side
 -61, -7000
 -60, 0
 -50, 0
ENDTABLE
F_REB_STOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(2,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(2,2) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! GEAR_ROT: Steering gear output. Pitman arm angle is a function of steering gear
! input angle (CONSTANT, COEFFICIENT, or TABLE). Pitman arm angle from the
! calculation can be adjusted with GEAR_ROT_GAIN and GEAR_ROT_OFFSET. The derivative
! of this function is used internally. This configurable function supports 2
! datasets; if indices shown below are not used, e.g., (2), the current value of the
! index IAXLE is used to identify the dataset when reading data.

GEAR_ROT_COEFFICIENT(1) 0.04 ! Coefficient: pitman arm angle per unit steering gear
                             ! input angle (deg/deg), axle 1
GEAR_ROT_GAIN(1)    1 ! Gain multiplied with calculated value to get pitman arm
                      ! angle
GEAR_ROT_OFFSET(1)  0 ; deg ! Offset added (after gain) to get pitman arm angle

! GEAR_TRANS: Transmission gear in open-loop control (when MODE_TRANS = 1). 1
! through 18 are choices for forward gears, -1 -> reverse, 0 -> neutral. Gear is a
! function of time (CONSTANT or TABLE). Alternatively, a custom equation can be
! defined at runtime. Gear from the calculation can be adjusted with GEAR_TRANS_GAIN
! and GEAR_TRANS_OFFSET. Time used in the calculation can be adjusted with
! TSCALE_GEAR and TSTART_GEAR.

GEAR_TRANS_CONSTANT 1 ; - ! [D] Constant gear
GEAR_TRANS_GAIN     1 ! Gain multiplied with calculated value to get gear
GEAR_TRANS_OFFSET   0 ; - ! Offset added (after gain) to get gear

! ISHAFT_KIN: Intermediate shaft kinematics. Shaft output angle is a function of
! intermediate shaft input angle (CONSTANT, COEFFICIENT, or TABLE). Shaft output
! angle from the calculation can be adjusted with ISHAFT_KIN_GAIN and
! ISHAFT_KIN_OFFSET. An inverse version of this function is used internally. The
! derivative of this function is used internally.

ISHAFT_KIN_COEFFICIENT 1 ! [D] Coefficient: Shaft output angle per unit intermediate
                         ! shaft input angle (deg/deg)
ISHAFT_KIN_GAIN     1 ! Gain multiplied with calculated value to get Shaft output
                      ! angle
ISHAFT_KIN_OFFSET   0 ; deg ! Offset added (after gain) to get Shaft output angle

! KGAMMA: Tire inclination stiffness. DFy/dGamma is a function of dynamic tire load
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. DFy/dGamma from the calculation can be adjusted with KGAMMA_GAIN and
! KGAMMA_OFFSET. Dynamic tire load used in the calculation can be adjusted with
! FZ_SCALE_KGAMMA. This configurable function supports 8 datasets; if indices shown
! below are not used, e.g., (1,1,2), the current values of the indices IAXLE, ISIDE,
! and ITIRE are used to identify the dataset when reading data.

KGAMMA_COEFFICIENT(1,1,1) -0.01 ! Coefficient: dFy/dGamma per unit dynamic tire load
                                ! (N/deg/N), axle 1, left, inner
KGAMMA_GAIN(1,1,1)  1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(1,1,1) 0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(1,1,1) 1 ! Scale factor divided into dynamic tire load

KGAMMA_COEFFICIENT(1,2,1) -0.01 ! Coefficient: dFy/dGamma per unit dynamic tire load
                                ! (N/deg/N), axle 1, right, inner
KGAMMA_GAIN(1,2,1)  1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(1,2,1) 0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(1,2,1) 1 ! Scale factor divided into dynamic tire load

KGAMMA_COEFFICIENT(2,1,1) -0.01 ! Coefficient: dFy/dGamma per unit dynamic tire load
                                ! (N/deg/N), axle 2, left, inner
KGAMMA_GAIN(2,1,1)  1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(2,1,1) 0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(2,1,1) 1 ! Scale factor divided into dynamic tire load

KGAMMA_COEFFICIENT(2,1,2) -0.01 ! Coefficient: dFy/dGamma per unit dynamic tire load
                                ! (N/deg/N), axle 2, left, outer
KGAMMA_GAIN(2,1,2)  1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(2,1,2) 0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(2,1,2) 1 ! Scale factor divided into dynamic tire load

KGAMMA_COEFFICIENT(2,2,1) -0.01 ! Coefficient: dFy/dGamma per unit dynamic tire load
                                ! (N/deg/N), axle 2, right, inner
KGAMMA_GAIN(2,2,1)  1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(2,2,1) 0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(2,2,1) 1 ! Scale factor divided into dynamic tire load

KGAMMA_COEFFICIENT(2,2,2) -0.01 ! Coefficient: dFy/dGamma per unit dynamic tire load
                                ! (N/deg/N), axle 2, right, outer
KGAMMA_GAIN(2,2,2)  1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(2,2,2) 0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(2,2,2) 1 ! Scale factor divided into dynamic tire load

! LTARG: Target lateral offset (+ -> left, - -> right). This offset is combined with
! a reference path to produce a modified path for steering control, moving objects,
! lane definition, etc. Lateral offset is a function of station (CONSTANT,
! COEFFICIENT, or TABLE). Lateral offset from the calculation can be adjusted with
! LTARG_GAIN and LTARG_OFFSET. Station used in the calculation can be adjusted with
! SSCALE_LTARG and SSTART_LTARG. The derivative of this function is used internally.
! This configurable function supports 500 datasets; if indices shown below are not
! used, e.g., (2), the current value of the index ILTARG is used to identify the
! dataset when reading data.

LTARG_ID(1)         1  ! 0.6s Single Preview
LTARG_CONSTANT(1)   0 ; m ! Constant lateral offset
LTARG_OFFSET(1)     0 ; m ! Offset added (after gain) to get lateral offset

! L_CONTACT_X: Tire/ground contact length. Tire contact length is a function of tire
! compression (CONSTANT or TABLE). Alternatively, a custom equation can be defined at
! runtime. Tire contact length from the calculation can be adjusted with
! L_CONTACT_X_GAIN and L_CONTACT_X_OFFSET. Tire compression used in the calculation
! can be adjusted with CMP_SCALE_L_CONTACT_X. This configurable function supports 8
! datasets; if indices shown below are not used, e.g., (1,1,2), the current values of
! the indices IAXLE, ISIDE, and ITIRE are used to identify the dataset when reading
! data.

L_CONTACT_X_CONSTANT(1,1,1) 0 ; mm ! Constant tire contact length, axle 1, left,
                              ! inner
L_CONTACT_X_OFFSET(1,1,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! length

L_CONTACT_X_CONSTANT(1,2,1) 0 ; mm ! Constant tire contact length, axle 1, right,
                              ! inner
L_CONTACT_X_OFFSET(1,2,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! length

L_CONTACT_X_CONSTANT(2,1,1) 0 ; mm ! Constant tire contact length, axle 2, left,
                              ! inner
L_CONTACT_X_OFFSET(2,1,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! length

L_CONTACT_X_CONSTANT(2,1,2) 0 ; mm ! Constant tire contact length, axle 2, left,
                              ! outer
L_CONTACT_X_OFFSET(2,1,2) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! length

L_CONTACT_X_CONSTANT(2,2,1) 0 ; mm ! Constant tire contact length, axle 2, right,
                              ! inner
L_CONTACT_X_OFFSET(2,2,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! length

L_CONTACT_X_CONSTANT(2,2,2) 0 ; mm ! Constant tire contact length, axle 2, right,
                              ! outer
L_CONTACT_X_OFFSET(2,2,2) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! length

! L_CONTACT_Y: Tire/ground contact width. Tire contact width is a function of tire
! compression (CONSTANT or TABLE). Alternatively, a custom equation can be defined at
! runtime. Tire contact width from the calculation can be adjusted with
! L_CONTACT_Y_GAIN and L_CONTACT_Y_OFFSET. Tire compression used in the calculation
! can be adjusted with CMP_SCALE_L_CONTACT_Y. This configurable function supports 8
! datasets; if indices shown below are not used, e.g., (1,1,2), the current values of
! the indices IAXLE, ISIDE, and ITIRE are used to identify the dataset when reading
! data.

L_CONTACT_Y_CONSTANT(1,1,1) 0 ; mm ! Constant tire contact width, axle 1, left,
                              ! inner
L_CONTACT_Y_OFFSET(1,1,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! width

L_CONTACT_Y_CONSTANT(1,2,1) 0 ; mm ! Constant tire contact width, axle 1, right,
                              ! inner
L_CONTACT_Y_OFFSET(1,2,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! width

L_CONTACT_Y_CONSTANT(2,1,1) 0 ; mm ! Constant tire contact width, axle 2, left,
                              ! inner
L_CONTACT_Y_OFFSET(2,1,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! width

L_CONTACT_Y_CONSTANT(2,1,2) 0 ; mm ! Constant tire contact width, axle 2, left,
                              ! outer
L_CONTACT_Y_OFFSET(2,1,2) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! width

L_CONTACT_Y_CONSTANT(2,2,1) 0 ; mm ! Constant tire contact width, axle 2, right,
                              ! inner
L_CONTACT_Y_OFFSET(2,2,1) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! width

L_CONTACT_Y_CONSTANT(2,2,2) 0 ; mm ! Constant tire contact width, axle 2, right,
                              ! outer
L_CONTACT_Y_OFFSET(2,2,2) 0 ; mm ! Offset added (after gain) to get tire contact
                            ! width

! L_RELAX_X: Tire longitudinal relaxation length as a function of vertical load (Fz)
! and lagged slip ratio (Kappa). L_Relax_X can be a nonlinear CARPET function of Fz
! and Lagged Kappa or a function of Lagged Kappa (CONSTANT or TABLE) combined with a
! function L_RELAX_X_FZ of Fz (CONSTANT or TABLE). Alternatively, a custom equation
! can be defined at runtime. L_Relax_X from the calculation can be adjusted with
! L_RELAX_X_GAIN and L_RELAX_X_OFFSET. Lagged Kappa used in the calculation can be
! adjusted with LAGGED_KAPPA_SCALE_L_RELAX_X. Fz used in the calculation can be
! adjusted with FZ_SCALE_L_RELAX_X. This configurable function supports 8 datasets;
! if indices shown below are not used, e.g., (1,1,2), the current values of the
! indices IAXLE, ISIDE, and ITIRE are used to identify the dataset when reading data.
SET_UNITS L_RELAX_X_CARPET(1,1,1) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(1,1,1) SPLINE_FLAT ! axle 1, left, inner
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(1,1,1) 0.102 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(1,1,1) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(1,1,1) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(1,1,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(1,1,1) LINEAR ! axle 1, left, inner
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(1,1,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(1,2,1) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(1,2,1) SPLINE_FLAT ! axle 1, right, inner
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(1,2,1) 0.102 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(1,2,1) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(1,2,1) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(1,2,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(1,2,1) LINEAR ! axle 1, right, inner
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(1,2,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(2,1,1) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(2,1,1) SPLINE_FLAT ! axle 2, left, inner
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(2,1,1) 0.102 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(2,1,1) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(2,1,1) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(2,1,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(2,1,1) LINEAR ! axle 2, left, inner
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(2,1,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(2,1,2) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(2,1,2) SPLINE_FLAT ! axle 2, left, outer
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(2,1,2) 0.102 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(2,1,2) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(2,1,2) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(2,1,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(2,1,2) LINEAR ! axle 2, left, outer
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(2,1,2) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(2,2,1) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(2,2,1) SPLINE_FLAT ! axle 2, right, inner
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(2,2,1) 0.102 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(2,2,1) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(2,2,1) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(2,2,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(2,2,1) LINEAR ! axle 2, right, inner
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(2,2,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(2,2,2) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(2,2,2) SPLINE_FLAT ! axle 2, right, outer
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(2,2,2) 0.102 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(2,2,2) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(2,2,2) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(2,2,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(2,2,2) LINEAR ! axle 2, right, outer
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(2,2,2) 30000 ! Scale factor divided into Fz

! L_RELAX_Y: Tire lateral relaxation length as a function of vertical load (Fz) and
! lagged slip angle (Alpha). L_Relax_Y can be a nonlinear CARPET function of Fz and
! Lagged Alpha or a function of Lagged Alpha (CONSTANT or TABLE) combined with a
! function L_RELAX_Y_FZ of Fz (CONSTANT or TABLE). Alternatively, a custom equation
! can be defined at runtime. L_Relax_Y from the calculation can be adjusted with
! L_RELAX_Y_GAIN and L_RELAX_Y_OFFSET. Lagged Alpha used in the calculation can be
! adjusted with LAGGED_ALPHA_SCALE_L_RELAX_Y. Fz used in the calculation can be
! adjusted with FZ_SCALE_L_RELAX_Y. This configurable function supports 8 datasets;
! if indices shown below are not used, e.g., (1,1,2), the current values of the
! indices IAXLE, ISIDE, and ITIRE are used to identify the dataset when reading data.
SET_UNITS L_RELAX_Y_CARPET(1,1,1) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(1,1,1) SPLINE_FLAT ! axle 1, left, inner
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(1,1,1) 1.02 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(1,1,1) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(1,1,1) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(1,1,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(1,1,1) SPLINE ! axle 1, left, inner
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(1,1,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(1,2,1) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(1,2,1) SPLINE_FLAT ! axle 1, right, inner
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(1,2,1) 1.02 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(1,2,1) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(1,2,1) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(1,2,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(1,2,1) SPLINE ! axle 1, right, inner
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(1,2,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(2,1,1) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(2,1,1) SPLINE_FLAT ! axle 2, left, inner
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(2,1,1) 1.02 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(2,1,1) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(2,1,1) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(2,1,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(2,1,1) SPLINE ! axle 2, left, inner
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(2,1,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(2,1,2) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(2,1,2) SPLINE_FLAT ! axle 2, left, outer
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(2,1,2) 1.02 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(2,1,2) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(2,1,2) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(2,1,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(2,1,2) SPLINE ! axle 2, left, outer
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(2,1,2) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(2,2,1) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(2,2,1) SPLINE_FLAT ! axle 2, right, inner
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(2,2,1) 1.02 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(2,2,1) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(2,2,1) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(2,2,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(2,2,1) SPLINE ! axle 2, right, inner
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(2,2,1) 30000 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(2,2,2) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(2,2,2) SPLINE_FLAT ! axle 2, right, outer
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(2,2,2) 1.02 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(2,2,2) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(2,2,2) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(2,2,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(2,2,2) SPLINE ! axle 2, right, outer
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(2,2,2) 30000 ! Scale factor divided into Fz

! MENGINE: Engine torque applied to crankshaft. Engine torque can be a nonlinear
! CARPET function of normalized throttle and engine speed or a function of engine
! speed multiplied by a function MENGINE_THROTTLE of normalized throttle (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Engine torque from the calculation can be adjusted with MENGINE_GAIN and
! MENGINE_OFFSET. Engine speed used in the calculation can be adjusted with
! SPIN_SCALE_MENGINE and SPIN_START_MENGINE. Normalized throttle used in the
! calculation can be adjusted with THROTTLE_SCALE_MENGINE and THROTTLE_START_MENGINE.

! 2D table: row 1 has "0" (place holder) followed by 11 values of normalized
! throttle (-). Other rows have engine speed (rpm) followed by 11 values of engine
! torque (N-m).
MENGINE_CARPET 2D_LINEAR
 0, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1
 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 401, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 500, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250
 800, 0, 27.8, 74.2, 129.9, 185.6, 222.7, 278.4, 334.1, 389.8, 436.2, 482.6
 1000, -18.6, 43.7, 105.9, 168.2, 230.4, 292.7, 355, 417.2, 479.5, 541.7, 604
 1200, -22.3, 44.5, 111.4, 178.2, 245, 311.8, 378.6, 445.5, 512.3, 579.1, 645.9
 1400, -26, 45.1, 116.1, 187.2, 258.2, 329.3, 400.3, 471.4, 542.4, 613.5, 684.5
 1600, -29.7, 43.7, 117.2, 190.6, 264, 337.4, 410.9, 484.3, 557.7, 631.1, 704.6
 1800, -33.4, 40.4, 114.2, 188, 261.8, 335.6, 409.4, 483.2, 557, 630.8, 704.6
 2000, -37.1, 34.8, 106.7, 178.6, 250.5, 322.4, 394.3, 466.2, 538.1, 610, 681.9
 2200, -40.8, 29.2, 99.2, 169.2, 239.2, 309.2, 379.2, 449.2, 519.3, 589.3, 659.3
 2400, -44.5, 23.3, 91.2, 159.1, 227, 294.9, 362.8, 430.7, 498.6, 566.5, 634.4
 2600, -48.3, 17.5, 83.2, 149, 214.7, 280.5, 346.2, 411.9, 477.7, 543.4, 609.2
 2800, -52, 11.5, 75.1, 138.6, 202.1, 265.6, 329.1, 392.6, 456.1, 519.7, 583.2
 3000, -55.7, 5.6, 66.9, 128.2, 189.5, 250.8, 312, 373.3, 434.6, 495.9, 557.2
 3100, -55.7, -55.7, -55.7, -55.7, -55.7, -55.7, -55.7, -55.7, -55.7, -55.7, -55.7
 3150, -74.2, -74.2, -74.2, -74.2, -74.2, -74.2, -74.2, -74.2, -74.2, -74.2, -74.2
ENDTABLE
MENGINE_GAIN        1 ! Gain multiplied with calculated value to get engine torque
MENGINE_OFFSET      0 ; N-m ! Offset added (after gain) to get engine torque
SPIN_START_MENGINE  0 ; rpm ! Offset subtracted from engine speed
SPIN_SCALE_MENGINE  1 ! Scale factor divided into (engine speed -
                      ! SPIN_START_MENGINE)
THROTTLE_START_MENGINE 0 ; - ! Offset subtracted from normalized throttle
THROTTLE_SCALE_MENGINE 1 ! Scale factor divided into (normalized throttle -
                         ! THROTTLE_START_MENGINE)

! MODE_TRANS: Transmission controller mode.  -1 -> reverse, 0 -> neutral, 1 ->
! open-loop (using the function GEAR_TRANS), 2 through 18 -> closed-loop limit
! (maximum gear available). Transmission mode is a function of time (CONSTANT or
! TABLE). Alternatively, a custom equation can be defined at runtime. Transmission
! mode from the calculation can be adjusted with MODE_TRANS_GAIN and
! MODE_TRANS_OFFSET. Time used in the calculation can be adjusted with TSCALE_TRANS
! and TSTART_TRANS.

MODE_TRANS_CONSTANT 7 ; - ! Constant transmission mode
MODE_TRANS_GAIN     1 ! Gain multiplied with calculated value to get transmission
                      ! mode
MODE_TRANS_OFFSET   0 ; - ! Offset added (after gain) to get transmission mode

! MU_ROAD: Tire/road friction coefficient (MU) for a road surface. Use MU = -1 for
! original tire data (no scaling). MU can be a nonlinear CARPET function of lateral
! position and station or a function of station (CONSTANT or TABLE) combined with a
! function MU_ROAD_L of lateral position (CONSTANT or TABLE). Alternatively, a custom
! equation can be defined at runtime. MU from the calculation can be adjusted with
! MU_ROAD_GAIN and MU_ROAD_OFFSET. Station used in the calculation can be adjusted
! with SSCALE_MU_ROAD and SSTART_MU_ROAD. Lateral position used in the calculation
! can be adjusted with L_SCALE_MU_ROAD and L_START_MU_ROAD. This configurable
! function supports 200 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IROAD is used to identify the dataset when reading data.

MU_ROAD_CONSTANT(1) 0.85 ; - ! Constant MU component due to station
MU_ROAD_GAIN(1)     1 ! Gain multiplied with calculated value to get MU
MU_ROAD_OFFSET(1)   0 ; - ! Offset added (after gain) to get MU
MU_ROAD_COMBINE(1) ADD ! How to combine the two components
MU_ROAD_L_CONSTANT(1) 0 ; - ! Constant MU component due to lateral position

! MX_AERO_SHAPING: Coefficient CMX for for X component of aerodynamic moment. CMX is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CMX from the
! calculation can be adjusted with MX_AERO_SHAPING_GAIN and MX_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_MX_AERO and SLIP_START_MX_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CMX (-)
MX_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -25, -1.6
 -20, -1.2
 -15, -0.85
 -10, -0.5
 -5, -0.25
 0, 0
 5, 0.25
 10, 0.5
 15, 0.85
 20, 1.2
 25, 1.6
ENDTABLE
MX_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CMX
MX_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CMX
SLIP_START_MX_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_MX_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_MX_AERO)

! MX_AUX: Auxiliary roll moment (exerted on axle). Auxiliary roll moment can be a
! nonlinear CARPET function of static axle load and relative axle roll or a function
! of relative axle roll (CONSTANT, COEFFICIENT, or TABLE) combined with a function
! MX_AUX_FSTATIC of static axle load (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Auxiliary roll moment
! from the calculation can be adjusted with MX_AUX_GAIN and MX_AUX_OFFSET. Relative
! axle roll used in the calculation can be adjusted with ROLL_SCALE_MX_AUX and
! ROLL_START_MX_AUX. Static axle load used in the calculation can be adjusted with
! FSTATIC_SCALE_MX_AUX and FSTATIC_START_MX_AUX. This configurable function supports
! 2 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IAXLE is used to identify the dataset when reading data.

MX_AUX_COEFFICIENT(1) 8500 ! Coefficient: auxiliary roll moment per unit relative
                           ! axle roll (N-m/deg), axle 1
MX_AUX_GAIN(1)      1 ! Gain multiplied with calculated value to get auxiliary roll
                      ! moment
MX_AUX_OFFSET(1)    0 ; N-m ! Offset added (after gain) to get auxiliary roll moment
ROLL_START_MX_AUX(1) 0 ; deg ! Offset subtracted from relative axle roll
ROLL_SCALE_MX_AUX(1) 1 ! Scale factor divided into (relative axle roll -
                       ! ROLL_START_MX_AUX)
MX_AUX_COMBINE(1) ADD ! How to combine the two components
SET_UNITS MX_AUX_FSTATIC_TABLE(1) N-m ;
MX_AUX_FSTATIC_CONSTANT(1) 0 ; N-m ! Constant auxiliary roll moment component due to
                             ! static axle load, axle 1

MX_AUX_COEFFICIENT(2) 1500 ! Coefficient: auxiliary roll moment per unit relative
                           ! axle roll (N-m/deg), axle 2
MX_AUX_GAIN(2)      1 ! Gain multiplied with calculated value to get auxiliary roll
                      ! moment
MX_AUX_OFFSET(2)    0 ; N-m ! Offset added (after gain) to get auxiliary roll moment
ROLL_START_MX_AUX(2) 0 ; deg ! Offset subtracted from relative axle roll
ROLL_SCALE_MX_AUX(2) 1 ! Scale factor divided into (relative axle roll -
                       ! ROLL_START_MX_AUX)
MX_AUX_COMBINE(2) ADD ! How to combine the two components
SET_UNITS MX_AUX_FSTATIC_TABLE(2) N-m ;
MX_AUX_FSTATIC_CONSTANT(2) 0 ; N-m ! Constant auxiliary roll moment component due to
                             ! static axle load, axle 2

! MY_AERO_SHAPING: Coefficient CMY for for Y component of aerodynamic moment. CMY is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CMY from the
! calculation can be adjusted with MY_AERO_SHAPING_GAIN and MY_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_MY_AERO and SLIP_START_MY_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CMY (-)
MY_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -25, 0.38
 0, 0.2
 25, 0.38
ENDTABLE
MY_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CMY
MY_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CMY
SLIP_START_MY_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_MY_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_MY_AERO)

! MY_BRAKE: Brake torque at wheel. Brake torque is a function of wheel cylinder
! pressure (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Brake torque from the calculation can be adjusted with
! MY_BRAKE_GAIN and MY_BRAKE_OFFSET. Wheel cylinder pressure used in the calculation
! can be adjusted with PBK_SCALE_MY_BRAKE and PBK_START_MY_BRAKE. This configurable
! function supports 4 datasets; if indices shown below are not used, e.g., (1,2), the
! current values of the indices IAXLE and ISIDE are used to identify the dataset when
! reading data.

! 1D table: col 1 = wheel cylinder pressure (MPa), col 2 = brake torque (N-m)
MY_BRAKE_TABLE(1,1) SPLINE ! axle 1, left side
 -0.1, 0
 -0.005, 0
 0, 0
 0.005, 0
 0.01, 0
 0.015, 0
 0.02, 0
 0.025, 0
 0.03, 0
 0.032, 0
 0.1, 0
 0.15, 0
 0.2, 0
 0.25, 0
 0.3, 0
 0.325, 0
 0.35, 0
 2.5, 1400
 5.5, 6670.8
 7, 10000
ENDTABLE
MY_BRAKE_GAIN(1,1)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(1,1) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(1,1) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(1,1) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

! 1D table: col 1 = wheel cylinder pressure (MPa), col 2 = brake torque (N-m)
MY_BRAKE_TABLE(1,2) SPLINE ! axle 1, right side
 -0.1, 0
 -0.005, 0
 0, 0
 0.005, 0
 0.01, 0
 0.015, 0
 0.02, 0
 0.025, 0
 0.03, 0
 0.032, 0
 0.1, 0
 0.15, 0
 0.2, 0
 0.25, 0
 0.3, 0
 0.325, 0
 0.35, 0
 2.5, 1400
 5.5, 6670.8
 7, 10000
ENDTABLE
MY_BRAKE_GAIN(1,2)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(1,2) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(1,2) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(1,2) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

! 1D table: col 1 = wheel cylinder pressure (MPa), col 2 = brake torque (N-m)
MY_BRAKE_TABLE(2,1) SPLINE ! axle 2, left side
 -0.1, 0
 -0.005, 0
 0, 0
 0.005, 0
 0.01, 0
 0.015, 0
 0.02, 0
 0.025, 0
 0.03, 0
 0.032, 0
 0.1, 0
 0.15, 0
 0.2, 0
 0.25, 0
 0.3, 0
 0.325, 0
 0.35, 0
 2.5, 1400
 5.5, 6670.8
 7, 10000
ENDTABLE
MY_BRAKE_GAIN(2,1)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(2,1) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(2,1) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(2,1) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

! 1D table: col 1 = wheel cylinder pressure (MPa), col 2 = brake torque (N-m)
MY_BRAKE_TABLE(2,2) SPLINE ! axle 2, right side
 -0.1, 0
 -0.005, 0
 0, 0
 0.005, 0
 0.01, 0
 0.015, 0
 0.02, 0
 0.025, 0
 0.03, 0
 0.032, 0
 0.1, 0
 0.15, 0
 0.2, 0
 0.25, 0
 0.3, 0
 0.325, 0
 0.35, 0
 2.5, 1400
 5.5, 6670.8
 7, 10000
ENDTABLE
MY_BRAKE_GAIN(2,2)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(2,2) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(2,2) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(2,2) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

! MZ_AERO_SHAPING: Coefficient CMZ for for Z component of aerodynamic moment. CMZ is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CMZ from the
! calculation can be adjusted with MZ_AERO_SHAPING_GAIN and MZ_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_MZ_AERO and SLIP_START_MZ_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CMZ (-)
MZ_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
 -25, -0.3
 25, 0.3
ENDTABLE
MZ_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CMZ
MZ_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CMZ
SLIP_START_MZ_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_MZ_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_MZ_AERO)

! MZ_PARKING_STEER: Speed-sensitive steering torque for parking and near-zero speed
! conditions. Steering torque at kingpin can be a nonlinear CARPET function of
! vertical load and vehicle speed or a function of vehicle speed (CONSTANT or TABLE)
! combined with a function MZ_PARKING_STEER_FZ of vertical load (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Steering torque at kingpin from the calculation can be adjusted with
! MZ_PARKING_STEER_GAIN and MZ_PARKING_STEER_OFFSET. Vehicle speed used in the
! calculation can be adjusted with VX_SCALE_MZ_PARKING_STEER and
! VX_START_MZ_PARKING_STEER. Vertical load used in the calculation can be adjusted
! with FZ_SCALE_MZ_PARKING_STEER and FZ_START_MZ_PARKING_STEER. This configurable
! function supports 4 datasets; if indices shown below are not used, e.g., (1,2), the
! current values of the indices IAXLE and ISIDE are used to identify the dataset when
! reading data.

MZ_PARKING_STEER_CONSTANT(1,1) 0 ; N-m ! Constant steering torque at kingpin
                                 ! component due to vehicle speed, axle 1, left
                                 ! side
MZ_PARKING_STEER_GAIN(1,1) 1 ! Gain multiplied with calculated value to get steering
                             ! torque at kingpin
MZ_PARKING_STEER_OFFSET(1,1) 0 ; N-m ! Offset added (after gain) to get steering
                               ! torque at kingpin
MZ_PARKING_STEER_COMBINE(1,1) ADD ! How to combine the two components
SET_UNITS MZ_PARKING_STEER_FZ_TABLE(1,1) N-m ;
MZ_PARKING_STEER_FZ_CONSTANT(1,1) 0 ; N-m ! Constant steering torque at kingpin
                                    ! component due to vertical load, axle 1, left
                                    ! side

MZ_PARKING_STEER_CONSTANT(1,2) 0 ; N-m ! Constant steering torque at kingpin
                                 ! component due to vehicle speed, axle 1, right
                                 ! side
MZ_PARKING_STEER_GAIN(1,2) 1 ! Gain multiplied with calculated value to get steering
                             ! torque at kingpin
MZ_PARKING_STEER_OFFSET(1,2) 0 ; N-m ! Offset added (after gain) to get steering
                               ! torque at kingpin
MZ_PARKING_STEER_COMBINE(1,2) ADD ! How to combine the two components
SET_UNITS MZ_PARKING_STEER_FZ_TABLE(1,2) N-m ;
MZ_PARKING_STEER_FZ_CONSTANT(1,2) 0 ; N-m ! Constant steering torque at kingpin
                                    ! component due to vertical load, axle 1, right
                                    ! side

! MZ_TIRE: Tire aligning moment (Mz) as a function of vertical load (Fz) and lateral
! slip (Alpha). Mz can be a nonlinear CARPET function of Fz and Alpha or a function
! of Alpha multiplied by a function MZ_TIRE_FZ of Fz (CONSTANT, COEFFICIENT, or
! TABLE). Mz from the calculation can be adjusted with MZ_TIRE_GAIN and
! MZ_TIRE_OFFSET. Alpha used in the calculation can be adjusted with
! ALPHA_SCALE_MZ_TIRE and ALPHA_START_MZ_TIRE. Fz used in the calculation can be
! adjusted with FZ_SCALE_MZ_TIRE and FZ_START_MZ_TIRE. This configurable function
! supports 8 datasets; if indices shown below are not used, e.g., (1,1,2), the
! current values of the indices IAXLE, ISIDE, and ITIRE are used to identify the
! dataset when reading data.

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(1,1,1) 2D_FROM_ZERO ! axle 1, left, inner
 0, 4905, 9810, 19620, 29430, 39240
 1, 34.99, 85.89, 231.94, 431.45, 687.86
 2, 63.79, 156.52, 421.63, 784.76, 1252.92
 4, 99.48, 243.88, 652.97, 1217.04, 1949.83
 6, 108.2, 264.95, 703.46, 1313.71, 2114.84
 8, 98.69, 241.21, 632.63, 1184.84, 1920.83
 10, 79.76, 194.4, 499.89, 940.64, 1542.25
 12, 57.12, 138.52, 343.28, 651.79, 1091.45
 15, 22.1, 52.14, 102.43, 207.03, 395.26
 20, 0, 0, 0, 0, 0
 25, 0, 0, 0, 0, 0
 30, 0, 0, 0, 0, 0
 35, 0, 0, 0, 0, 0
 40, 0, 0, 0, 0, 0
 45, 0, 0, 0, 0, 0
 50, 0, 0, 0, 0, 0
 60, 0, 0, 0, 0, 0
 70, 0, 0, 0, 0, 0
 80, 0, 0, 0, 0, 0
 89, 0, 0, 0, 0, 0
 90, 0, 0, 0, 0, 0
ENDTABLE
MZ_TIRE_GAIN(1,1,1) 1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(1,1,1) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(1,1,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(1,1,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(1,1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(1,1,1) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(1,2,1) 2D_FROM_ZERO ! axle 1, right, inner
 0, 4905, 9810, 19620, 29430, 39240
 1, 34.99, 85.89, 231.94, 431.45, 687.86
 2, 63.79, 156.52, 421.63, 784.76, 1252.92
 4, 99.48, 243.88, 652.97, 1217.04, 1949.83
 6, 108.2, 264.95, 703.46, 1313.71, 2114.84
 8, 98.69, 241.21, 632.63, 1184.84, 1920.83
 10, 79.76, 194.4, 499.89, 940.64, 1542.25
 12, 57.12, 138.52, 343.28, 651.79, 1091.45
 15, 22.1, 52.14, 102.43, 207.03, 395.26
 20, 0, 0, 0, 0, 0
 25, 0, 0, 0, 0, 0
 30, 0, 0, 0, 0, 0
 35, 0, 0, 0, 0, 0
 40, 0, 0, 0, 0, 0
 45, 0, 0, 0, 0, 0
 50, 0, 0, 0, 0, 0
 60, 0, 0, 0, 0, 0
 70, 0, 0, 0, 0, 0
 80, 0, 0, 0, 0, 0
 89, 0, 0, 0, 0, 0
 90, 0, 0, 0, 0, 0
ENDTABLE
MZ_TIRE_GAIN(1,2,1) 1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(1,2,1) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(1,2,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(1,2,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(1,2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(1,2,1) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(2,1,1) 2D_FROM_ZERO ! axle 2, left, inner
 0, 4905, 9810, 19620, 29430, 39240
 1, 34.99, 85.89, 231.94, 431.45, 687.86
 2, 63.79, 156.52, 421.63, 784.76, 1252.92
 4, 99.48, 243.88, 652.97, 1217.04, 1949.83
 6, 108.2, 264.95, 703.46, 1313.71, 2114.84
 8, 98.69, 241.21, 632.63, 1184.84, 1920.83
 10, 79.76, 194.4, 499.89, 940.64, 1542.25
 12, 57.12, 138.52, 343.28, 651.79, 1091.45
 15, 22.1, 52.14, 102.43, 207.03, 395.26
 20, 0, 0, 0, 0, 0
 25, 0, 0, 0, 0, 0
 30, 0, 0, 0, 0, 0
 35, 0, 0, 0, 0, 0
 40, 0, 0, 0, 0, 0
 45, 0, 0, 0, 0, 0
 50, 0, 0, 0, 0, 0
 60, 0, 0, 0, 0, 0
 70, 0, 0, 0, 0, 0
 80, 0, 0, 0, 0, 0
 89, 0, 0, 0, 0, 0
 90, 0, 0, 0, 0, 0
ENDTABLE
MZ_TIRE_GAIN(2,1,1) 1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(2,1,1) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(2,1,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(2,1,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(2,1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(2,1,1) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(2,1,2) 2D_FROM_ZERO ! axle 2, left, outer
 0, 4905, 9810, 19620, 29430, 39240
 1, 34.99, 85.89, 231.94, 431.45, 687.86
 2, 63.79, 156.52, 421.63, 784.76, 1252.92
 4, 99.48, 243.88, 652.97, 1217.04, 1949.83
 6, 108.2, 264.95, 703.46, 1313.71, 2114.84
 8, 98.69, 241.21, 632.63, 1184.84, 1920.83
 10, 79.76, 194.4, 499.89, 940.64, 1542.25
 12, 57.12, 138.52, 343.28, 651.79, 1091.45
 15, 22.1, 52.14, 102.43, 207.03, 395.26
 20, 0, 0, 0, 0, 0
 25, 0, 0, 0, 0, 0
 30, 0, 0, 0, 0, 0
 35, 0, 0, 0, 0, 0
 40, 0, 0, 0, 0, 0
 45, 0, 0, 0, 0, 0
 50, 0, 0, 0, 0, 0
 60, 0, 0, 0, 0, 0
 70, 0, 0, 0, 0, 0
 80, 0, 0, 0, 0, 0
 89, 0, 0, 0, 0, 0
 90, 0, 0, 0, 0, 0
ENDTABLE
MZ_TIRE_GAIN(2,1,2) 1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(2,1,2) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(2,1,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(2,1,2) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(2,1,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(2,1,2) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(2,2,1) 2D_FROM_ZERO ! axle 2, right, inner
 0, 4905, 9810, 19620, 29430, 39240
 1, 34.99, 85.89, 231.94, 431.45, 687.86
 2, 63.79, 156.52, 421.63, 784.76, 1252.92
 4, 99.48, 243.88, 652.97, 1217.04, 1949.83
 6, 108.2, 264.95, 703.46, 1313.71, 2114.84
 8, 98.69, 241.21, 632.63, 1184.84, 1920.83
 10, 79.76, 194.4, 499.89, 940.64, 1542.25
 12, 57.12, 138.52, 343.28, 651.79, 1091.45
 15, 22.1, 52.14, 102.43, 207.03, 395.26
 20, 0, 0, 0, 0, 0
 25, 0, 0, 0, 0, 0
 30, 0, 0, 0, 0, 0
 35, 0, 0, 0, 0, 0
 40, 0, 0, 0, 0, 0
 45, 0, 0, 0, 0, 0
 50, 0, 0, 0, 0, 0
 60, 0, 0, 0, 0, 0
 70, 0, 0, 0, 0, 0
 80, 0, 0, 0, 0, 0
 89, 0, 0, 0, 0, 0
 90, 0, 0, 0, 0, 0
ENDTABLE
MZ_TIRE_GAIN(2,2,1) 1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(2,2,1) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(2,2,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(2,2,1) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(2,2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(2,2,1) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (N). Other rows
! have Alpha (deg) followed by 5 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(2,2,2) 2D_FROM_ZERO ! axle 2, right, outer
 0, 4905, 9810, 19620, 29430, 39240
 1, 34.99, 85.89, 231.94, 431.45, 687.86
 2, 63.79, 156.52, 421.63, 784.76, 1252.92
 4, 99.48, 243.88, 652.97, 1217.04, 1949.83
 6, 108.2, 264.95, 703.46, 1313.71, 2114.84
 8, 98.69, 241.21, 632.63, 1184.84, 1920.83
 10, 79.76, 194.4, 499.89, 940.64, 1542.25
 12, 57.12, 138.52, 343.28, 651.79, 1091.45
 15, 22.1, 52.14, 102.43, 207.03, 395.26
 20, 0, 0, 0, 0, 0
 25, 0, 0, 0, 0, 0
 30, 0, 0, 0, 0, 0
 35, 0, 0, 0, 0, 0
 40, 0, 0, 0, 0, 0
 45, 0, 0, 0, 0, 0
 50, 0, 0, 0, 0, 0
 60, 0, 0, 0, 0, 0
 70, 0, 0, 0, 0, 0
 80, 0, 0, 0, 0, 0
 89, 0, 0, 0, 0, 0
 90, 0, 0, 0, 0, 0
ENDTABLE
MZ_TIRE_GAIN(2,2,2) 1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(2,2,2) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(2,2,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(2,2,2) 1 ! Scale factor divided into (Alpha -
                             ! ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(2,2,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(2,2,2) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! M_DIFF_VISC: Torque from viscous differential. The speed and torque differences
! are either [left - right] (half-shaft) or [front - rear] (driveshaft). This torque
! difference is a function of speed difference (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. This torque difference
! from the calculation can be adjusted with M_DIFF_VISC_GAIN and M_DIFF_VISC_OFFSET.
! Speed difference used in the calculation can be adjusted with
! DSPIN_SCALE_M_DIFF_VISC and DSPIN_START_M_DIFF_VISC. This configurable function
! supports 9 datasets; if indices shown below are not used, e.g., (2), the current
! value of the index IDIFF is used to identify the dataset when reading data.

M_DIFF_VISC_CONSTANT(2) 0 ; N-m ! Constant this torque difference, 2nd drive axle
                          ! diff
M_DIFF_VISC_OFFSET(2) 0 ; N-m ! Offset added (after gain) to get this torque
                        ! difference

! M_SW: Steering wheel torque. Torque at steering wheel can be a nonlinear CARPET
! function of vehicle speed and total steering torque about kingpin axes of both
! front wheels or a function of total steering torque about kingpin axes of both
! front wheels (CONSTANT, COEFFICIENT, or TABLE) combined with a function M_SW_V of
! vehicle speed (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation
! can be defined at runtime. Torque at steering wheel from the calculation can be
! adjusted with M_SW_GAIN and M_SW_OFFSET.

M_SW_COEFFICIENT 0.04 ! Coefficient: torque at steering wheel per unit total
                      ! steering torque about kingpin axes of both front wheels
                      ! (N-m/N-m)
M_SW_GAIN           1 ! Gain multiplied with calculated value to get torque at
                      ! steering wheel
M_SW_OFFSET         0 ; N-m ! Offset added (after gain) to get torque at steering
                      ! wheel
M_SW_COMBINE MULTIPLY ! How to combine the two components
M_SW_V_CONSTANT     1 ; - ! Constant torque at steering wheel component due to
                      ! vehicle speed

! M_TRANS_AV: Component of transmission output torque due to torsional damping of
! the driveline. Transmission output torque is a function of compliance twist angular
! rate (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Transmission output torque from the calculation can be adjusted
! with M_TRANS_AV_GAIN and M_TRANS_AV_OFFSET. Compliance twist angular rate used in
! the calculation can be adjusted with AV_SCALE_M_TRANS and AV_START_M_TRANS.

M_TRANS_AV_CONSTANT 0 ; N-m ! [D] Constant transmission output torque
M_TRANS_AV_OFFSET   0 ; N-m ! Offset added (after gain) to get transmission output
                      ! torque

! M_TRANS_ROT: Component of transmission output torque due to torsional stiffness of
! the driveline. Transmission output torque is a function of compliance twist angle
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Transmission output torque from the calculation can be adjusted with
! M_TRANS_ROT_GAIN and M_TRANS_ROT_OFFSET. Compliance twist angle used in the
! calculation can be adjusted with ROT_SCALE_M_TRANS and ROT_START_M_TRANS.

M_TRANS_ROT_CONSTANT 0 ; N-m ! [D] Constant transmission output torque
M_TRANS_ROT_OFFSET  0 ; N-m ! Offset added (after gain) to get transmission output
                      ! torque

! PBK_CON: Brake control pressure (master cylinder). Brake pressure is a function of
! time (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Brake pressure from the calculation can be adjusted with
! PBK_CON_GAIN and PBK_CON_OFFSET. Time used in the calculation can be adjusted with
! TSCALE_PBK_CON and TSTART_PBK_CON.

PBK_CON_CONSTANT    0 ; MPa ! Constant brake pressure
PBK_CON_OFFSET      0 ; MPa ! Offset added (after gain) to get brake pressure

! PBK_DL: Brake delivery pressure (proportioning valve). Delivery pressure can be a
! nonlinear CARPET function of dynamic wheel load and master cylinder pressure or a
! function of master cylinder pressure (CONSTANT, COEFFICIENT, or TABLE) combined
! with a function PBK_DL_FZ of dynamic wheel load (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Delivery pressure from
! the calculation can be adjusted with PBK_DL_GAIN and PBK_DL_OFFSET. Master cylinder
! pressure used in the calculation can be adjusted with PBK_CON_SCALE_PBK_DL and
! PBK_CON_START_PBK_DL. Dynamic wheel load used in the calculation can be adjusted
! with FZ_SCALE_PBK_DL and FZ_START_PBK_DL. This configurable function supports 4
! datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

PBK_DL_COEFFICIENT(1,1) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 1, left side
PBK_DL_GAIN(1,1)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(1,1)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(1,1) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(1,1) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(1,1) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(1,1) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 1, left side

PBK_DL_COEFFICIENT(1,2) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 1, right side
PBK_DL_GAIN(1,2)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(1,2)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(1,2) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(1,2) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(1,2) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(1,2) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 1, right side

PBK_DL_COEFFICIENT(2,1) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 2, left side
PBK_DL_GAIN(2,1)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(2,1)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(2,1) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(2,1) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(2,1) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(2,1) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 2, left side

PBK_DL_COEFFICIENT(2,2) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 2, right side
PBK_DL_GAIN(2,2)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(2,2)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(2,2) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(2,2) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(2,2) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(2,2) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 2, right side

! ROAD_NEW_ID: Left/right boundary: 0 -> no boundary, -1 stop when L reaches
! boundary, > 0 ID of adjacent road. ID is a function of S (CONSTANT, COEFFICIENT, or
! TABLE). Alternatively, a custom equation can be defined at runtime. ID from the
! calculation can be adjusted with ROAD_NEW_ID_GAIN and ROAD_NEW_ID_OFFSET. S used in
! the calculation can be adjusted with SSCALE_ROAD_NEW_ID and SSTART_ROAD_NEW_ID.
! This configurable function supports 400 datasets; if indices shown below are not
! used, e.g., (1,2), the current values of the indices IROAD and ISIDE are used to
! identify the dataset when reading data.

ROAD_NEW_ID_CONSTANT(1,1) 0 ; - ! [D] Constant ID, Road 1, left side boundary
ROAD_NEW_ID_OFFSET(1,1) 0 ; - ! Offset added (after gain) to get ID

ROAD_NEW_ID_CONSTANT(1,2) 0 ; - ! [D] Constant ID, Road 1, right side boundary
ROAD_NEW_ID_OFFSET(1,2) 0 ; - ! Offset added (after gain) to get ID

! ROAD_ZS: Road elevation component related only to road station S. Elevation is a
! function of station (CONSTANT, COEFFICIENT, or TABLE). Elevation from the
! calculation can be adjusted with ROAD_ZS_GAIN and ROAD_ZS_OFFSET. Station used in
! the calculation can be adjusted with SSCALE_ROAD_ZS and SSTART_ROAD_ZS. The
! derivative of this function is used internally. This configurable function supports
! 200 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IROAD is used to identify the dataset when reading data.

ROAD_ZS_CONSTANT(1) 0 ; m ! [D] Constant elevation
ROAD_ZS_OFFSET(1)   0 ; m ! Offset added (after gain) to get elevation

! RR_SURF: Tire/road rolling resistance surface-effect coefficient. RR_SURF can be a
! nonlinear CARPET function of lateral position and station or a function of station
! (CONSTANT or TABLE) combined with a function RR_SURF_L of lateral position
! (CONSTANT or TABLE). Alternatively, a custom equation can be defined at runtime.
! RR_SURF from the calculation can be adjusted with RR_SURF_GAIN and RR_SURF_OFFSET.
! Station used in the calculation can be adjusted with SSCALE_RR_SURF and
! SSTART_RR_SURF. Lateral position used in the calculation can be adjusted with
! L_SCALE_RR_SURF and L_START_RR_SURF. This configurable function supports 200
! datasets; if indices shown below are not used, e.g., (2), the current value of the
! index IROAD is used to identify the dataset when reading data.

RR_SURF_CONSTANT(1) 1 ; - ! Constant RR_SURF component due to station
RR_SURF_GAIN(1)     1 ! Gain multiplied with calculated value to get RR_SURF
RR_SURF_OFFSET(1)   0 ; - ! Offset added (after gain) to get RR_SURF
RR_SURF_COMBINE(1) MULTIPLY ! How to combine the two components
RR_SURF_L_CONSTANT(1) 1 ; - ! [D] Constant RR_SURF component due to lateral position

! R_STEER_SPEED: Rear-wheel steering gain due to speed. The gain is: [rear steer
! control]/[driver steer control]. This ratio is multiplied with the nominal steering
! gear input to determine the input to any rear axle steering gear. Gain is a
! function of speed (CONSTANT, COEFFICIENT, or TABLE). Gain from the calculation can
! be adjusted with R_STEER_SPEED_GAIN and R_STEER_SPEED_OFFSET. Speed used in the
! calculation can be adjusted with VX_SCALE_R_STEER and VX_START_R_STEER. The
! derivative of this function is used internally. This configurable function supports
! 2 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IAXLE is used to identify the dataset when reading data.

R_STEER_SPEED_CONSTANT(1) 1 ; - ! Constant gain, axle 1
R_STEER_SPEED_GAIN(1) 1 ! Gain multiplied with calculated value to get gain
R_STEER_SPEED_OFFSET(1) 0 ; - ! Offset added (after gain) to get gain

! SPEED_TARGET: Speed controller target. Speed can be a nonlinear CARPET function of
! station and time or a function of time (CONSTANT, COEFFICIENT, or TABLE) combined
! with a function SPEED_TARGET_S of station (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Speed from the
! calculation can be adjusted with SPEED_TARGET_GAIN and SPEED_TARGET_OFFSET. Time
! used in the calculation can be adjusted with TSCALE_SPEED_TARGET and
! TSTART_SPEED_TARGET. Station used in the calculation can be adjusted with
! SSCALE_SPEED_TARGET and SSTART_SPEED_TARGET. This configurable function supports
! 200 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index ISPEED is used to identify the dataset when reading data.

SPEED_TARGET_ID(1)  1  ! Procedure: Straight Driving, Constant Speed
SPEED_TARGET_CONSTANT(1) 50 ; km/h ! Constant speed component due to time
SPEED_TARGET_GAIN(1) 1 ! Gain multiplied with calculated value to get speed
SPEED_TARGET_OFFSET(1) 0 ; km/h ! Offset added (after gain) to get speed
SPEED_TARGET_COMBINE(1) ADD ! How to combine the two components
SET_UNITS SPEED_TARGET_S_TABLE(1) km/h ;
SPEED_TARGET_S_CONSTANT(1) 0 ; km/h ! Constant speed component due to station

SPEED_TARGET_ID(2)  2  ! Set from the Run Control screen
SPEED_TARGET_CONSTANT(2) 112.65 ; km/h ! Constant speed component due to time
SPEED_TARGET_GAIN(2) 1 ! Gain multiplied with calculated value to get speed
SPEED_TARGET_OFFSET(2) 0 ; km/h ! Offset added (after gain) to get speed
SPEED_TARGET_COMBINE(2) ADD ! How to combine the two components
SET_UNITS SPEED_TARGET_S_TABLE(2) km/h ;
SPEED_TARGET_S_CONSTANT(2) 0 ; km/h ! Constant speed component due to station

! STEER_KIN: Nonlinear steering system kinematics for recirculating ball: steer
! angle at the road wheel. Road wheel steer is a function of pitman arm angle
! (CONSTANT, COEFFICIENT, or TABLE). Road wheel steer from the calculation can be
! adjusted with STEER_KIN_GAIN and STEER_KIN_OFFSET. The derivative of this function
! is used internally. This configurable function supports 4 datasets; if indices
! shown below are not used, e.g., (1,2), the current values of the indices IAXLE and
! ISIDE are used to identify the dataset when reading data.

! 1D table: col 1 = pitman arm angle (deg), col 2 = road wheel steer (deg)
STEER_KIN_TABLE(1,1) SPLINE ! axle 1, left side
 -40, -35.655
 -38, -34.008
 -36, -32.353
 -34, -30.692
 -32, -29.02
 -30, -27.339
 -28, -25.645
 -26, -23.939
 -24, -22.218
 -22, -20.481
 -20, -18.728
 -18, -16.956
 -16, -15.165
 -14, -13.353
 -12, -11.519
 -10, -9.662
 -8, -7.782
 -6, -5.876
 -4, -3.944
 -2, -1.986
 0, 0
 2, 2.014
 4, 4.057
 6, 6.129
 8, 8.231
 10, 10.362
 12, 12.522
 14, 14.712
 16, 16.93
 18, 19.176
 20, 21.449
 22, 23.748
 24, 26.071
 26, 28.418
 28, 30.785
 30, 33.171
 32, 35.574
 34, 37.991
 36, 40.42
 38, 42.857
 40, 45.301
ENDTABLE
STEER_KIN_GAIN(1,1) 1 ! Gain multiplied with calculated value to get road wheel
                      ! steer
STEER_KIN_OFFSET(1,1) 0 ; deg ! Offset added (after gain) to get road wheel steer

! 1D table: col 1 = pitman arm angle (deg), col 2 = road wheel steer (deg)
STEER_KIN_TABLE(1,2) SPLINE ! axle 1, right side
 -40, -45.301
 -38, -42.857
 -36, -40.42
 -34, -37.991
 -32, -35.574
 -30, -33.171
 -28, -30.785
 -26, -28.418
 -24, -26.071
 -22, -23.748
 -20, -21.449
 -18, -19.176
 -16, -16.93
 -14, -14.712
 -12, -12.522
 -10, -10.362
 -8, -8.231
 -6, -6.129
 -4, -4.057
 -2, -2.014
 0, 0
 2, 1.986
 4, 3.944
 6, 5.876
 8, 7.782
 10, 9.662
 12, 11.519
 14, 13.353
 16, 15.165
 18, 16.956
 20, 18.728
 22, 20.481
 24, 22.218
 26, 23.939
 28, 25.645
 30, 27.339
 32, 29.02
 34, 30.692
 36, 32.353
 38, 34.008
 40, 35.655
ENDTABLE
STEER_KIN_GAIN(1,2) 1 ! Gain multiplied with calculated value to get road wheel
                      ! steer
STEER_KIN_OFFSET(1,2) 0 ; deg ! Offset added (after gain) to get road wheel steer

! SUSP_AXLE_ROLL_STEER: Suspension roll steer. Steer is a function of roll
! (CONSTANT, COEFFICIENT, or TABLE). Steer from the calculation can be adjusted with
! SUSP_AXLE_ROLL_STEER_GAIN and SUSP_AXLE_ROLL_STEER_OFFSET. Roll used in the
! calculation can be adjusted with ROLL_SCALE_AXLE_STEER and ROLL_START_AXLE_STEER.
! The derivative of this function is used internally. This configurable function
! supports 2 datasets; if indices shown below are not used, e.g., (2), the current
! value of the index IAXLE is used to identify the dataset when reading data.

SUSP_AXLE_ROLL_STEER_COEFFICIENT(1) 0 ! Coefficient: steer per unit roll (deg/deg),
                                      ! axle 1
SUSP_AXLE_ROLL_STEER_OFFSET(1) 0 ; deg ! Offset added (after gain) to get steer
ROLL_START_AXLE_STEER(1) 0 ; deg ! Offset subtracted from roll
ROLL_SCALE_AXLE_STEER(1) 1 ! Scale factor divided into (roll -
                           ! ROLL_START_AXLE_STEER)

SUSP_AXLE_ROLL_STEER_COEFFICIENT(2) 0 ! Coefficient: steer per unit roll (deg/deg),
                                      ! axle 2
SUSP_AXLE_ROLL_STEER_OFFSET(2) 0 ; deg ! Offset added (after gain) to get steer
ROLL_START_AXLE_STEER(2) 0 ; deg ! Offset subtracted from roll
ROLL_SCALE_AXLE_STEER(2) 1 ! Scale factor divided into (roll -
                           ! ROLL_START_AXLE_STEER)

! SUSP_DIVE_AXLE: Suspension dive (measured at zero steer). Suspension dive is a
! function of jounce (CONSTANT, COEFFICIENT, or TABLE). Suspension dive from the
! calculation can be adjusted with SUSP_DIVE_AXLE_GAIN and SUSP_DIVE_AXLE_OFFSET.
! Jounce used in the calculation can be adjusted with JNC_SCALE_SUSP_DIVE_AXLE and
! JNC_START_SUSP_DIVE_AXLE. The derivative of this function is used internally. This
! configurable function supports 2 datasets; if indices shown below are not used,
! e.g., (2), the current value of the index IAXLE is used to identify the dataset
! when reading data.

SUSP_DIVE_AXLE_CONSTANT(1) 0 ; deg ! Constant suspension dive, axle 1
SUSP_DIVE_AXLE_OFFSET(1) 0 ; deg ! Offset added (after gain) to get suspension dive

SUSP_DIVE_AXLE_CONSTANT(2) 0 ; deg ! Constant suspension dive, axle 2
SUSP_DIVE_AXLE_OFFSET(2) 0 ; deg ! Offset added (after gain) to get suspension dive

! SUSP_X_AXLE: Suspension X axle movement forward (measured at zero steer). X axle
! movement forward is a function of jounce (CONSTANT, COEFFICIENT, or TABLE). X axle
! movement forward from the calculation can be adjusted with SUSP_X_AXLE_GAIN and
! SUSP_X_AXLE_OFFSET. Jounce used in the calculation can be adjusted with
! JNC_SCALE_SUSP_X_AXLE and JNC_START_SUSP_X_AXLE. The derivative of this function is
! used internally. This configurable function supports 2 datasets; if indices shown
! below are not used, e.g., (2), the current value of the index IAXLE is used to
! identify the dataset when reading data.

SUSP_X_AXLE_CONSTANT(1) 0 ; mm ! Constant X axle movement forward, axle 1
SUSP_X_AXLE_OFFSET(1) 0 ; mm ! Offset added (after gain) to get X axle movement
                        ! forward

SUSP_X_AXLE_CONSTANT(2) 0 ; mm ! Constant X axle movement forward, axle 2
SUSP_X_AXLE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get X axle movement
                        ! forward

! SUSP_Y_AXLE_ROLL: Suspension Y movement. Y movement can be a nonlinear CARPET
! function of jounce and roll or a function of roll (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function SUSP_LAT_AXLE_JOUNCE of jounce (CONSTANT, COEFFICIENT, or
! TABLE). Y movement from the calculation can be adjusted with SUSP_Y_AXLE_ROLL_GAIN
! and SUSP_Y_AXLE_ROLL_OFFSET. Roll used in the calculation can be adjusted with
! ROLL_SCALE_AXLE_Y and ROLL_START_AXLE_Y. Jounce used in the calculation can be
! adjusted with JNC_SCALE_AXLE_Y and JNC_START_AXLE_Y. The derivative of this
! function is used internally. This configurable function supports 2 datasets; if
! indices shown below are not used, e.g., (2), the current value of the index IAXLE
! is used to identify the dataset when reading data.

! 1D table: col 1 = roll (deg), col 2 = Y movement (mm)
SUSP_Y_AXLE_ROLL_TABLE(1) SPLINE ! axle 1
 -10, -9.2034
 -9.5, -8.7475
 -9, -8.291
 -8.5, -7.8339
 -8, -7.3762
 -7.5, -6.9179
 -7, -6.4591
 -6.5, -5.9998
 -6, -5.54
 -5.5, -5.0798
 -5, -4.6193
 -4.5, -4.1583
 -4, -3.6971
 -3.5, -3.2356
 -3, -2.7738
 -2.5, -2.3118
 -2, -1.8497
 -1.5, -1.3874
 -1, -0.92498
 -0.5, -0.46251
 0, 4.2323e-19
 0.5, 0.46251
 1, 0.92498
 1.5, 1.3874
 2, 1.8497
 2.5, 2.3118
 3, 2.7738
 3.5, 3.2356
 4, 3.6971
 4.5, 4.1583
 5, 4.6193
 5.5, 5.0798
 6, 5.54
 6.5, 5.9998
 7, 6.4591
 7.5, 6.9179
 8, 7.3762
 8.5, 7.8339
 9, 8.291
 9.5, 8.7475
 10, 9.2034
ENDTABLE
SUSP_Y_AXLE_ROLL_GAIN(1) 1 ! Gain multiplied with calculated value to get Y movement
SUSP_Y_AXLE_ROLL_OFFSET(1) 0 ; mm ! Offset added (after gain) to get Y movement
ROLL_START_AXLE_Y(1) 0 ; deg ! Offset subtracted from roll
ROLL_SCALE_AXLE_Y(1) 1 ! Scale factor divided into (roll - ROLL_START_AXLE_Y)
SUSP_Y_AXLE_ROLL_COMBINE(1) ADD ! How to combine the two components
SET_UNITS SUSP_LAT_AXLE_JOUNCE_TABLE(1) mm ;
SUSP_LAT_AXLE_JOUNCE_CONSTANT(1) 0 ; mm ! Constant Y movement component due to
                                   ! jounce, axle 1

! 1D table: col 1 = roll (deg), col 2 = Y movement (mm)
SUSP_Y_AXLE_ROLL_TABLE(2) SPLINE ! axle 2
 -10, 33.861
 -9.5, 32.184
 -9, 30.505
 -8.5, 28.823
 -8, 27.139
 -7.5, 25.453
 -7, 23.765
 -6.5, 22.075
 -6, 20.383
 -5.5, 18.69
 -5, 16.995
 -4.5, 15.3
 -4, 13.603
 -3.5, 11.904
 -3, 10.206
 -2.5, 8.5058
 -2, 6.8054
 -1.5, 5.1045
 -1, 3.4032
 -0.5, 1.7017
 0, 5.317e-18
 0.5, -1.7017
 1, -3.4032
 1.5, -5.1045
 2, -6.8054
 2.5, -8.5058
 3, -10.206
 3.5, -11.904
 4, -13.603
 4.5, -15.3
 5, -16.995
 5.5, -18.69
 6, -20.383
 6.5, -22.075
 7, -23.765
 7.5, -25.453
 8, -27.139
 8.5, -28.823
 9, -30.505
 9.5, -32.184
 10, -33.861
ENDTABLE
SUSP_Y_AXLE_ROLL_GAIN(2) 1 ! Gain multiplied with calculated value to get Y movement
SUSP_Y_AXLE_ROLL_OFFSET(2) 0 ; mm ! Offset added (after gain) to get Y movement
ROLL_START_AXLE_Y(2) 0 ; deg ! Offset subtracted from roll
ROLL_SCALE_AXLE_Y(2) 1 ! Scale factor divided into (roll - ROLL_START_AXLE_Y)
SUSP_Y_AXLE_ROLL_COMBINE(2) ADD ! How to combine the two components
SET_UNITS SUSP_LAT_AXLE_JOUNCE_TABLE(2) mm ;
SUSP_LAT_AXLE_JOUNCE_CONSTANT(2) 0 ; mm ! Constant Y movement component due to
                                   ! jounce, axle 2

! THROTTLE_ENGINE: Throttle input (normalized). Normalized throttle input is a
! function of time (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. Normalized throttle input from the calculation
! can be adjusted with THROTTLE_ENGINE_GAIN and THROTTLE_ENGINE_OFFSET. Time used in
! the calculation can be adjusted with TSCALE_THROTTLE and TSTART_THROTTLE.

THROTTLE_ENGINE_CONSTANT 0 ; - ! [D] Constant normalized throttle input
THROTTLE_ENGINE_OFFSET 0 ; - ! Offset added (after gain) to get normalized throttle
                         ! input

! TPREV: Driver preview time. Preview time is a function of vehicle speed (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Preview time from the calculation can be adjusted with TPREV_GAIN and TPREV_OFFSET.
! Vehicle speed used in the calculation can be adjusted with VX_SCALE_TPREV and
! VX_START_TPREV.

TPREV_CONSTANT    0.6 ; s ! Constant preview time
TPREV_GAIN          1 ! Gain multiplied with calculated value to get preview time
TPREV_OFFSET        0 ; s ! Offset added (after gain) to get preview time

! UPSHIFT_TRANS: Transmission speed when upshift occurs. IGEAR specifies the lower
! gear for each table (e.g., IGEAR 2 means upshift from 2 to 3). Transmission speed
! is a function of throttle position (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Transmission speed from
! the calculation can be adjusted with UPSHIFT_TRANS_GAIN and UPSHIFT_TRANS_OFFSET.
! Throttle position used in the calculation can be adjusted with
! THROTTLE_SCALE_UPSHIFT and THROTTLE_START_UPSHIFT. This configurable function
! supports 17 datasets; if indices shown below are not used, e.g., (2), the current
! value of the index IGEAR is used to identify the dataset when reading data.

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(1) LINEAR_FLAT ! shifting between gears 1 and 2
 0, 158
 0.2, 158
 0.8, 440
 1, 440
ENDTABLE
UPSHIFT_TRANS_GAIN(1) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(1) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(1) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(1) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(2) LINEAR_FLAT ! shifting between gears 2 and 3
 0, 237
 0.2, 237
 0.8, 685
 1, 685
ENDTABLE
UPSHIFT_TRANS_GAIN(2) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(2) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(2) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(2) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(3) LINEAR_FLAT ! shifting between gears 3 and 4
 0, 356
 0.2, 356
 0.8, 1130
 1, 1130
ENDTABLE
UPSHIFT_TRANS_GAIN(3) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(3) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(3) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(3) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(4) LINEAR_FLAT ! shifting between gears 4 and 5
 0, 633
 0.1, 633
 0.8, 1850
 1, 1850
ENDTABLE
UPSHIFT_TRANS_GAIN(4) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(4) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(4) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(4) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(5) LINEAR_FLAT ! shifting between gears 5 and 6
 0, 800
 0.1, 800
 0.8, 2850
 1, 2850
ENDTABLE
UPSHIFT_TRANS_GAIN(5) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(5) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(5) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(5) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(6) LINEAR_FLAT ! shifting between gears 6 and 7
 0, 1067
 0.2, 1067
 0.8, 2910
 1, 2910
ENDTABLE
UPSHIFT_TRANS_GAIN(6) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(6) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(6) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(6) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! WIND_HEADING: Wind heading (yaw) relative to global X. When vehicle yaw is zero,
! then 0 deg -> tailwind, 90 deg -> from right, 180 deg -> headwind. Heading can be a
! nonlinear CARPET function of station and time or a function of time (CONSTANT,
! COEFFICIENT, or TABLE) combined with a function WIND_HEADING_S of station
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Heading from the calculation can be adjusted with WIND_HEADING_GAIN and
! WIND_HEADING_OFFSET. Time used in the calculation can be adjusted with
! TSCALE_WIND_HD and TSTART_WIND_HD. Station used in the calculation can be adjusted
! with SSCALE_WIND_HD and SSTART_WIND_HD.

WIND_HEADING_CONSTANT 0 ; deg ! [D] Constant heading component due to time
WIND_HEADING_GAIN   1 ! Gain multiplied with calculated value to get heading
WIND_HEADING_OFFSET 0 ; deg ! Offset added (after gain) to get heading
WIND_HEADING_COMBINE MULTIPLY ! How to combine the two components
WIND_HEADING_S_CONSTANT 1 ; - ! [D] Constant heading component due to station

! WIND_SPEED: Absolute wind speed. Wind speed can be a nonlinear CARPET function of
! station and time or a function of time (CONSTANT, COEFFICIENT, or TABLE) combined
! with a function WIND_SPEED_S of station (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Wind speed from the
! calculation can be adjusted with WIND_SPEED_GAIN and WIND_SPEED_OFFSET. Time used
! in the calculation can be adjusted with TSCALE_WIND and TSTART_WIND. Station used
! in the calculation can be adjusted with SSCALE_WIND and SSTART_WIND.

WIND_SPEED_CONSTANT 0 ; km/h ! [D] Constant wind speed component due to time
WIND_SPEED_GAIN     1 ! Gain multiplied with calculated value to get wind speed
WIND_SPEED_OFFSET   0 ; km/h ! Offset added (after gain) to get wind speed
WIND_SPEED_COMBINE MULTIPLY ! How to combine the two components
WIND_SPEED_S_CONSTANT 1 ; - ! [D] Constant wind speed component due to station

! Z_PROFILE: "Wandering profile" (roughness input). Elevation increment is a
! function of distance travelled (CONSTANT or TABLE). Elevation increment from the
! calculation can be adjusted with Z_PROFILE_GAIN and Z_PROFILE_OFFSET. Distance
! travelled used in the calculation can be adjusted with SSCALE_Z_PROFILE and
! SSTART_Z_PROFILE. The derivative of this function is used internally. This
! configurable function supports 2 datasets; if indices shown below are not used,
! e.g., (2), the current value of the index ISIDE is used to identify the dataset
! when reading data.

! 1D table: col 1 = distance travelled (m), col 2 = elevation increment (mm)
Z_PROFILE_TABLE(1) LINEAR_LOOP ! linear interpolation, repeat in loop
 0, -0.04
 0.1, 0.14
 0.2, 0.26
 0.3, 0.37
 0.4, 0.45
 0.5, 0.43
 0.6, 0.48
 0.7, 0.61
 0.8, 0.83
 0.9, 0.9
 1, 0.78
 1.1, 0.76
 1.2, 0.85
 1.3, 1.01
 1.4, 1.02
 1.5, 0.9
 1.6, 0.91
 1.7, 0.89
 1.8, 1.04
 1.9, 0.99
 2, 0.97
 2.1, 0.9
 2.2, 0.95
 2.3, 1.04
 2.4, 1.2
 2.5, 1.11
 2.6, 1.24
 2.7, 1.29
 2.8, 1.28
 2.9, 1.41
 3, 1.41
 3.1, 1.38
 3.2, 1.41
 3.3, 1.5
 3.4, 1.46
 3.5, 1.5
 3.6, 1.47
 3.7, 1.42
 3.8, 1.59
 3.9, 1.76
 4, 1.86
 4.1, 1.74
 4.2, 1.63
 4.3, 1.64
 4.4, 1.69
 4.5, 1.78
 4.6, 1.77
 4.7, 1.71
 4.8, 1.6
 4.9, 1.51
 5, 1.56
 5.1, 1.55
 5.2, 1.42
 5.3, 1.47
 5.4, 1.53
 5.5, 1.66
 5.6, 1.53
 5.7, 1.45
 5.8, 1.35
 5.9, 1.33
 6, 1.44
 6.1, 1.38
 6.2, 1.13
 6.3, 1.05
 6.4, 1.06
 6.5, 1.07
 6.6, 1.06
 6.7, 1.04
 6.8, 0.95
 6.9, 0.83
 7, 0.84
 7.1, 0.95
 7.2, 1.08
 7.3, 0.89
 7.4, 0.48
 7.5, 0.43
 7.6, 0.5
 7.7, 0.59
 7.8, 0.59
 7.9, 0.55
 8, 0.47
 8.1, 0.37
 8.2, 0.38
 8.3, 0.38
 8.4, 0.37
 8.5, 0.26
 8.6, 0.25
 8.7, 0.18
 8.8, -0.06
 8.9, -0.12
 9, -0.01
 9.1, 0
 9.2, -0.12
 9.3, -0.24
 9.4, -0.35
 9.5, -0.21
 9.6, -0.28
 9.7, -0.4
 9.8, -0.82
 9.9, -1.41
 10, -1.91
 10.1, -2.16
 10.2, -2.12
 10.3, -1.99
 10.4, -1.78
 10.5, -1.64
 10.6, -1.41
 10.7, -1.43
 10.8, -1.55
 10.9, -1.49
 11, -1.28
 11.1, -1.21
 11.2, -1.37
 11.3, -1.55
 11.4, -1.5
 11.5, -1.41
 11.6, -1.43
 11.7, -1.55
 11.8, -1.63
 11.9, -1.63
 12, -1.58
 12.1, -1.59
 12.2, -1.67
 12.3, -1.67
 12.4, -1.65
 12.5, -1.5
 12.6, -1.44
 12.7, -1.49
 12.8, -1.5
 12.9, -1.58
 13, -1.5
 13.1, -1.41
 13.2, -1.18
 13.3, -1.12
 13.4, -1.04
 13.5, -0.93
 13.6, -0.81
 13.7, -0.7
 13.8, -0.74
 13.9, -0.83
 14, -0.8
 14.1, -0.84
 14.2, -0.76
 14.3, -0.78
 14.4, -0.74
 14.5, -0.71
 14.6, -0.64
 14.7, -0.85
 14.8, -0.96
 14.9, -0.96
 15, -0.8
 15.1, -0.57
 15.2, -0.57
 15.3, -0.54
 15.4, -0.52
 15.5, -0.27
 15.6, -0.08
 15.7, 0
 15.8, 0
 15.9, -0.02
 16, -0.05
 16.1, 0.12
 16.2, 0.2
 16.3, 0.23
 16.4, 0.24
 16.5, 0.15
 16.6, 0.16
 16.7, 0.22
 16.8, 0.41
 16.9, 0.5
 17, 0.64
 17.1, 0.44
 17.2, 0.35
 17.3, 0.15
 17.4, 0.12
 17.5, -0.15
 17.6, -0.34
 17.7, -0.24
 17.8, -0.32
 17.9, -0.27
 18, -0.35
 18.1, -0.31
 18.2, -0.39
 18.3, -0.54
 18.4, -0.49
 18.5, -0.39
 18.6, -0.1
 18.7, -0.09
 18.8, -0.06
 18.9, -0.02
 19, 0.01
 19.1, 0.4
 19.2, 0.71
 19.3, 0.74
 19.4, 0.8
 19.5, 1.02
 19.6, 1.36
 19.7, 1.48
 19.8, 1.57
 19.9, 1.52
 20, 1.51
 20.1, 1.71
 20.2, 1.88
 20.3, 2.02
 20.4, 1.91
 20.5, 1.9
 20.6, 1.86
 20.7, 2.04
 20.8, 2.16
 20.9, 2.15
 21, 2.31
 21.1, 2.44
 21.2, 2.48
 21.3, 2.32
 21.4, 2.28
 21.5, 2.68
 21.6, 2.94
 21.7, 3.06
 21.8, 3.08
 21.9, 3.33
 22, 3.63
 22.1, 3.66
 22.2, 3.5
 22.3, 3.43
 22.4, 3.4
 22.5, 3.44
 22.6, 3.42
 22.7, 3.33
 22.8, 3.58
 22.9, 3.78
 23, 3.84
 23.1, 3.76
 23.2, 3.62
 23.3, 3.69
 23.4, 3.75
 23.5, 3.76
 23.6, 3.65
 23.7, 3.73
 23.8, 3.83
 23.9, 3.7
 24, 3.56
 24.1, 3.47
 24.2, 3.57
 24.3, 3.58
 24.4, 3.57
 24.5, 3.62
 24.6, 3.78
 24.7, 3.85
 24.8, 3.84
 24.9, 3.87
 25, 3.81
 25.1, 3.83
 25.2, 3.8
 25.3, 3.91
 25.4, 3.83
 25.5, 3.73
 25.6, 3.53
 25.7, 3.56
 25.8, 3.9
 25.9, 4.1
 26, 4.09
 26.1, 3.88
 26.2, 3.49
 26.3, 3.27
 26.4, 3.14
 26.5, 3.06
 26.6, 2.78
 26.7, 2.66
 26.8, 2.87
 26.9, 2.86
 27, 2.69
 27.1, 2.72
 27.2, 2.74
 27.3, 2.76
 27.4, 2.6
 27.5, 2.4
 27.6, 2.3
 27.7, 2.12
 27.8, 2.3
 27.9, 2.35
 28, 2.36
 28.1, 2.42
 28.2, 2.47
 28.3, 2.5
 28.4, 2.43
 28.5, 2.39
 28.6, 2.49
 28.7, 2.55
 28.8, 2.48
 28.9, 2.38
 29, 2.4
 29.1, 2.48
 29.2, 2.69
 29.3, 2.83
 29.4, 2.77
 29.5, 2.6
 29.6, 2.63
 29.7, 2.5
 29.8, 2.26
 29.9, 2.05
 30, 1.9
 30.1, 1.87
 30.2, 1.85
 30.3, 1.82
 30.4, 1.73
 30.5, 1.84
 30.6, 1.86
 30.7, 1.68
 30.8, 1.61
 30.9, 1.71
 31, 1.82
 31.1, 1.68
 31.2, 1.52
 31.3, 1.55
 31.4, 1.71
 31.5, 1.65
 31.6, 1.45
 31.7, 1.35
 31.8, 1.37
 31.9, 1.27
 32, 1.16
 32.1, 1
 32.2, 0.93
 32.3, 0.8
 32.4, 0.63
 32.5, 0.45
 32.6, 0.54
 32.7, 0.56
 32.8, 0.56
 32.9, 0.49
 33, 0.44
 33.1, 0.33
 33.2, 0.2
 33.3, 0.22
 33.4, 0.12
 33.5, -0.06
 33.6, -0.23
 33.7, -0.22
 33.8, -0.34
 33.9, -0.48
 34, -0.55
 34.1, -0.73
 34.2, -0.71
 34.3, -0.8
 34.4, -0.94
 34.5, -1.18
 34.6, -1.41
 34.7, -1.45
 34.8, -1.5
 34.9, -1.39
 35, -1.33
 35.1, -1.31
 35.2, -1.36
 35.3, -1.58
 35.4, -1.65
 35.5, -1.67
 35.6, -1.68
 35.7, -1.68
 35.8, -1.71
 35.9, -1.69
 36, -1.84
 36.1, -1.74
 36.2, -1.68
 36.3, -1.64
 36.4, -1.79
 36.5, -1.69
 36.6, -1.75
 36.7, -1.81
 36.8, -1.8
 36.9, -1.95
 37, -1.72
 37.1, -1.62
 37.2, -1.54
 37.3, -1.73
 37.4, -1.8
 37.5, -2.08
 37.6, -1.91
 37.7, -1.68
 37.8, -1.77
 37.9, -1.83
 38, -1.72
 38.1, -1.65
 38.2, -1.71
 38.3, -1.84
 38.4, -1.87
 38.5, -1.89
 38.6, -1.92
 38.7, -1.83
 38.8, -1.79
 38.9, -1.92
 39, -1.9
 39.1, -2.15
 39.2, -2.44
 39.3, -2.35
 39.4, -1.99
 39.5, -1.92
 39.6, -1.83
 39.7, -1.61
 39.8, -1.6
 39.9, -1.47
 40, -1.49
 40.1, -1.31
 40.2, -1.12
 40.3, -1.15
 40.4, -1.08
 40.5, -1.1
 40.6, -1.02
 40.7, -0.96
 40.8, -0.74
 40.9, -0.45
 41, -0.22
 41.1, -0.15
 41.2, 0
 41.3, 0.18
 41.4, 0.35
 41.5, 0.2
 41.6, 0.07
 41.7, 0.36
 41.8, 0.69
 41.9, 1.03
 42, 1.15
 42.1, 1.29
 42.2, 1.29
 42.3, 1.25
 42.4, 1.19
 42.5, 1.33
 42.6, 1.52
 42.7, 1.48
 42.8, 1.3
 42.9, 1.1
 43, 0.94
 43.1, 1
 43.2, 1.07
 43.3, 1.31
 43.4, 1.67
 43.5, 2.14
 43.6, 2.42
 43.7, 2.61
 43.8, 2.8
 43.9, 3.07
 44, 3.26
 44.1, 3.33
 44.2, 3.38
 44.3, 3.52
 44.4, 3.53
 44.5, 3.46
 44.6, 3.48
 44.7, 3.71
 44.8, 3.91
 44.9, 4.15
 45, 4.18
 45.1, 3.99
 45.2, 3.87
 45.3, 4.04
 45.4, 4.36
 45.5, 4.51
 45.6, 4.39
 45.7, 4.35
 45.8, 4.26
 45.9, 4.21
 46, 4.34
 46.1, 4.52
 46.2, 4.3
 46.3, 4.26
 46.4, 4.15
 46.5, 4.14
 46.6, 3.95
 46.7, 3.96
 46.8, 4.01
 46.9, 4.05
 47, 4.11
 47.1, 4.18
 47.2, 4.13
 47.3, 4.05
 47.4, 3.97
 47.5, 3.89
 47.6, 3.83
 47.7, 3.87
 47.8, 3.96
 47.9, 3.91
 48, 3.72
 48.1, 3.41
 48.2, 3.04
 48.3, 2.92
 48.4, 2.91
 48.5, 2.78
 48.6, 2.72
 48.7, 2.78
 48.8, 2.83
 48.9, 2.85
 49, 2.72
 49.1, 2.58
 49.2, 2.55
 49.3, 2.42
 49.4, 2.36
 49.5, 2.32
 49.6, 2.15
 49.7, 1.98
 49.8, 1.96
 49.9, 1.95
 50, 1.91
 50.1, 1.82
 50.2, 1.71
 50.3, 1.65
 50.4, 1.41
 50.5, 1.27
 50.6, 1.1
 50.7, 1.04
 50.8, 0.79
 50.9, 0.63
 51, 0.19
 51.1, 0.07
 51.2, -0.01
 51.3, -0.04
 51.4, -0.29
 51.5, -0.46
 51.6, -0.49
 51.7, -0.72
 51.8, -0.87
 51.9, -1.14
 52, -1.32
 52.1, -1.43
 52.2, -1.51
 52.3, -1.73
 52.4, -1.76
 52.5, -1.78
 52.6, -1.92
 52.7, -2.07
 52.8, -2.15
 52.9, -2.31
 53, -2.66
 53.1, -2.71
 53.2, -2.69
 53.3, -2.71
 53.4, -2.96
 53.5, -3.17
 53.6, -3.28
 53.7, -3.6
 53.8, -3.83
 53.9, -3.98
 54, -3.97
 54.1, -4.1
 54.2, -4.22
 54.3, -4.19
 54.4, -4.21
 54.5, -4.3
 54.6, -4.5
 54.7, -4.69
 54.8, -4.8
 54.9, -4.87
 55, -5.04
 55.1, -5.03
 55.2, -5.02
 55.3, -5.26
 55.4, -5.42
 55.5, -5.43
 55.6, -5.49
 55.7, -5.55
 55.8, -5.53
 55.9, -5.5
 56, -5.5
 56.1, -5.51
 56.2, -5.57
 56.3, -5.75
 56.4, -5.9
 56.5, -5.98
 56.6, -5.92
 56.7, -5.86
 56.8, -5.72
 56.9, -5.73
 57, -5.75
 57.1, -5.78
 57.2, -5.81
 57.3, -5.9
 57.4, -5.88
 57.5, -5.78
 57.6, -5.81
 57.7, -5.9
 57.8, -6.01
 57.9, -5.98
 58, -6
 58.1, -6.2
 58.2, -6.33
 58.3, -6.26
 58.4, -6.11
 58.5, -6.12
 58.6, -6.16
 58.7, -6.02
 58.8, -5.93
 58.9, -5.92
 59, -5.99
 59.1, -6.03
 59.2, -6.14
 59.3, -6.09
 59.4, -5.96
 59.5, -5.9
 59.6, -5.64
 59.7, -5.24
 59.8, -5.03
 59.9, -5.03
 60, -5.16
 60.1, -5.13
 60.2, -4.96
 60.3, -4.87
 60.4, -4.84
 60.5, -4.85
 60.6, -4.83
 60.7, -4.81
 60.8, -4.86
 60.9, -4.83
 61, -4.77
 61.1, -4.8
 61.2, -4.98
 61.3, -5.21
 61.4, -5.39
 61.5, -5.37
 61.6, -5.26
 61.7, -5.2
 61.8, -5.13
 61.9, -5.01
 62, -4.97
 62.1, -5.03
 62.2, -5.14
 62.3, -4.94
 62.4, -4.81
 62.5, -4.78
 62.6, -4.79
 62.7, -4.82
 62.8, -4.81
 62.9, -4.81
 63, -4.82
 63.1, -4.87
 63.2, -4.97
 63.3, -5.03
 63.4, -4.91
 63.5, -4.79
 63.6, -4.91
 63.7, -4.89
 63.8, -4.94
 63.9, -4.91
 64, -4.93
 64.1, -4.94
 64.2, -4.98
 64.3, -5.22
 64.4, -5.22
 64.5, -5.12
 64.6, -5.12
 64.7, -5.23
 64.8, -5.27
 64.9, -5.28
 65, -5.38
 65.1, -5.57
 65.2, -5.73
 65.3, -5.78
 65.4, -5.68
 65.5, -5.76
 65.6, -5.82
 65.7, -5.88
 65.8, -6.11
 65.9, -6.05
 66, -5.96
 66.1, -5.91
 66.2, -6.07
 66.3, -6.14
 66.4, -6.27
 66.5, -6.46
 66.6, -6.66
 66.7, -6.78
 66.8, -6.85
 66.9, -6.86
 67, -6.98
 67.1, -7.05
 67.2, -7.22
 67.3, -7.36
 67.4, -7.44
 67.5, -7.59
 67.6, -7.71
 67.7, -7.93
 67.8, -8.04
 67.9, -8.13
 68, -8.14
 68.1, -8.31
 68.2, -8.57
 68.3, -8.81
 68.4, -8.91
 68.5, -8.95
 68.6, -9.03
 68.7, -9.34
 68.8, -9.6
 68.9, -9.78
 69, -9.58
 69.1, -9.57
 69.2, -9.55
 69.3, -9.69
 69.4, -9.84
 69.5, -10.31
 69.6, -10.65
 69.7, -10.86
 69.8, -10.77
 69.9, -10.9
 70, -11
 70.1, -10.85
 70.2, -10.74
 70.3, -10.7
 70.4, -10.92
 70.5, -11.08
 70.6, -11.2
 70.7, -11.17
 70.8, -11.21
 70.9, -11.15
 71, -11.02
 71.1, -11.06
 71.2, -11.2
 71.3, -11.19
 71.4, -11.18
 71.5, -11.24
 71.6, -11.17
 71.7, -11.05
 71.8, -11
 71.9, -10.99
 72, -11.02
 72.1, -11
 72.2, -10.96
 72.3, -10.95
 72.4, -10.89
 72.5, -10.82
 72.6, -10.82
 72.7, -10.85
 72.8, -11.06
 72.9, -11.18
 73, -11.22
 73.1, -11.27
 73.2, -11.21
 73.3, -11.11
 73.4, -11.13
 73.5, -11.11
 73.6, -11.01
 73.7, -10.95
 73.8, -10.89
 73.9, -10.78
 74, -10.64
 74.1, -10.48
 74.2, -10.36
 74.3, -10.41
 74.4, -10.4
 74.5, -10.32
 74.6, -10.29
 74.7, -10.18
 74.8, -10.04
 74.9, -9.94
 75, -9.82
 75.1, -9.6
 75.2, -9.38
 75.3, -9.5
 75.4, -9.49
 75.5, -9.35
 75.6, -9.21
 75.7, -8.99
 75.8, -8.97
 75.9, -8.97
 76, -8.83
 76.1, -8.69
 76.2, -8.46
 76.3, -8.42
 76.4, -8.43
 76.5, -8.32
 76.6, -8.33
 76.7, -8.27
 76.8, -8.35
 76.9, -8.32
 77, -8.42
 77.1, -8.32
 77.2, -8.18
 77.3, -7.9
 77.4, -7.8
 77.5, -7.57
 77.6, -7.47
 77.7, -7.34
 77.8, -7.16
 77.9, -7.07
 78, -7.12
 78.1, -7.04
 78.2, -6.86
 78.3, -6.62
 78.4, -6.52
 78.5, -6.28
 78.6, -6.16
 78.7, -6
 78.8, -5.77
 78.9, -5.67
 79, -5.54
 79.1, -5.41
 79.2, -5.17
 79.3, -5.13
 79.4, -5.08
 79.5, -4.99
 79.6, -5
 79.7, -5
 79.8, -4.7
 79.9, -4.63
 80, -4.51
 80.1, -4.42
 80.2, -4.36
 80.3, -4.09
 80.4, -3.88
 80.5, -3.64
 80.6, -3.55
 80.7, -3.44
 80.8, -3.42
 80.9, -3.26
 81, -3.16
 81.1, -3.05
 81.2, -3.01
 81.3, -2.78
 81.4, -2.53
 81.5, -2.6
 81.6, -2.46
 81.7, -2.34
 81.8, -2.09
 81.9, -1.82
 82, -1.63
 82.1, -1.62
 82.2, -1.55
 82.3, -1.33
 82.4, -1.37
 82.5, -1.47
 82.6, -1.27
 82.7, -1.04
 82.8, -0.78
 82.9, -0.57
 83, -0.42
 83.1, -0.4
 83.2, -0.46
 83.3, -0.33
 83.4, 0.27
 83.5, 1.06
 83.6, 1.57
 83.7, 1.66
 83.8, 1.34
 83.9, 1.19
 84, 1.26
 84.1, 1.28
 84.2, 1.08
 84.3, 0.95
 84.4, 1.18
 84.5, 1.49
 84.6, 1.72
 84.7, 1.66
 84.8, 1.9
 84.9, 1.9
 85, 1.73
 85.1, 1.78
 85.2, 1.99
 85.3, 2.14
 85.4, 2.34
 85.5, 2.47
 85.6, 2.6
 85.7, 2.72
 85.8, 2.78
 85.9, 2.94
 86, 3.03
 86.1, 3.18
 86.2, 3.07
 86.3, 3.11
 86.4, 3.17
 86.5, 3.38
 86.6, 3.65
 86.7, 4.01
 86.8, 4.47
 86.9, 4.85
 87, 5.04
 87.1, 5.28
 87.2, 5.44
 87.3, 5.49
 87.4, 5.43
 87.5, 5.37
 87.6, 5.4
 87.7, 5.47
 87.8, 5.54
 87.9, 5.64
 88, 5.82
 88.1, 6.03
 88.2, 6.2
 88.3, 6.27
 88.4, 6.33
 88.5, 6.5
 88.6, 6.85
 88.7, 7.15
 88.8, 7.35
 88.9, 7.5
 89, 7.65
 89.1, 7.78
 89.2, 8.01
 89.3, 8.15
 89.4, 8.42
 89.5, 8.6
 89.6, 8.71
 89.7, 8.81
 89.8, 9.09
 89.9, 9.27
 90, 9.33
 90.1, 9.41
 90.2, 9.48
 90.3, 9.52
 90.4, 9.61
 90.5, 10.06
 90.6, 10.25
 90.7, 10.43
 90.8, 10.56
 90.9, 10.73
 91, 10.74
 91.1, 10.99
 91.2, 11.1
 91.3, 11.03
 91.4, 11.11
 91.5, 11.31
 91.6, 11.58
 91.7, 11.49
 91.8, 11.49
 91.9, 11.67
 92, 11.68
 92.1, 11.9
 92.2, 11.9
 92.3, 11.96
 92.4, 12.05
 92.5, 12.13
 92.6, 12.17
 92.7, 12.15
 92.8, 12.14
 92.9, 12.24
 93, 12.43
 93.1, 12.55
 93.2, 12.61
 93.3, 12.71
 93.4, 12.69
 93.5, 12.68
 93.6, 12.68
 93.7, 12.76
 93.8, 12.87
 93.9, 12.91
 94, 12.89
 94.1, 13.01
 94.2, 13.05
 94.3, 13.09
 94.4, 13.05
 94.5, 13.12
 94.6, 13.11
 94.7, 12.88
 94.8, 12.69
 94.9, 12.61
 95, 12.56
 95.1, 12.45
 95.2, 12.49
 95.3, 12.54
 95.4, 12.43
 95.5, 12.61
 95.6, 12.6
 95.7, 12.84
 95.8, 13.01
 95.9, 12.94
 96, 12.85
 96.1, 13.01
 96.2, 12.91
 96.3, 12.76
 96.4, 12.71
 96.5, 12.72
 96.6, 12.72
 96.7, 12.58
 96.8, 12.41
 96.9, 12.15
 97, 12.17
 97.1, 12.23
 97.2, 12.1
 97.3, 11.93
 97.4, 11.89
 97.5, 11.82
 97.6, 11.61
 97.7, 11.37
 97.8, 11.21
 97.9, 11.17
 98, 11.22
 98.1, 10.92
 98.2, 10.72
 98.3, 10.5
 98.4, 10.62
 98.5, 10.53
 98.6, 10.46
 98.7, 10.18
 98.8, 9.83
 98.9, 9.58
 99, 9.53
 99.1, 9.24
 99.2, 9
 99.3, 8.77
 99.4, 8.68
 99.5, 8.63
 99.6, 8.68
 99.7, 8.52
 99.8, 8.28
 99.9, 8.04
 100, 7.86
 100.1, 7.71
 100.2, 7.63
 100.3, 7.52
 100.4, 7.39
 100.5, 7.16
 100.6, 6.91
 100.7, 6.78
 100.8, 6.68
 100.9, 6.57
 101, 6.51
 101.1, 6.26
 101.2, 6.1
 101.3, 5.76
 101.4, 5.71
 101.5, 5.52
 101.6, 5.41
 101.7, 5.24
 101.8, 5.24
 101.9, 4.98
 102, 4.77
 102.1, 4.6
 102.2, 4.44
 102.3, 4.35
 102.4, 4.27
 102.5, 4.05
 102.6, 3.82
 102.7, 3.64
 102.8, 3.66
 102.9, 3.43
 103, 3.46
 103.1, 3.39
 103.2, 3.27
 103.3, 3.15
 103.4, 3.01
 103.5, 2.9
 103.6, 2.72
 103.7, 2.63
 103.8, 2.63
 103.9, 2.63
 104, 2.61
 104.1, 2.4
 104.2, 2.11
 104.3, 1.84
 104.4, 1.71
 104.5, 1.71
 104.6, 1.57
 104.7, 1.24
 104.8, 1.09
 104.9, 0.86
 105, 0.68
 105.1, 0.58
 105.2, 0.47
 105.3, 0.26
 105.4, -0.05
 105.5, -0.34
 105.6, -0.58
 105.7, -0.73
 105.8, -0.87
 105.9, -0.96
 106, -1.22
 106.1, -1.54
 106.2, -1.74
 106.3, -1.97
 106.4, -2.25
 106.5, -2.44
 106.6, -2.43
 106.7, -2.71
 106.8, -3.04
 106.9, -3.18
 107, -3.14
 107.1, -3.32
 107.2, -3.53
 107.3, -3.84
 107.4, -3.86
 107.5, -4.15
 107.6, -4.3
 107.7, -4.61
 107.8, -4.6
 107.9, -4.52
 108, -4.82
 108.1, -5.03
 108.2, -5.09
 108.3, -4.85
 108.4, -4.86
 108.5, -5.18
 108.6, -5.64
 108.7, -5.77
 108.8, -5.97
 108.9, -6.12
 109, -6.22
 109.1, -6.38
 109.2, -6.57
 109.3, -6.73
 109.4, -7.01
 109.5, -7.15
 109.6, -7.29
 109.7, -7.43
 109.8, -7.53
 109.9, -7.67
 110, -7.9
 110.1, -8.2
 110.2, -8.28
 110.3, -8.24
 110.4, -8.16
 110.5, -8.46
 110.6, -8.73
 110.7, -8.95
 110.8, -8.9
 110.9, -8.98
 111, -9.16
 111.1, -9.29
 111.2, -9.41
 111.3, -9.52
 111.4, -9.63
 111.5, -9.85
 111.6, -10
 111.7, -10.05
 111.8, -10.19
 111.9, -10.29
 112, -10.29
 112.1, -10.44
 112.2, -10.71
 112.3, -10.99
 112.4, -11.01
 112.5, -10.97
 112.6, -10.76
 112.7, -10.73
 112.8, -10.74
 112.9, -10.8
 113, -10.82
 113.1, -10.75
 113.2, -10.91
 113.3, -10.92
 113.4, -10.95
 113.5, -10.96
 113.6, -10.96
 113.7, -10.95
 113.8, -10.92
 113.9, -11.07
 114, -11.23
 114.1, -11.64
 114.2, -11.78
 114.3, -11.43
 114.4, -11.22
 114.5, -11.31
 114.6, -11.2
 114.7, -11.01
 114.8, -10.89
 114.9, -10.83
 115, -10.75
 115.1, -10.48
 115.2, -10.27
 115.3, -10.19
 115.4, -10.23
 115.5, -10.25
 115.6, -10.21
 115.7, -9.98
 115.8, -9.87
 115.9, -9.83
 116, -9.74
 116.1, -9.65
 116.2, -9.37
 116.3, -9.26
 116.4, -9.15
 116.5, -8.86
 116.6, -8.53
 116.7, -8.34
 116.8, -8.22
 116.9, -8.12
 117, -8.13
 117.1, -7.93
 117.2, -7.74
 117.3, -7.34
 117.4, -7.08
 117.5, -6.82
 117.6, -6.7
 117.7, -6.47
 117.8, -6.24
 117.9, -6.14
 118, -5.88
 118.1, -5.5
 118.2, -5.28
 118.3, -5.21
 118.4, -5.17
 118.5, -5.1
 118.6, -4.78
 118.7, -4.6
 118.8, -4.36
 118.9, -4.07
 119, -3.73
 119.1, -3.37
 119.2, -3.17
 119.3, -2.8
 119.4, -2.57
 119.5, -2.26
 119.6, -1.93
 119.7, -1.58
 119.8, -1.39
 119.9, -1.14
 120, -1.06
 120.1, -0.91
 120.2, -0.69
 120.3, -0.44
 120.4, -0.3
 120.5, 0.08
 120.6, 0.39
 120.7, 0.51
 120.8, 0.68
 120.9, 1.02
 121, 1.27
 121.1, 1.41
 121.2, 1.68
 121.3, 1.96
 121.4, 2.18
 121.5, 2.39
 121.6, 2.56
 121.7, 2.85
 121.8, 3.19
 121.9, 3.37
 122, 3.54
 122.1, 3.9
 122.2, 4.12
 122.3, 4.4
 122.4, 4.5
 122.5, 4.63
 122.6, 4.72
 122.7, 4.77
 122.8, 4.84
 122.9, 5.19
 123, 5.37
 123.1, 5.57
 123.2, 5.72
 123.3, 5.9
 123.4, 6.18
 123.5, 6.55
 123.6, 6.78
 123.7, 6.97
 123.8, 7.16
 123.9, 7.42
 124, 7.53
 124.1, 7.66
 124.2, 7.77
 124.3, 7.91
 124.4, 8.18
 124.5, 8.21
 124.6, 8.33
 124.7, 8.46
 124.8, 8.49
 124.9, 8.6
 125, 8.66
 125.1, 8.82
 125.2, 8.96
 125.3, 9.13
 125.4, 9.24
 125.5, 9.38
 125.6, 9.55
 125.7, 9.52
 125.8, 9.71
 125.9, 9.93
 126, 10.21
 126.1, 10.26
 126.2, 10.27
 126.3, 10.19
 126.4, 10.31
 126.5, 10.36
 126.6, 10.22
 126.7, 10.14
 126.8, 10.06
 126.9, 9.9
 127, 9.77
 127.1, 9.71
 127.2, 9.84
 127.3, 9.97
 127.4, 10.05
 127.5, 10.06
 127.6, 10.23
 127.7, 10.23
 127.8, 9.96
 127.9, 9.98
 128, 9.92
 128.1, 9.9
 128.2, 9.76
 128.3, 9.4
 128.4, 9.24
 128.5, 9.06
 128.6, 8.93
 128.7, 8.95
 128.8, 8.9
 128.9, 8.88
 129, 8.74
 129.1, 8.65
 129.2, 8.43
 129.3, 8.4
 129.4, 8.49
 129.5, 8.41
 129.6, 8.39
 129.7, 8.44
 129.8, 8.32
 129.9, 8.21
 130, 7.91
 130.1, 8.09
 130.2, 8.02
 130.3, 7.96
 130.4, 7.94
 130.5, 7.86
 130.6, 7.81
 130.7, 7.88
 130.8, 7.63
 130.9, 7.58
 131, 7.66
 131.1, 7.67
 131.2, 7.66
 131.3, 7.46
 131.4, 7.23
 131.5, 6.99
 131.6, 6.63
 131.7, 6.52
 131.8, 6.41
 131.9, 6.61
 132, 6.43
 132.1, 6.36
 132.2, 6.23
 132.3, 6.17
 132.4, 6.13
 132.5, 5.97
 132.6, 5.82
 132.7, 5.79
 132.8, 5.91
 132.9, 5.71
 133, 5.54
 133.1, 5.4
 133.2, 5.41
 133.3, 5.25
 133.4, 5
 133.5, 4.99
 133.6, 5.45
 133.7, 6.06
 133.8, 6.32
 133.9, 6.1
 134, 5.69
 134.1, 5.48
 134.2, 5.39
 134.3, 5.4
 134.4, 5.24
 134.5, 4.82
 134.6, 4.63
 134.7, 4.63
 134.8, 4.57
 134.9, 4.29
 135, 4.08
 135.1, 4.09
 135.2, 4.16
 135.3, 4.24
 135.4, 4.15
 135.5, 4.11
 135.6, 4
 135.7, 3.62
 135.8, 3.52
 135.9, 3.57
 136, 3.57
 136.1, 3.41
 136.2, 3.48
 136.3, 3.52
 136.4, 3.54
 136.5, 3.48
 136.6, 3.37
 136.7, 3.43
 136.8, 3.8
 136.9, 4.12
 137, 4.16
 137.1, 4.04
 137.2, 3.98
 137.3, 4.17
 137.4, 4.32
 137.5, 4.59
 137.6, 4.82
 137.7, 4.86
 137.8, 4.97
 137.9, 5.27
 138, 5.6
 138.1, 5.79
 138.2, 5.67
 138.3, 5.56
 138.4, 5.14
 138.5, 4.63
 138.6, 4.26
 138.7, 4.16
 138.8, 4.04
 138.9, 3.98
 139, 3.82
 139.1, 3.63
 139.2, 3.6
 139.3, 3.7
 139.4, 3.65
 139.5, 3.76
 139.6, 3.8
 139.7, 3.74
 139.8, 3.72
 139.9, 3.92
 140, 4.03
 140.1, 3.83
 140.2, 3.53
 140.3, 3.4
 140.4, 3.5
 140.5, 3.69
 140.6, 3.53
 140.7, 3.31
 140.8, 3.14
 140.9, 2.95
 141, 2.78
 141.1, 2.81
 141.2, 2.87
 141.3, 3.01
 141.4, 2.92
 141.5, 2.9
 141.6, 2.78
 141.7, 2.63
 141.8, 2.59
 141.9, 2.48
 142, 2.32
 142.1, 2.18
 142.2, 2.23
 142.3, 2.36
 142.4, 2.23
 142.5, 2.13
 142.6, 2
 142.7, 1.98
 142.8, 2.18
 142.9, 2.02
 143, 1.84
 143.1, 1.65
 143.2, 1.68
 143.3, 1.63
 143.4, 1.55
 143.5, 1.49
 143.6, 1.52
 143.7, 1.36
 143.8, 1.21
 143.9, 0.99
 144, 0.98
 144.1, 0.96
 144.2, 0.74
 144.3, 0.56
 144.4, 0.25
 144.5, 0.18
 144.6, 0.08
 144.7, 0.33
 144.8, 0.18
 144.9, 0.23
 145, 0.28
 145.1, 0.26
 145.2, 0.18
 145.3, 0.18
 145.4, -0.04
 145.5, -0.12
 145.6, -0.16
 145.7, -0.04
 145.8, 0.05
 145.9, 0.09
 146, 0.15
 146.1, 0.22
 146.2, 0
 146.3, -0.03
 146.4, 0.15
 146.5, 0.25
 146.6, 0.25
 146.7, 0.16
 146.8, 0.05
 146.9, 0.06
 147, 0
 147.1, 0
 147.2, -0.16
 147.3, -0.08
 147.4, -0.17
 147.5, -0.29
 147.6, -0.36
 147.7, -0.2
 147.8, -0.14
 147.9, -0.08
 148, -0.03
 148.1, 0.11
 148.2, -0.04
 148.3, -0.13
 148.4, -0.27
 148.5, -0.48
 148.6, -0.59
 148.7, -0.6
 148.8, -0.46
 148.9, -0.33
 149, -0.34
 149.1, -0.35
 149.2, -0.29
 149.3, -0.19
 149.4, -0.19
 149.5, -0.25
 149.6, -0.31
 149.7, -0.35
 149.8, -0.27
 149.9, -0.25
 150, -0.18
 150.1, -0.02
 150.2, 0.05
 150.3, 0.19
 150.4, 0.18
 150.5, 0.09
 150.6, -0.04
 150.7, -0.07
 150.8, 0.05
 150.9, 0.26
 151, 0.32
 151.1, 0.39
 151.2, 0.38
 151.3, 0.27
 151.4, 0.15
 151.5, -0.05
 151.6, -0.13
 151.7, 0
 151.8, 0.22
 151.9, 0.32
 152, 0.33
 152.1, 0.26
 152.2, 0.38
 152.3, 0.67
 152.4, 0.73
 152.5, 0.77
 152.6, 0.67
 152.7, 0.52
 152.8, 0.56
 152.9, 0.44
 153, 0.21
 153.1, 0.15
 153.2, 0.22
 153.3, 0.45
 153.4, 0.67
 153.5, 0.8
 153.6, 0.81
 153.7, 0.92
 153.8, 1.02
 153.9, 1.15
 154, 1.11
 154.1, 1.19
 154.2, 1.17
 154.3, 1.16
 154.4, 1.18
 154.5, 1.12
 154.6, 0.93
 154.7, 0.99
 154.8, 1.22
 154.9, 1.22
 155, 1.23
 155.1, 1.32
 155.2, 1.35
 155.3, 1.58
 155.4, 1.76
 155.5, 1.7
 155.6, 1.68
 155.7, 1.75
 155.8, 1.74
 155.9, 1.62
 156, 1.68
 156.1, 1.74
 156.2, 1.88
 156.3, 1.86
 156.4, 1.87
 156.5, 1.73
 156.6, 1.62
 156.7, 1.53
 156.8, 1.51
 156.9, 1.64
 157, 1.49
 157.1, 1.42
 157.2, 1.4
 157.3, 1.45
 157.4, 1.33
 157.5, 1.37
 157.6, 1.21
 157.7, 1.13
 157.8, 1.09
 157.9, 1
 158, 1.01
 158.1, 0.96
 158.2, 0.93
 158.3, 0.94
 158.4, 0.98
 158.5, 1.02
 158.6, 0.99
 158.7, 0.96
 158.8, 1.07
 158.9, 1.13
 159, 1.02
 159.1, 0.94
 159.2, 0.94
 159.3, 0.84
 159.4, 0.73
 159.5, 0.67
 159.6, 0.8
 159.7, 0.86
 159.8, 0.91
 159.9, 0.71
 160, 0.59
 160.1, 0.62
 160.2, 0.72
 160.3, 0.76
 160.4, 0.76
 160.5, 0.66
 160.6, 0.44
 160.7, 0.46
 160.8, 0.42
 160.9, 0.48
 161, 0.43
 161.1, 0.31
 161.2, -0.01
 161.3, -0.12
 161.4, -0.39
 161.5, -0.32
 161.6, -0.45
 161.7, -0.59
 161.8, -0.81
 161.9, -1.1
 162, -1.33
 162.1, -1.43
 162.2, -1.4
 162.3, -1.3
 162.4, -1.36
 162.5, -1.45
 162.6, -1.64
 162.7, -1.68
 162.8, -1.7
 162.9, -1.73
 163, -2.03
 163.1, -2.04
 163.2, -1.82
 163.3, -1.76
 163.4, -2.08
 163.5, -2.32
 163.6, -2.31
 163.7, -2.28
 163.8, -2.32
 163.9, -2.43
 164, -2.57
 164.1, -2.73
 164.2, -2.79
 164.3, -2.92
 164.4, -3.1
 164.5, -3.13
 164.6, -3.34
 164.7, -3.42
 164.8, -3.54
 164.9, -3.37
 165, -3.59
 165.1, -3.67
 165.2, -3.61
 165.3, -3.34
 165.4, -3.23
 165.5, -3.24
 165.6, -3.48
 165.7, -3.78
 165.8, -3.89
 165.9, -3.68
 166, -3.54
 166.1, -3.64
 166.2, -3.78
 166.3, -3.84
 166.4, -3.75
 166.5, -3.79
 166.6, -3.71
 166.7, -3.69
 166.8, -3.74
 166.9, -3.85
 167, -3.88
 167.1, -3.86
 167.2, -3.67
 167.3, -3.7
 167.4, -3.79
 167.5, -3.85
 167.6, -3.9
 167.7, -4.09
 167.8, -4.21
 167.9, -4.09
 168, -3.84
 168.1, -3.78
 168.2, -3.68
 168.3, -3.66
 168.4, -3.48
 168.5, -3.36
 168.6, -3.31
 168.7, -3.32
 168.8, -3.33
 168.9, -3.23
 169, -3.25
 169.1, -3.19
 169.2, -3.14
 169.3, -3.07
 169.4, -3.06
 169.5, -3.15
 169.6, -3.07
 169.7, -3.04
 169.8, -2.88
 169.9, -2.73
 170, -2.72
 170.1, -2.7
 170.2, -2.66
 170.3, -2.51
 170.4, -2.28
 170.5, -2.12
 170.6, -1.96
 170.7, -1.92
 170.8, -1.85
 170.9, -1.67
 171, -1.33
 171.1, -1.25
 171.2, -1.34
 171.3, -1.33
 171.4, -1.08
 171.5, -0.92
 171.6, -0.78
 171.7, -0.75
 171.8, -0.71
 171.9, -0.74
 172, -0.6
 172.1, -0.68
 172.2, -0.69
 172.3, -0.61
 172.4, -0.59
 172.5, -0.5
 172.6, -0.42
 172.7, -0.25
 172.8, -0.17
 172.9, 0.07
 173, 0.34
 173.1, 0.51
 173.2, 0.61
 173.3, 0.86
 173.4, 0.98
 173.5, 1.08
 173.6, 1.21
 173.7, 1.27
 173.8, 1.51
 173.9, 1.7
 174, 1.8
 174.1, 1.6
 174.2, 1.64
 174.3, 1.69
 174.4, 1.74
 174.5, 1.67
 174.6, 1.74
 174.7, 1.87
 174.8, 1.97
 174.9, 2.02
 175, 2.16
 175.1, 2.43
 175.2, 2.39
 175.3, 2.55
 175.4, 2.77
 175.5, 2.97
 175.6, 3.14
 175.7, 3.32
 175.8, 3.47
 175.9, 3.6
 176, 3.76
 176.1, 3.83
 176.2, 3.83
 176.3, 3.76
 176.4, 3.66
 176.5, 3.75
 176.6, 3.82
 176.7, 3.96
 176.8, 3.93
 176.9, 4.06
 177, 4.16
 177.1, 4.24
 177.2, 4.45
 177.3, 4.36
 177.4, 4.42
 177.5, 4.64
 177.6, 4.94
 177.7, 4.98
 177.8, 5.03
 177.9, 5.15
 178, 5.32
 178.1, 5.39
 178.2, 5.48
 178.3, 5.54
 178.4, 5.58
 178.5, 5.7
 178.6, 5.72
 178.7, 5.9
 178.8, 5.91
 178.9, 6.07
 179, 6.11
 179.1, 6.21
 179.2, 6.31
 179.3, 6.51
 179.4, 6.4
 179.5, 6.32
 179.6, 6.4
 179.7, 6.43
 179.8, 6.34
 179.9, 6.43
 180, 6.48
 180.1, 6.77
 180.2, 6.76
 180.3, 6.67
 180.4, 6.59
 180.5, 6.66
 180.6, 6.77
 180.7, 6.97
 180.8, 7.09
 180.9, 7.26
 181, 7.46
 181.1, 7.55
 181.2, 7.6
 181.3, 7.77
 181.4, 7.88
 181.5, 7.87
 181.6, 8.03
 181.7, 8.19
 181.8, 8.17
 181.9, 8.16
 182, 8.33
 182.1, 8.49
 182.2, 8.59
 182.3, 8.79
 182.4, 8.97
 182.5, 9.17
 182.6, 9.22
 182.7, 9.48
 182.8, 9.78
 182.9, 9.93
 183, 9.92
 183.1, 9.78
 183.2, 9.5
 183.3, 9.2
 183.4, 9.31
 183.5, 9.59
 183.6, 10.03
 183.7, 10.52
 183.8, 10.86
 183.9, 11.07
 184, 11.2
 184.1, 11.43
 184.2, 11.67
 184.3, 11.87
 184.4, 11.91
 184.5, 11.97
 184.6, 12.18
 184.7, 12.29
 184.8, 12.32
 184.9, 12.32
 185, 12.4
 185.1, 12.61
 185.2, 12.82
 185.3, 12.96
 185.4, 13.1
 185.5, 13.26
 185.6, 13.37
 185.7, 13.34
 185.8, 13.43
 185.9, 13.55
 186, 13.71
 186.1, 13.78
 186.2, 13.8
 186.3, 13.97
 186.4, 14.2
 186.5, 14.25
 186.6, 14.23
 186.7, 14.29
 186.8, 14.3
 186.9, 14.45
 187, 14.65
 187.1, 14.85
 187.2, 14.94
 187.3, 15.05
 187.4, 15.11
 187.5, 15.26
 187.6, 15.43
 187.7, 15.54
 187.8, 15.68
 187.9, 15.89
 188, 16.13
 188.1, 16.21
 188.2, 16.29
 188.3, 16.45
 188.4, 16.67
 188.5, 16.77
 188.6, 16.85
 188.7, 16.84
 188.8, 17.04
 188.9, 17.12
 189, 17.28
 189.1, 17.2
 189.2, 17.2
 189.3, 17.34
 189.4, 17.49
 189.5, 17.61
 189.6, 17.73
 189.7, 17.69
 189.8, 17.74
 189.9, 17.77
 190, 17.98
 190.1, 18.06
 190.2, 18
 190.3, 18.02
 190.4, 18.22
 190.5, 18.28
 190.6, 18.15
 190.7, 18.04
 190.8, 18.1
 190.9, 18.19
 191, 18.14
 191.1, 18.24
 191.2, 18.27
 191.3, 18.2
 191.4, 18.35
 191.5, 18.5
 191.6, 18.48
 191.7, 18.58
 191.8, 18.84
 191.9, 18.93
 192, 18.93
 192.1, 19.01
 192.2, 19.04
 192.3, 19.25
 192.4, 19.27
 192.5, 19.3
 192.6, 19.28
 192.7, 19.35
 192.8, 19.43
 192.9, 19.29
 193, 19.2
 193.1, 19.24
 193.2, 19.28
 193.3, 19.15
 193.4, 18.93
 193.5, 18.81
 193.6, 18.63
 193.7, 18.54
 193.8, 18.49
 193.9, 18.41
 194, 18.17
 194.1, 18.09
 194.2, 18.09
 194.3, 18.22
 194.4, 18.13
 194.5, 18.03
 194.6, 17.97
 194.7, 18
 194.8, 18.18
 194.9, 18.21
 195, 18
 195.1, 17.84
 195.2, 17.84
 195.3, 17.71
 195.4, 17.51
 195.5, 17.22
 195.6, 17.01
 195.7, 16.85
 195.8, 16.69
 195.9, 16.71
 196, 16.71
 196.1, 16.72
 196.2, 16.69
 196.3, 16.54
 196.4, 16.17
 196.5, 15.78
 196.6, 15.67
 196.7, 15.72
 196.8, 15.4
 196.9, 15.05
 197, 15.07
 197.1, 15.08
 197.2, 15.04
 197.3, 14.86
 197.4, 14.67
 197.5, 14.66
 197.6, 14.57
 197.7, 14.47
 197.8, 14.41
 197.9, 14.34
 198, 14.26
 198.1, 14.05
 198.2, 13.96
 198.3, 13.95
 198.4, 13.96
 198.5, 13.83
 198.6, 13.74
 198.7, 13.66
 198.8, 13.31
 198.9, 13.02
 199, 13.02
 199.1, 12.94
 199.2, 12.9
 199.3, 12.71
 199.4, 12.42
 199.5, 12.27
 199.6, 12.08
 199.7, 11.89
 199.8, 11.82
 199.9, 11.64
 200, 11.44
 200.1, 11.21
 200.2, 11.11
 200.3, 11.12
 200.4, 11.07
 200.5, 11.01
 200.6, 10.76
 200.7, 10.64
 200.8, 10.29
 200.9, 10.43
 201, 10.49
 201.1, 10.58
 201.2, 10.52
 201.3, 10.42
 201.4, 10.22
 201.5, 10.08
 201.6, 9.9
 201.7, 9.81
 201.8, 9.62
 201.9, 9.59
 202, 9.52
 202.1, 9.43
 202.2, 9.19
 202.3, 9.05
 202.4, 9.05
 202.5, 9.01
 202.6, 8.86
 202.7, 8.72
 202.8, 8.74
 202.9, 8.61
 203, 8.4
 203.1, 8.12
 203.2, 7.98
 203.3, 8.11
 203.4, 8.31
 203.5, 8.3
 203.6, 8.18
 203.7, 8
 203.8, 7.8
 203.9, 7.71
 204, 7.69
 204.1, 7.56
 204.2, 7.47
 204.3, 7.4
 204.4, 7.28
 204.5, 7.19
 204.6, 7
 204.7, 6.89
 204.8, 6.72
 204.9, 6.53
 205, 6.66
 205.1, 6.43
 205.2, 6.31
 205.3, 6.22
 205.4, 6.28
 205.5, 6.17
 205.6, 6.09
 205.7, 6.04
 205.8, 5.92
 205.9, 5.88
 206, 5.77
 206.1, 5.62
 206.2, 5.53
 206.3, 5.41
 206.4, 5.23
 206.5, 5.19
 206.6, 5.18
 206.7, 5.09
 206.8, 5.03
 206.9, 5.2
 207, 5.2
 207.1, 5.26
 207.2, 5.26
 207.3, 4.99
 207.4, 4.82
 207.5, 4.77
 207.6, 4.74
 207.7, 4.68
 207.8, 4.51
 207.9, 4.35
 208, 4.19
 208.1, 4.2
 208.2, 4.33
 208.3, 4.75
 208.4, 4.87
 208.5, 4.7
 208.6, 4.44
 208.7, 4.29
 208.8, 4.16
 208.9, 4.03
 209, 3.92
 209.1, 4
 209.2, 4.07
 209.3, 4.02
 209.4, 4.01
 209.5, 3.93
 209.6, 3.88
 209.7, 3.79
 209.8, 3.62
 209.9, 3.57
 210, 3.52
 210.1, 3.36
 210.2, 3.23
 210.3, 3.18
 210.4, 3.26
 210.5, 3.45
 210.6, 3.69
 210.7, 3.97
 210.8, 4.03
 210.9, 3.94
 211, 3.79
 211.1, 3.62
 211.2, 3.33
 211.3, 3.1
 211.4, 3.04
 211.5, 3.18
 211.6, 3.48
 211.7, 3.7
 211.8, 3.64
 211.9, 3.48
 212, 3.39
 212.1, 3.44
 212.2, 3.09
 212.3, 2.63
 212.4, 2.25
 212.5, 2.1
 212.6, 2.2
 212.7, 2.1
 212.8, 1.93
 212.9, 1.79
 213, 1.7
 213.1, 1.56
 213.2, 1.57
 213.3, 1.61
 213.4, 1.64
 213.5, 1.58
 213.6, 1.56
 213.7, 1.43
 213.8, 1.44
 213.9, 1.35
 214, 1.29
 214.1, 1.28
 214.2, 1.31
 214.3, 1.32
 214.4, 1.13
 214.5, 0.86
 214.6, 0.64
 214.7, 0.32
 214.8, -0.42
 214.9, -1.3
 215, -1.71
 215.1, -1.65
 215.2, -1.43
 215.3, -1.2
 215.4, -1.16
 215.5, -1.13
 215.6, -1.02
 215.7, -0.99
 215.8, -0.94
 215.9, -0.77
 216, -0.64
 216.1, -0.67
 216.2, -0.81
 216.3, -1.04
 216.4, -1.19
 216.5, -1.22
 216.6, -1.15
 216.7, -0.95
 216.8, -1.04
 216.9, -1.02
 217, -1.04
 217.1, -1.09
 217.2, -1.37
 217.3, -1.46
 217.4, -1.57
 217.5, -1.62
 217.6, -1.67
 217.7, -1.51
 217.8, -1.48
 217.9, -1.49
 218, -1.44
 218.1, -1.27
 218.2, -1.27
 218.3, -1.27
 218.4, -1.31
 218.5, -1.11
 218.6, -0.9
 218.7, -0.82
 218.8, -0.89
 218.9, -0.94
 219, -0.97
 219.1, -1.09
 219.2, -1.07
 219.3, -1.12
 219.4, -1.15
 219.5, -1.26
 219.6, -1.42
 219.7, -1.48
 219.8, -1.64
 219.9, -1.79
 220, -1.8
 220.1, -1.86
 220.2, -1.92
 220.3, -2.03
 220.4, -2.23
 220.5, -2.57
 220.6, -2.82
 220.7, -3.12
 220.8, -3.17
 220.9, -3.14
 221, -3.3
 221.1, -3.35
 221.2, -3.38
 221.3, -3.38
 221.4, -3.53
 221.5, -3.65
 221.6, -3.62
 221.7, -3.68
 221.8, -3.8
 221.9, -4.07
 222, -4.22
 222.1, -4.25
 222.2, -4.22
 222.3, -4.24
 222.4, -4.3
 222.5, -4.44
 222.6, -4.44
 222.7, -4.48
 222.8, -4.43
 222.9, -4.45
 223, -4.49
 223.1, -4.68
 223.2, -4.71
 223.3, -4.89
 223.4, -4.95
 223.5, -4.85
 223.6, -4.6
 223.7, -4.53
 223.8, -4.56
 223.9, -4.79
 224, -4.67
 224.1, -4.72
 224.2, -4.57
 224.3, -4.08
 224.4, -3.37
 224.5, -2.93
 224.6, -2.95
 224.7, -3.12
 224.8, -2.97
 224.9, -2.99
 225, -2.74
 225.1, -2.61
 225.2, -2.57
 225.3, -2.57
 225.4, -2.55
 225.5, -2.64
 225.6, -2.59
 225.7, -2.54
 225.8, -2.44
 225.9, -2.32
 226, -2.13
 226.1, -2.02
 226.2, -1.89
 226.3, -1.82
 226.4, -1.71
 226.5, -1.57
 226.6, -1.31
 226.7, -0.92
 226.8, -0.57
 226.9, -0.19
 227, 0.34
 227.1, 0.7
 227.2, 0.96
 227.3, 0.93
 227.4, 0.94
 227.5, 1.3
 227.6, 2.04
 227.7, 2.92
 227.8, 3.41
 227.9, 3.37
 228, 3.16
 228.1, 3.1
 228.2, 3.16
 228.3, 3.25
 228.4, 3.44
 228.5, 3.64
 228.6, 3.75
 228.7, 3.95
 228.8, 4.04
 228.9, 4.25
 229, 4.44
 229.1, 4.46
 229.2, 4.57
 229.3, 4.72
 229.4, 4.87
 229.5, 5.05
 229.6, 5.15
 229.7, 5.39
 229.8, 5.64
 229.9, 5.71
 230, 5.79
 230.1, 5.97
 230.2, 5.83
 230.3, 5.97
 230.4, 6.05
 230.5, 6.32
 230.6, 6.35
 230.7, 6.46
 230.8, 6.42
 230.9, 6.43
 231, 6.67
 231.1, 7.06
 231.2, 7.12
 231.3, 7.32
 231.4, 7.53
 231.5, 7.74
 231.6, 7.82
 231.7, 7.96
 231.8, 8.09
 231.9, 8.34
 232, 8.38
 232.1, 8.49
 232.2, 8.39
 232.3, 8.33
 232.4, 8.47
 232.5, 8.75
 232.6, 9.01
 232.7, 9.04
 232.8, 9.08
 232.9, 9.07
 233, 8.8
 233.1, 8.74
 233.2, 8.89
 233.3, 9.19
 233.4, 9.49
 233.5, 9.7
 233.6, 9.92
 233.7, 9.97
 233.8, 10.04
 233.9, 10.16
 234, 10.25
 234.1, 10.19
 234.2, 10.21
 234.3, 10.32
 234.4, 10.37
 234.5, 10.31
 234.6, 10.41
 234.7, 10.53
 234.8, 10.72
 234.9, 10.87
 235, 10.71
 235.1, 10.54
 235.2, 10.47
 235.3, 10.48
 235.4, 10.52
 235.5, 10.64
 235.6, 10.63
 235.7, 10.76
 235.8, 10.77
 235.9, 10.66
 236, 10.63
 236.1, 10.85
 236.2, 10.69
 236.3, 10.64
 236.4, 10.6
 236.5, 10.54
 236.6, 10.26
 236.7, 10.08
 236.8, 10.03
 236.9, 9.92
 237, 9.73
 237.1, 9.55
 237.2, 9.65
 237.3, 9.56
 237.4, 9.45
 237.5, 9.3
 237.6, 9.32
 237.7, 9.44
 237.8, 9.53
 237.9, 9.58
 238, 9.43
 238.1, 9.37
 238.2, 9.31
 238.3, 9.24
 238.4, 9.21
 238.5, 9.17
 238.6, 9.04
 238.7, 9.01
 238.8, 9.09
 238.9, 9.04
 239, 8.84
 239.1, 8.82
 239.2, 8.8
 239.3, 8.73
 239.4, 8.66
 239.5, 8.79
 239.6, 8.84
 239.7, 9.01
 239.8, 9.17
 239.9, 9.06
 240, 8.92
 240.1, 8.86
 240.2, 8.77
 240.3, 8.54
 240.4, 8.44
 240.5, 8.39
 240.6, 8.28
 240.7, 8.25
 240.8, 8.27
 240.9, 8.36
 241, 8.07
 241.1, 8.02
 241.2, 7.95
 241.3, 8.11
 241.4, 8.16
 241.5, 8.16
 241.6, 7.92
 241.7, 7.75
 241.8, 7.62
 241.9, 7.89
 242, 7.73
 242.1, 7.64
 242.2, 7.54
 242.3, 7.49
 242.4, 7.63
 242.5, 7.71
 242.6, 7.73
 242.7, 7.76
 242.8, 7.81
 242.9, 7.68
 243, 7.63
 243.1, 7.73
 243.2, 7.79
 243.3, 7.77
 243.4, 7.69
 243.5, 7.66
 243.6, 7.71
 243.7, 7.72
 243.8, 7.95
 243.9, 8.23
 244, 8.31
 244.1, 8.38
 244.2, 8.51
 244.3, 8.56
 244.4, 8.52
 244.5, 8.39
 244.6, 8.46
 244.7, 8.6
 244.8, 8.58
 244.9, 8.57
 245, 8.7
 245.1, 9.01
 245.2, 9.27
 245.3, 9.3
 245.4, 9.4
 245.5, 9.72
 245.6, 10.03
 245.7, 10.13
 245.8, 10.22
 245.9, 10.47
 246, 10.76
 246.1, 10.84
 246.2, 10.67
 246.3, 10.6
 246.4, 10.82
 246.5, 10.96
 246.6, 10.98
 246.7, 11.03
 246.8, 11.03
 246.9, 11.23
 247, 11.41
 247.1, 11.55
 247.2, 11.61
 247.3, 11.81
 247.4, 12.04
 247.5, 12
 247.6, 11.9
 247.7, 11.95
 247.8, 11.95
 247.9, 12.13
 248, 12.25
 248.1, 12.32
 248.2, 12.32
 248.3, 12.36
 248.4, 12.27
 248.5, 12.33
 248.6, 12.46
 248.7, 12.43
 248.8, 12.35
 248.9, 12.34
 249, 12.46
 249.1, 12.46
 249.2, 12.44
 249.3, 12.43
 249.4, 12.27
 249.5, 12.12
 249.6, 12.3
 249.7, 12.53
 249.8, 12.72
 249.9, 12.81
 250, 12.86
 250.1, 12.91
 250.2, 12.97
 250.3, 12.98
 250.4, 13.07
 250.5, 13.07
 250.6, 13.02
 250.7, 12.77
 250.8, 12.62
 250.9, 12.55
 251, 12.58
 251.1, 12.49
 251.2, 12.32
 251.3, 12.14
 251.4, 12.08
 251.5, 12.12
 251.6, 12.11
 251.7, 12.15
 251.8, 12.11
 251.9, 11.96
 252, 11.9
 252.1, 11.94
 252.2, 12
 252.3, 12.02
 252.4, 12.07
 252.5, 12
 252.6, 11.94
 252.7, 11.85
 252.8, 11.94
 252.9, 12.2
 253, 12.19
 253.1, 12.02
 253.2, 11.97
 253.3, 11.9
 253.4, 11.88
 253.5, 11.66
 253.6, 11.42
 253.7, 11.19
 253.8, 11.28
 253.9, 11.3
 254, 11.21
 254.1, 11.22
 254.2, 11.19
 254.3, 11.03
 254.4, 10.73
 254.5, 10.64
 254.6, 10.68
 254.7, 10.53
 254.8, 10.45
 254.9, 10.4
 255, 10.32
 255.1, 10.25
 255.2, 10.12
 255.3, 9.89
 255.4, 9.68
 255.5, 9.66
 255.6, 9.61
 255.7, 9.55
 255.8, 9.56
 255.9, 9.38
 256, 9.36
 256.1, 9.32
 256.2, 9.27
 256.3, 9.11
 256.4, 9.07
 256.5, 9.12
 256.6, 9.03
 256.7, 8.78
 256.8, 8.52
 256.9, 8.55
 257, 8.49
 257.1, 8.3
 257.2, 8.05
 257.3, 7.67
 257.4, 7.65
 257.5, 7.68
 257.6, 7.58
 257.7, 7.25
 257.8, 6.76
 257.9, 6.33
 258, 6.18
 258.1, 6.26
 258.2, 6.4
 258.3, 6.45
 258.4, 6.32
 258.5, 6.18
 258.6, 5.95
 258.7, 5.86
 258.8, 5.8
 258.9, 5.67
 259, 5.44
 259.1, 5.31
 259.2, 5.05
 259.3, 4.84
 259.4, 4.73
 259.5, 4.35
 259.6, 3.87
 259.7, 3.3
 259.8, 2.84
 259.9, 2.37
 260, 2.38
 260.1, 2.27
 260.2, 2.11
 260.3, 1.9
 260.4, 1.65
 260.5, 1.48
 260.6, 1.29
 260.7, 1.05
 260.8, 0.74
 260.9, 0.64
 261, 0.22
 261.1, -0.13
 261.2, -0.23
 261.3, -0.45
 261.4, -0.57
 261.5, -0.83
 261.6, -0.87
 261.7, -0.96
 261.8, -1.24
 261.9, -1.51
 262, -1.75
 262.1, -1.89
 262.2, -2
 262.3, -2.21
 262.4, -2.59
 262.5, -2.95
 262.6, -3.21
 262.7, -3.58
 262.8, -3.93
 262.9, -4.19
 263, -4.3
 263.1, -4.65
 263.2, -4.73
 263.3, -4.85
 263.4, -4.97
 263.5, -5.19
 263.6, -5.33
 263.7, -5.51
 263.8, -5.75
 263.9, -5.88
 264, -6.04
 264.1, -6.37
 264.2, -6.57
 264.3, -6.71
 264.4, -6.96
 264.5, -7.27
 264.6, -7.51
 264.7, -7.78
 264.8, -8.12
 264.9, -8.48
 265, -8.7
 265.1, -8.71
 265.2, -8.74
 265.3, -8.93
 265.4, -9.18
 265.5, -9.51
 265.6, -9.89
 265.7, -10.15
 265.8, -10.38
 265.9, -10.6
 266, -10.86
 266.1, -11.14
 266.2, -11.22
 266.3, -11.32
 266.4, -11.52
 266.5, -12
 266.6, -12.34
 266.7, -12.7
 266.8, -12.92
 266.9, -13.13
 267, -13.57
 267.1, -13.85
 267.2, -14.08
 267.3, -14.36
 267.4, -14.8
 267.5, -15.12
 267.6, -15.35
 267.7, -15.73
 267.8, -16.1
 267.9, -16.38
 268, -16.68
 268.1, -17.03
 268.2, -17.36
 268.3, -17.48
 268.4, -17.75
 268.5, -18.08
 268.6, -18.29
 268.7, -18.49
 268.8, -18.7
 268.9, -18.99
 269, -19.16
 269.1, -19.34
 269.2, -19.62
 269.3, -19.83
 269.4, -20.07
 269.5, -20.36
 269.6, -20.79
 269.7, -21.13
 269.8, -21.22
 269.9, -21.38
 270, -21.51
 270.1, -21.54
 270.2, -21.66
 270.3, -21.97
 270.4, -22.3
 270.5, -22.53
 270.6, -22.62
 270.7, -22.72
 270.8, -22.99
 270.9, -23.15
 271, -23.16
 271.1, -23.35
 271.2, -23.84
 271.3, -24.22
 271.4, -24.34
 271.5, -24.6
 271.6, -24.68
 271.7, -24.8
 271.8, -24.93
 271.9, -24.95
 272, -24.97
 272.1, -25.16
 272.2, -25.24
 272.3, -25.29
 272.4, -25.43
 272.5, -25.65
 272.6, -25.86
 272.7, -26.02
 272.8, -26.04
 272.9, -26.16
 273, -26.24
 273.1, -26.42
 273.2, -26.66
 273.3, -26.72
 273.4, -26.65
 273.5, -26.93
 273.6, -27.2
 273.7, -27.32
 273.8, -27.45
 273.9, -27.73
 274, -27.77
 274.1, -27.7
 274.2, -27.76
 274.3, -27.96
 274.4, -27.92
 274.5, -27.83
 274.6, -27.96
 274.7, -28.16
 274.8, -28.21
 274.9, -28.01
 275, -27.96
 275.1, -28.09
 275.2, -28.06
 275.3, -28
 275.4, -28.09
 275.5, -28.19
 275.6, -28.29
 275.7, -28.59
 275.8, -28.83
 275.9, -28.85
 276, -28.67
 276.1, -28.43
 276.2, -28.23
 276.3, -28.32
 276.4, -28.6
 276.5, -28.52
 276.6, -28.2
 276.7, -27.89
 276.8, -27.89
 276.9, -27.92
 277, -28.11
 277.1, -28.1
 277.2, -28.06
 277.3, -28.06
 277.4, -28.06
 277.5, -28.02
 277.6, -28.04
 277.7, -28.05
 277.8, -28.13
 277.9, -28.07
 278, -28.03
 278.1, -28.1
 278.2, -28.16
 278.3, -28.16
 278.4, -28.02
 278.5, -27.67
 278.6, -27.45
 278.7, -27.48
 278.8, -27.45
 278.9, -27.3
 279, -27.27
 279.1, -27.14
 279.2, -27.13
 279.3, -26.94
 279.4, -26.9
 279.5, -27.02
 279.6, -26.88
 279.7, -26.59
 279.8, -26.43
 279.9, -26.52
 280, -26.53
 280.1, -26.53
 280.2, -26.57
 280.3, -26.33
 280.4, -25.95
 280.5, -25.52
 280.6, -25.33
 280.7, -25.09
 280.8, -25.02
 280.9, -24.82
 281, -24.53
 281.1, -24.3
 281.2, -23.95
 281.3, -23.92
 281.4, -23.83
 281.5, -23.56
 281.6, -23.25
 281.7, -23.24
 281.8, -23.01
 281.9, -22.84
 282, -22.74
 282.1, -22.62
 282.2, -22.56
 282.3, -22.47
 282.4, -22.33
 282.5, -22.09
 282.6, -21.84
 282.7, -21.76
 282.8, -21.61
 282.9, -21.36
 283, -21.08
 283.1, -21.03
 283.2, -20.89
 283.3, -20.65
 283.4, -20.37
 283.5, -20.13
 283.6, -20
 283.7, -19.98
 283.8, -20.12
 283.9, -20.06
 284, -19.97
 284.1, -19.79
 284.2, -19.49
 284.3, -19.25
 284.4, -19.11
 284.5, -19.1
 284.6, -19.25
 284.7, -19.15
 284.8, -18.91
 284.9, -18.7
 285, -18.55
 285.1, -18.19
 285.2, -17.77
 285.3, -17.49
 285.4, -17.33
 285.5, -17.15
 285.6, -17.02
 285.7, -16.87
 285.8, -16.75
 285.9, -16.48
 286, -16.27
 286.1, -16.08
 286.2, -15.67
 286.3, -15.37
 286.4, -15.1
 286.5, -14.94
 286.6, -14.82
 286.7, -14.73
 286.8, -14.6
 286.9, -14.5
 287, -14.27
 287.1, -13.94
 287.2, -13.83
 287.3, -13.71
 287.4, -13.61
 287.5, -13.52
 287.6, -13.34
 287.7, -13.09
 287.8, -12.93
 287.9, -12.85
 288, -12.62
 288.1, -12.44
 288.2, -12.33
 288.3, -12.38
 288.4, -12.2
 288.5, -11.75
 288.6, -11.24
 288.7, -10.9
 288.8, -10.66
 288.9, -10.31
 289, -9.99
 289.1, -9.7
 289.2, -9.42
 289.3, -9.23
 289.4, -8.87
 289.5, -8.73
 289.6, -8.49
 289.7, -8.33
 289.8, -7.99
 289.9, -7.66
 290, -7.42
 290.1, -7.33
 290.2, -7.22
 290.3, -6.98
 290.4, -6.7
 290.5, -6.49
 290.6, -6.3
 290.7, -5.96
 290.8, -5.57
 290.9, -5.12
 291, -4.64
 291.1, -4.39
 291.2, -4.21
 291.3, -3.76
 291.4, -3.44
 291.5, -3.25
 291.6, -3.03
 291.7, -2.65
 291.8, -2.23
 291.9, -1.8
 292, -1.46
 292.1, -1.15
 292.2, -0.81
 292.3, -0.61
 292.4, -0.38
 292.5, -0.19
 292.6, 0.22
 292.7, 0.51
 292.8, 0.85
 292.9, 1.13
 293, 1.62
 293.1, 1.94
 293.2, 2.15
 293.3, 2.24
 293.4, 2.5
 293.5, 2.86
 293.6, 3.19
 293.7, 3.62
 293.8, 4.23
 293.9, 4.98
 294, 5.26
 294.1, 5.46
 294.2, 5.93
 294.3, 6.48
 294.4, 6.72
 294.5, 7.05
 294.6, 7.37
 294.7, 7.76
 294.8, 8.07
 294.9, 8.54
 295, 8.81
 295.1, 9.24
 295.2, 9.54
 295.3, 9.78
 295.4, 9.93
 295.5, 10.2
 295.6, 10.42
 295.7, 10.69
 295.8, 11.05
 295.9, 11.43
 296, 11.76
 296.1, 12.08
 296.2, 12.45
 296.3, 12.81
 296.4, 13.21
 296.5, 13.84
 296.6, 14.19
 296.7, 14.53
 296.8, 14.79
 296.9, 15.17
 297, 15.63
 297.1, 16.18
 298.1, 16.18
 298.2, -0.04
ENDTABLE
Z_PROFILE_GAIN(1)   1 ! Gain multiplied with calculated value to get elevation
                      ! increment
Z_PROFILE_OFFSET(1) 0 ; mm ! Offset added (after gain) to get elevation increment
SSTART_Z_PROFILE(1) 0 ; m ! Offset subtracted from distance travelled
SSCALE_Z_PROFILE(1) 1 ! Scale factor divided into (distance travelled -
                      ! SSTART_Z_PROFILE)

! 1D table: col 1 = distance travelled (m), col 2 = elevation increment (mm)
Z_PROFILE_TABLE(2) LINEAR_LOOP ! linear interpolation, repeat in loop
 0, -0.54
 0.1, -0.7
 0.2, -0.73
 0.3, -0.54
 0.4, -0.44
 0.5, -0.6
 0.6, -0.63
 0.7, -0.59
 0.8, -0.46
 0.9, -0.28
 1, -0.18
 1.1, -0.25
 1.2, -0.24
 1.3, -0.16
 1.4, -0.11
 1.5, -0.14
 1.6, -0.22
 1.7, -0.37
 1.8, -0.33
 1.9, -0.37
 2, -0.37
 2.1, -0.26
 2.2, -0.06
 2.3, 0.07
 2.4, 0.03
 2.5, 0.09
 2.6, 0.08
 2.7, 0.13
 2.8, 0.13
 2.9, -0.02
 3, -0.04
 3.1, 0.02
 3.2, -0.08
 3.3, 0.01
 3.4, 0.25
 3.5, 0.23
 3.6, 0.34
 3.7, 0.56
 3.8, 0.79
 3.9, 0.89
 4, 0.95
 4.1, 0.93
 4.2, 0.77
 4.3, 0.61
 4.4, 0.61
 4.5, 0.95
 4.6, 1.17
 4.7, 1.33
 4.8, 1.29
 4.9, 1.19
 5, 1.16
 5.1, 1.18
 5.2, 1.12
 5.3, 1.14
 5.4, 0.98
 5.5, 1.04
 5.6, 1.16
 5.7, 1.35
 5.8, 1.39
 5.9, 1.3
 6, 1.22
 6.1, 1.31
 6.2, 1.28
 6.3, 1.21
 6.4, 1.27
 6.5, 1.32
 6.6, 1.28
 6.7, 1.21
 6.8, 1.32
 6.9, 1.27
 7, 1.3
 7.1, 1.25
 7.2, 1.36
 7.3, 1.45
 7.4, 1.29
 7.5, 1.01
 7.6, 0.84
 7.7, 0.85
 7.8, 0.78
 7.9, 0.66
 8, 0.6
 8.1, 0.73
 8.2, 0.76
 8.3, 0.69
 8.4, 0.47
 8.5, 0.45
 8.6, 0.49
 8.7, 0.55
 8.8, 0.62
 8.9, 0.63
 9, 0.75
 9.1, 0.73
 9.2, 0.67
 9.3, 0.61
 9.4, 0.57
 9.5, 0.48
 9.6, 0.5
 9.7, 0.53
 9.8, 0.36
 9.9, 0.08
 10, -0.27
 10.1, -0.41
 10.2, -0.7
 10.3, -0.77
 10.4, -0.71
 10.5, -0.73
 10.6, -0.71
 10.7, -0.76
 10.8, -0.66
 10.9, -0.49
 11, -0.24
 11.1, -0.3
 11.2, -0.3
 11.3, -0.12
 11.4, -0.02
 11.5, 0.03
 11.6, 0.05
 11.7, 0.15
 11.8, 0.27
 11.9, 0.35
 12, 0.4
 12.1, 0.48
 12.2, 0.62
 12.3, 0.8
 12.4, 1.12
 12.5, 1.27
 12.6, 1.35
 12.7, 1.38
 12.8, 1.35
 12.9, 1.42
 13, 1.43
 13.1, 1.42
 13.2, 1.6
 13.3, 1.6
 13.4, 1.64
 13.5, 1.69
 13.6, 1.64
 13.7, 1.63
 13.8, 1.64
 13.9, 1.66
 14, 1.63
 14.1, 1.67
 14.2, 1.75
 14.3, 1.84
 14.4, 1.86
 14.5, 1.76
 14.6, 1.63
 14.7, 1.64
 14.8, 1.66
 14.9, 1.63
 15, 1.55
 15.1, 1.48
 15.2, 1.27
 15.3, 1.19
 15.4, 1.31
 15.5, 1.39
 15.6, 1.34
 15.7, 1.28
 15.8, 1.36
 15.9, 1.41
 16, 1.44
 16.1, 1.34
 16.2, 1.37
 16.3, 1.28
 16.4, 1.41
 16.5, 1.27
 16.6, 1.07
 16.7, 1.02
 16.8, 1.12
 16.9, 1.12
 17, 1.04
 17.1, 1.1
 17.2, 1.11
 17.3, 1.16
 17.4, 1.26
 17.5, 1.35
 17.6, 1.16
 17.7, 0.93
 17.8, 0.92
 17.9, 1.05
 18, 1.18
 18.1, 1.22
 18.2, 1.18
 18.3, 1.05
 18.4, 1.02
 18.5, 1.05
 18.6, 1.05
 18.7, 1.07
 18.8, 1.17
 18.9, 1.33
 19, 1.31
 19.1, 1.28
 19.2, 1.35
 19.3, 1.36
 19.4, 1.47
 19.5, 1.63
 19.6, 1.74
 19.7, 1.86
 19.8, 1.89
 19.9, 2.08
 20, 2.36
 20.1, 2.61
 20.2, 2.75
 20.3, 2.81
 20.4, 2.99
 20.5, 3.1
 20.6, 3.32
 20.7, 3.46
 20.8, 3.6
 20.9, 3.67
 21, 3.76
 21.1, 3.84
 21.2, 3.92
 21.3, 3.98
 21.4, 4.05
 21.5, 4.13
 21.6, 4.29
 21.7, 4.46
 21.8, 4.66
 21.9, 4.78
 22, 4.98
 22.1, 5.03
 22.2, 4.94
 22.3, 4.87
 22.4, 4.82
 22.5, 4.85
 22.6, 4.94
 22.7, 5.13
 22.8, 5.11
 22.9, 5.15
 23, 5.21
 23.1, 5.21
 23.2, 5.1
 23.3, 5.05
 23.4, 5.15
 23.5, 5.25
 23.6, 5.32
 23.7, 5.26
 23.8, 5.02
 23.9, 4.52
 24, 4.33
 24.1, 4.72
 24.2, 5.1
 24.3, 5.25
 24.4, 5.04
 24.5, 4.88
 24.6, 4.94
 24.7, 5.09
 24.8, 5.26
 24.9, 5.14
 25, 5.02
 25.1, 4.94
 25.2, 4.89
 25.3, 4.86
 25.4, 4.73
 25.5, 4.62
 25.6, 4.53
 25.7, 4.41
 25.8, 4.3
 25.9, 4.26
 26, 4.05
 26.1, 3.81
 26.2, 3.64
 26.3, 3.54
 26.4, 3.24
 26.5, 3
 26.6, 2.93
 26.7, 2.87
 26.8, 2.83
 26.9, 2.89
 27, 2.89
 27.1, 2.75
 27.2, 2.88
 27.3, 3.43
 27.4, 4.27
 27.5, 4.81
 27.6, 4.86
 27.7, 4.54
 27.8, 4.09
 27.9, 3.85
 28, 3.75
 28.1, 3.83
 28.2, 3.83
 28.3, 3.64
 28.4, 3.36
 28.5, 3.23
 28.6, 3.16
 28.7, 3.32
 28.8, 3.6
 28.9, 3.83
 29, 3.77
 29.1, 3.56
 29.2, 3.26
 29.3, 3.2
 29.4, 3.15
 29.5, 3.23
 29.6, 3.22
 29.7, 3.11
 29.8, 3.19
 29.9, 3.19
 30, 3.16
 30.1, 2.97
 30.2, 2.85
 30.3, 2.77
 30.4, 2.78
 30.5, 2.5
 30.6, 2.3
 30.7, 2.34
 30.8, 2.31
 30.9, 2.16
 31, 2.04
 31.1, 1.96
 31.2, 1.98
 31.3, 1.91
 31.4, 1.81
 31.5, 1.96
 31.6, 2.01
 31.7, 1.8
 31.8, 1.66
 31.9, 1.73
 32, 1.57
 32.1, 1.5
 32.2, 1.45
 32.3, 1.26
 32.4, 1.07
 32.5, 1.07
 32.6, 1.2
 32.7, 1.19
 32.8, 1.06
 32.9, 0.89
 33, 0.79
 33.1, 0.75
 33.2, 0.67
 33.3, 0.57
 33.4, 0.4
 33.5, 0.38
 33.6, 0.22
 33.7, 0.33
 33.8, 0.33
 33.9, 0.34
 34, 0.34
 34.1, 0.35
 34.2, 0.33
 34.3, 0.35
 34.4, 0.29
 34.5, 0.34
 34.6, 0.27
 34.7, 0.05
 34.8, -0.22
 34.9, -0.28
 35, -0.21
 35.1, -0.21
 35.2, -0.23
 35.3, -0.25
 35.4, -0.38
 35.5, -0.43
 35.6, -0.51
 35.7, -0.64
 35.8, -0.81
 35.9, -0.85
 36, -0.77
 36.1, -0.84
 36.2, -0.93
 36.3, -1
 36.4, -0.91
 36.5, -0.91
 36.6, -0.82
 36.7, -0.88
 36.8, -1
 36.9, -1.05
 37, -0.95
 37.1, -0.89
 37.2, -0.93
 37.3, -1.11
 37.4, -1.09
 37.5, -1.07
 37.6, -1.03
 37.7, -1.06
 37.8, -1.14
 37.9, -1.43
 38, -1.53
 38.1, -1.63
 38.2, -1.73
 38.3, -1.78
 38.4, -1.95
 38.5, -2.04
 38.6, -2.17
 38.7, -2.1
 38.8, -1.82
 38.9, -1.67
 39, -1.57
 39.1, -1.65
 39.2, -1.81
 39.3, -1.87
 39.4, -1.71
 39.5, -1.5
 39.6, -1.53
 39.7, -1.44
 39.8, -1.38
 39.9, -1.11
 40, -0.88
 40.1, -0.68
 40.2, -0.51
 40.3, -0.38
 40.4, -0.21
 40.5, -0.14
 40.6, -0.08
 40.7, 0.02
 40.8, 0.2
 40.9, 0.4
 41, 0.56
 41.1, 0.72
 41.2, 0.86
 41.3, 0.97
 41.4, 1.03
 41.5, 1.08
 41.6, 1.31
 41.7, 1.4
 41.8, 1.58
 41.9, 1.67
 42, 1.82
 42.1, 1.95
 42.2, 2.13
 42.3, 2.33
 42.4, 2.36
 42.5, 2.45
 42.6, 2.47
 42.7, 2.47
 42.8, 2.47
 42.9, 2.61
 43, 2.84
 43.1, 2.98
 43.2, 3.14
 43.3, 3.37
 43.4, 3.64
 43.5, 3.73
 43.6, 3.78
 43.7, 3.9
 43.8, 4.09
 43.9, 4.1
 44, 4.17
 44.1, 4.46
 44.2, 4.67
 44.3, 4.74
 44.4, 4.73
 44.5, 4.53
 44.6, 4.46
 44.7, 4.6
 44.8, 4.9
 44.9, 4.98
 45, 4.99
 45.1, 5.11
 45.2, 5.15
 45.3, 5.21
 45.4, 5.13
 45.5, 5.17
 45.6, 5.26
 45.7, 5.29
 45.8, 5.24
 45.9, 5.19
 46, 5.05
 46.1, 5.07
 46.2, 4.97
 46.3, 4.82
 46.4, 4.77
 46.5, 4.59
 46.6, 4.25
 46.7, 4.12
 46.8, 4.23
 46.9, 4.32
 47, 4.29
 47.1, 4.35
 47.2, 4.35
 47.3, 4.35
 47.4, 4.18
 47.5, 4.05
 47.6, 4.01
 47.7, 3.97
 47.8, 3.73
 47.9, 3.35
 48, 3.01
 48.1, 2.8
 48.2, 2.58
 48.3, 2.53
 48.4, 2.52
 48.5, 2.5
 48.6, 2.67
 48.7, 2.85
 48.8, 2.76
 48.9, 2.72
 49, 2.74
 49.1, 2.8
 49.2, 2.76
 49.3, 2.73
 49.4, 2.62
 49.5, 2.42
 49.6, 2.24
 49.7, 2.14
 49.8, 2.24
 49.9, 2.04
 50, 1.95
 50.1, 1.95
 50.2, 2.02
 50.3, 2.09
 50.4, 2.11
 50.5, 1.89
 50.6, 1.81
 50.7, 1.82
 50.8, 1.85
 50.9, 1.74
 51, 1.61
 51.1, 1.54
 51.2, 1.34
 51.3, 1.14
 51.4, 1
 51.5, 0.88
 51.6, 0.71
 51.7, 0.52
 51.8, 0.28
 51.9, 0.09
 52, -0.1
 52.1, -0.2
 52.2, -0.19
 52.3, -0.15
 52.4, -0.2
 52.5, -0.46
 52.6, -0.87
 52.7, -1.18
 52.8, -1.44
 52.9, -1.65
 53, -1.89
 53.1, -2.05
 53.2, -2.14
 53.3, -2.26
 53.4, -2.5
 53.5, -2.82
 53.6, -3.09
 53.7, -3.42
 53.8, -3.74
 53.9, -4.04
 54, -4.31
 54.1, -4.5
 54.2, -4.64
 54.3, -4.59
 54.4, -4.63
 54.5, -4.83
 54.6, -5
 54.7, -5.02
 54.8, -4.96
 54.9, -4.84
 55, -4.86
 55.1, -4.92
 55.2, -4.89
 55.3, -4.79
 55.4, -4.73
 55.5, -4.73
 55.6, -4.77
 55.7, -4.94
 55.8, -4.88
 55.9, -4.75
 56, -4.62
 56.1, -4.7
 56.2, -4.69
 56.3, -4.58
 56.4, -4.49
 56.5, -4.56
 56.6, -4.64
 56.7, -4.71
 56.8, -4.79
 56.9, -4.95
 57, -4.98
 57.1, -4.79
 57.2, -4.77
 57.3, -4.87
 57.4, -5.01
 57.5, -4.98
 57.6, -5.02
 57.7, -5.2
 57.8, -5.31
 57.9, -5.36
 58, -5.5
 58.1, -5.59
 58.2, -5.44
 58.3, -5.1
 58.4, -4.98
 58.5, -4.95
 58.6, -4.81
 58.7, -4.58
 58.8, -4.4
 58.9, -4.26
 59, -4.09
 59.1, -4.07
 59.2, -4.1
 59.3, -4.06
 59.4, -4.14
 59.5, -4.21
 59.6, -4.04
 59.7, -3.79
 59.8, -3.54
 59.9, -3.54
 60, -3.41
 60.1, -3.43
 60.2, -3.4
 60.3, -3.58
 60.4, -3.62
 60.5, -3.78
 60.6, -3.71
 60.7, -3.47
 60.8, -3.23
 60.9, -2.98
 61, -2.81
 61.1, -2.81
 61.2, -3
 61.3, -3.32
 61.4, -3.62
 61.5, -3.66
 61.6, -3.55
 61.7, -3.33
 61.8, -3.28
 61.9, -3.19
 62, -3.09
 62.1, -3.13
 62.2, -3.03
 62.3, -3.07
 62.4, -3.06
 62.5, -3.05
 62.6, -3.11
 62.7, -3.23
 62.8, -3.13
 62.9, -2.95
 63, -2.76
 63.1, -2.74
 63.2, -2.75
 63.3, -2.7
 63.4, -2.88
 63.5, -2.93
 63.6, -2.83
 63.7, -2.69
 63.8, -2.73
 63.9, -2.79
 64, -2.84
 64.1, -2.94
 64.2, -2.98
 64.3, -3.07
 64.4, -3.09
 64.5, -3.14
 64.6, -3.21
 64.7, -3.26
 64.8, -3.36
 64.9, -3.45
 65, -3.67
 65.1, -3.85
 65.2, -4.07
 65.3, -4.28
 65.4, -4.52
 65.5, -4.69
 65.6, -4.82
 65.7, -4.93
 65.8, -5.05
 65.9, -5.16
 66, -5.34
 66.1, -5.65
 66.2, -5.84
 66.3, -5.87
 66.4, -5.92
 66.5, -6.05
 66.6, -6.04
 66.7, -6.1
 66.8, -6.09
 66.9, -6.3
 67, -6.43
 67.1, -6.5
 67.2, -6.51
 67.3, -6.63
 67.4, -6.83
 67.5, -6.94
 67.6, -7.12
 67.7, -7.23
 67.8, -7.31
 67.9, -7.45
 68, -7.59
 68.1, -7.81
 68.2, -7.9
 68.3, -7.86
 68.4, -7.87
 68.5, -8.13
 68.6, -8.26
 68.7, -8.34
 68.8, -8.42
 68.9, -8.76
 69, -8.89
 69.1, -9
 69.2, -9.06
 69.3, -9.04
 69.4, -8.96
 69.5, -8.98
 69.6, -8.98
 69.7, -8.9
 69.8, -8.93
 69.9, -9.03
 70, -9.09
 70.1, -9.22
 70.2, -9.38
 70.3, -9.46
 70.4, -9.4
 70.5, -9.44
 70.6, -9.66
 70.7, -9.74
 70.8, -9.71
 70.9, -9.67
 71, -9.77
 71.1, -9.72
 71.2, -9.84
 71.3, -9.9
 71.4, -9.96
 71.5, -10.04
 71.6, -10.07
 71.7, -10.09
 71.8, -10.24
 71.9, -10.51
 72, -10.6
 72.1, -10.63
 72.2, -10.63
 72.3, -10.57
 72.4, -10.42
 72.5, -10.31
 72.6, -10.44
 72.7, -10.4
 72.8, -10.29
 72.9, -10.16
 73, -10.16
 73.1, -10.08
 73.2, -9.92
 73.3, -9.82
 73.4, -9.87
 73.5, -9.97
 73.6, -10.04
 73.7, -9.8
 73.8, -9.54
 73.9, -9.41
 74, -9.41
 74.1, -9.5
 74.2, -9.42
 74.3, -9.37
 74.4, -9.57
 74.5, -9.55
 74.6, -9.43
 74.7, -9.23
 74.8, -9.15
 74.9, -9.05
 75, -9.08
 75.1, -9
 75.2, -9.03
 75.3, -8.9
 75.4, -8.74
 75.5, -8.6
 75.6, -8.57
 75.7, -8.57
 75.8, -8.49
 75.9, -8.41
 76, -8.45
 76.1, -8.41
 76.2, -8.26
 76.3, -8.28
 76.4, -8.35
 76.5, -8.36
 76.6, -8.28
 76.7, -8.13
 76.8, -8.06
 76.9, -8.03
 77, -8.15
 77.1, -8.19
 77.2, -8.26
 77.3, -8.19
 77.4, -8.1
 77.5, -7.87
 77.6, -7.75
 77.7, -7.48
 77.8, -7.35
 77.9, -7.4
 78, -7.44
 78.1, -7.5
 78.2, -7.37
 78.3, -7.09
 78.4, -6.92
 78.5, -6.72
 78.6, -6.54
 78.7, -6.4
 78.8, -6.26
 78.9, -6.12
 79, -5.9
 79.1, -5.68
 79.2, -5.51
 79.3, -5.3
 79.4, -5.06
 79.5, -5.06
 79.6, -5.05
 79.7, -4.89
 79.8, -4.66
 79.9, -4.56
 80, -4.31
 80.1, -4.1
 80.2, -4.07
 80.3, -4.05
 80.4, -3.78
 80.5, -3.39
 80.6, -3.27
 80.7, -3.16
 80.8, -2.99
 80.9, -2.76
 81, -2.55
 81.1, -2.54
 81.2, -2.38
 81.3, -2.26
 81.4, -2.16
 81.5, -1.86
 81.6, -1.62
 81.7, -1.52
 81.8, -1.44
 81.9, -1.27
 82, -0.83
 82.1, -0.16
 82.2, 0.39
 82.3, 0.38
 82.4, -0.06
 82.5, -0.37
 82.6, -0.21
 82.7, -0.06
 82.8, 0
 82.9, 0.12
 83, 0.27
 83.1, 0.3
 83.2, 0.35
 83.3, 0.51
 83.4, 0.57
 83.5, 0.52
 83.6, 0.61
 83.7, 0.68
 83.8, 0.83
 83.9, 0.91
 84, 0.96
 84.1, 0.76
 84.2, 0.66
 84.3, 0.71
 84.4, 0.72
 84.5, 0.7
 84.6, 0.73
 84.7, 0.68
 84.8, 0.72
 84.9, 0.58
 85, 0.45
 85.1, 0.63
 85.2, 0.99
 85.3, 1.75
 85.4, 2.49
 85.5, 2.81
 85.6, 2.88
 85.7, 2.8
 85.8, 2.67
 85.9, 2.62
 86, 2.59
 86.1, 2.62
 86.2, 2.66
 86.3, 2.76
 86.4, 2.98
 86.5, 3.25
 86.6, 3.4
 86.7, 3.45
 86.8, 3.59
 86.9, 3.93
 87, 3.99
 87.1, 4.03
 87.2, 4.06
 87.3, 4.17
 87.4, 4.29
 87.5, 4.45
 87.6, 4.49
 87.7, 4.46
 87.8, 4.57
 87.9, 4.76
 88, 4.98
 88.1, 5.24
 88.2, 5.52
 88.3, 5.7
 88.4, 6.02
 88.5, 6.32
 88.6, 6.57
 88.7, 6.83
 88.8, 6.98
 88.9, 7.1
 89, 7.19
 89.1, 7.36
 89.2, 7.53
 89.3, 7.74
 89.4, 7.93
 89.5, 8.06
 89.6, 8.22
 89.7, 8.32
 89.8, 8.4
 89.9, 8.49
 90, 8.72
 90.1, 8.88
 90.2, 9.13
 90.3, 9.14
 90.4, 9.19
 90.5, 9.28
 90.6, 9.45
 90.7, 9.67
 90.8, 9.85
 90.9, 10
 91, 10.01
 91.1, 10.03
 91.2, 10.06
 91.3, 10.05
 91.4, 10.11
 91.5, 10.15
 91.6, 10.12
 91.7, 10.23
 91.8, 10.29
 91.9, 10.34
 92, 10.42
 92.1, 10.46
 92.2, 10.5
 92.3, 10.45
 92.4, 10.53
 92.5, 10.43
 92.6, 10.28
 92.7, 10.24
 92.8, 10.22
 92.9, 10.16
 93, 10.16
 93.1, 10.33
 93.2, 10.52
 93.3, 10.66
 93.4, 10.8
 93.5, 10.91
 93.6, 11.01
 93.7, 10.98
 93.8, 11.03
 93.9, 11.05
 94, 11
 94.1, 10.95
 94.2, 10.92
 94.3, 10.87
 94.4, 10.84
 94.5, 10.72
 94.6, 10.54
 94.7, 10.53
 94.8, 10.53
 94.9, 10.45
 95, 10.42
 95.1, 10.63
 95.2, 10.82
 95.3, 10.99
 95.4, 11.01
 95.5, 10.87
 95.6, 10.84
 95.7, 10.93
 95.8, 10.87
 95.9, 10.89
 96, 10.97
 96.1, 10.94
 96.2, 10.86
 96.3, 10.86
 96.4, 10.95
 96.5, 10.88
 96.6, 10.86
 96.7, 10.76
 96.8, 10.54
 96.9, 10.57
 97, 10.96
 97.1, 11.09
 97.2, 11.04
 97.3, 10.86
 97.4, 10.68
 97.5, 10.48
 97.6, 10.51
 97.7, 10.48
 97.8, 10.39
 97.9, 10.2
 98, 10.16
 98.1, 9.94
 98.2, 9.82
 98.3, 9.8
 98.4, 9.75
 98.5, 9.66
 98.6, 9.52
 98.7, 9.3
 98.8, 9.05
 98.9, 8.77
 99, 8.61
 99.1, 8.44
 99.2, 8.33
 99.3, 8.21
 99.4, 8.17
 99.5, 8.06
 99.6, 7.93
 99.7, 7.92
 99.8, 7.93
 99.9, 7.85
 100, 7.77
 100.1, 7.67
 100.2, 7.53
 100.3, 7.28
 100.4, 7.08
 100.5, 6.89
 100.6, 6.76
 100.7, 6.69
 100.8, 6.55
 100.9, 6.51
 101, 6.33
 101.1, 6.2
 101.2, 6.01
 101.3, 5.87
 101.4, 5.81
 101.5, 5.88
 101.6, 5.83
 101.7, 5.69
 101.8, 5.59
 101.9, 5.4
 102, 5.3
 102.1, 5.2
 102.2, 5.24
 102.3, 5.14
 102.4, 5.07
 102.5, 4.97
 102.6, 4.73
 102.7, 4.61
 102.8, 4.55
 102.9, 4.49
 103, 4.32
 103.1, 4.04
 103.2, 3.74
 103.3, 3.51
 103.4, 3.36
 103.5, 3.3
 103.6, 3.28
 103.7, 3.09
 103.8, 2.92
 103.9, 2.69
 104, 2.46
 104.1, 2.27
 104.2, 2.09
 104.3, 1.87
 104.4, 1.73
 104.5, 1.52
 104.6, 1.32
 104.7, 1.06
 104.8, 0.8
 104.9, 0.66
 105, 0.46
 105.1, 0.34
 105.2, 0.15
 105.3, -0.11
 105.4, -0.23
 105.5, -0.42
 105.6, -0.81
 105.7, -1.18
 105.8, -1.45
 105.9, -1.47
 106, -1.7
 106.1, -1.85
 106.2, -2.01
 106.3, -2.13
 106.4, -2.39
 106.5, -2.69
 106.6, -3.02
 106.7, -3.38
 106.8, -3.6
 106.9, -3.87
 107, -4.07
 107.1, -4.5
 107.2, -4.64
 107.3, -4.85
 107.4, -5.03
 107.5, -5.27
 107.6, -5.54
 107.7, -5.73
 107.8, -5.85
 107.9, -6.1
 108, -6.16
 108.1, -6.19
 108.2, -6.36
 108.3, -6.68
 108.4, -6.99
 108.5, -7.47
 108.6, -7.72
 108.7, -7.81
 108.8, -8.05
 108.9, -8.25
 109, -8.46
 109.1, -8.67
 109.2, -9
 109.3, -9.24
 109.4, -9.56
 109.5, -9.8
 109.6, -10.04
 109.7, -10.06
 109.8, -10.11
 109.9, -10.3
 110, -10.51
 110.1, -10.7
 110.2, -10.84
 110.3, -10.97
 110.4, -10.91
 110.5, -10.84
 110.6, -10.91
 110.7, -11.03
 110.8, -11.17
 110.9, -11.39
 111, -11.46
 111.1, -11.56
 111.2, -11.62
 111.3, -11.73
 111.4, -11.75
 111.5, -11.82
 111.6, -11.94
 111.7, -11.94
 111.8, -12.02
 111.9, -12.08
 112, -12.22
 112.1, -12.32
 112.2, -12.54
 112.3, -12.59
 112.4, -12.53
 112.5, -12.6
 112.6, -12.59
 112.7, -12.41
 112.8, -12.21
 112.9, -12.1
 113, -12.16
 113.1, -12.31
 113.2, -12.58
 113.3, -12.64
 113.4, -12.61
 113.5, -12.53
 113.6, -12.64
 113.7, -12.58
 113.8, -12.41
 113.9, -12.28
 114, -12.3
 114.1, -12.42
 114.2, -12.38
 114.3, -12.45
 114.4, -12.22
 114.5, -11.89
 114.6, -11.62
 114.7, -11.48
 114.8, -11.35
 114.9, -11.07
 115, -11.01
 115.1, -10.86
 115.2, -10.79
 115.3, -10.55
 115.4, -10.21
 115.5, -9.93
 115.6, -9.74
 115.7, -9.69
 115.8, -9.71
 115.9, -9.71
 116, -9.61
 116.1, -9.48
 116.2, -9.33
 116.3, -9.12
 116.4, -8.95
 116.5, -8.63
 116.6, -8.48
 116.7, -8.32
 116.8, -7.97
 116.9, -7.78
 117, -7.52
 117.1, -7.31
 117.2, -7.16
 117.3, -7.15
 117.4, -6.94
 117.5, -6.66
 117.6, -6.41
 117.7, -6.04
 117.8, -5.9
 117.9, -5.7
 118, -5.44
 118.1, -5.27
 118.2, -5.03
 118.3, -4.89
 118.4, -4.82
 118.5, -4.88
 118.6, -4.59
 118.7, -4.25
 118.8, -3.96
 118.9, -3.65
 119, -3.47
 119.1, -3.32
 119.2, -3.24
 119.3, -3.08
 119.4, -2.8
 119.5, -2.63
 119.6, -2.36
 119.7, -2.07
 119.8, -1.84
 119.9, -1.64
 120, -1.53
 120.1, -1.4
 120.2, -1.23
 120.3, -1.03
 120.4, -0.99
 120.5, -0.63
 120.6, -0.31
 120.7, 0.13
 120.8, 0.43
 120.9, 0.68
 121, 0.9
 121.1, 0.98
 121.2, 1.14
 121.3, 1.3
 121.4, 1.69
 121.5, 1.81
 121.6, 2.09
 121.7, 2.17
 121.8, 2.42
 121.9, 2.63
 122, 2.94
 122.1, 3.19
 122.2, 3.49
 122.3, 3.7
 122.4, 3.66
 122.5, 3.77
 122.6, 4.09
 122.7, 4.44
 122.8, 4.8
 122.9, 4.93
 123, 5.07
 123.1, 5.13
 123.2, 5.25
 123.3, 5.37
 123.4, 5.68
 123.5, 5.98
 123.6, 6.38
 123.7, 6.55
 123.8, 6.64
 123.9, 6.69
 124, 6.81
 124.1, 6.92
 124.2, 7
 124.3, 7.33
 124.4, 7.45
 124.5, 7.67
 124.6, 7.82
 124.7, 7.95
 124.8, 8.04
 124.9, 8.26
 125, 8.54
 125.1, 8.63
 125.2, 8.65
 125.3, 8.84
 125.4, 9.04
 125.5, 9.26
 125.6, 9.39
 125.7, 9.43
 125.8, 9.62
 125.9, 9.7
 126, 9.97
 126.1, 10.12
 126.2, 10.12
 126.3, 10.02
 126.4, 9.8
 126.5, 9.65
 126.6, 9.54
 126.7, 9.25
 126.8, 9.03
 126.9, 8.86
 127, 8.64
 127.1, 8.56
 127.2, 8.56
 127.3, 8.52
 127.4, 8.41
 127.5, 8.27
 127.6, 8.14
 127.7, 8.04
 127.8, 8.03
 127.9, 7.89
 128, 7.96
 128.1, 7.92
 128.2, 7.83
 128.3, 7.6
 128.4, 7.54
 128.5, 7.4
 128.6, 7.26
 128.7, 7.36
 128.8, 7.16
 128.9, 6.93
 129, 6.82
 129.1, 6.82
 129.2, 6.89
 129.3, 7.06
 129.4, 7.05
 129.5, 7.06
 129.6, 7.07
 129.7, 6.98
 129.8, 6.93
 129.9, 6.96
 130, 7.08
 130.1, 7.18
 130.2, 7.21
 130.3, 7.07
 130.4, 6.94
 130.5, 6.92
 130.6, 6.95
 130.7, 6.94
 130.8, 6.91
 130.9, 6.75
 131, 6.63
 131.1, 6.68
 131.2, 6.91
 131.3, 7.09
 131.4, 6.96
 131.5, 6.87
 131.6, 6.58
 131.7, 6.29
 131.8, 6.07
 131.9, 5.9
 132, 5.53
 132.1, 5.44
 132.2, 5.39
 132.3, 5.33
 132.4, 5.17
 132.5, 5.02
 132.6, 4.7
 132.7, 4.58
 132.8, 4.49
 132.9, 4.61
 133, 4.45
 133.1, 4.15
 133.2, 3.93
 133.3, 3.86
 133.4, 3.77
 133.5, 3.66
 133.6, 3.52
 133.7, 3.42
 133.8, 3.36
 133.9, 3.33
 134, 3.32
 134.1, 3.11
 134.2, 2.8
 134.3, 2.72
 134.4, 2.97
 134.5, 3.56
 134.6, 4.05
 134.7, 4.16
 134.8, 4.07
 134.9, 3.87
 135, 3.69
 135.1, 3.57
 135.2, 3.69
 135.3, 3.66
 135.4, 3.81
 135.5, 4
 135.6, 3.91
 135.7, 3.79
 135.8, 3.84
 135.9, 3.58
 136, 3.27
 136.1, 2.96
 136.2, 2.71
 136.3, 2.32
 136.4, 2.36
 136.5, 2.48
 136.6, 2.6
 136.7, 2.7
 136.8, 2.69
 136.9, 2.52
 137, 2.28
 137.1, 2.21
 137.2, 2.34
 137.3, 2.5
 137.4, 2.84
 137.5, 2.94
 137.6, 2.98
 137.7, 2.95
 137.8, 2.82
 137.9, 2.69
 138, 2.76
 138.1, 2.76
 138.2, 2.67
 138.3, 2.76
 138.4, 2.58
 138.5, 2.47
 138.6, 2.26
 138.7, 2.08
 138.8, 2.04
 138.9, 2.12
 139, 2.14
 139.1, 2.04
 139.2, 2.04
 139.3, 2.05
 139.4, 2.32
 139.5, 2.46
 139.6, 2.49
 139.7, 2.52
 139.8, 2.53
 139.9, 2.58
 140, 2.65
 140.1, 2.81
 140.2, 3
 140.3, 3.04
 140.4, 3.02
 140.5, 2.94
 140.6, 2.78
 140.7, 2.58
 140.8, 2.53
 140.9, 2.63
 141, 2.72
 141.1, 2.66
 141.2, 2.69
 141.3, 2.55
 141.4, 2.41
 141.5, 2.3
 141.6, 2.16
 141.7, 2.03
 141.8, 1.9
 141.9, 1.76
 142, 1.51
 142.1, 1.53
 142.2, 1.55
 142.3, 1.45
 142.4, 1.24
 142.5, 0.94
 142.6, 0.78
 142.7, 0.83
 142.8, 0.91
 142.9, 0.92
 143, 0.97
 143.1, 0.96
 143.2, 0.94
 143.3, 0.85
 143.4, 0.8
 143.5, 0.74
 143.6, 0.63
 143.7, 0.6
 143.8, 0.52
 143.9, 0.39
 144, 0.39
 144.1, 0.25
 144.2, 0.1
 144.3, -0.06
 144.4, -0.13
 144.5, -0.04
 144.6, 0.05
 144.7, -0.07
 144.8, -0.13
 144.9, -0.1
 145, 0.09
 145.1, 0.01
 145.2, -0.13
 145.3, -0.34
 145.4, -0.45
 145.5, -0.53
 145.6, -0.56
 145.7, -0.64
 145.8, -0.62
 145.9, -0.53
 146, -0.45
 146.1, -0.47
 146.2, -0.54
 146.3, -0.51
 146.4, -0.29
 146.5, -0.12
 146.6, -0.11
 146.7, -0.22
 146.8, -0.2
 146.9, -0.17
 147, -0.23
 147.1, -0.22
 147.2, -0.34
 147.3, -0.4
 147.4, -0.44
 147.5, -0.46
 147.6, -0.55
 147.7, -0.69
 147.8, -0.89
 147.9, -1.06
 148, -1.11
 148.1, -1.1
 148.2, -1.21
 148.3, -1.29
 148.4, -1.45
 148.5, -1.66
 148.6, -1.68
 148.7, -1.69
 148.8, -1.67
 148.9, -1.73
 149, -1.73
 149.1, -1.72
 149.2, -1.66
 149.3, -1.52
 149.4, -1.48
 149.5, -1.52
 149.6, -1.52
 149.7, -1.56
 149.8, -1.45
 149.9, -1.48
 150, -1.46
 150.1, -1.43
 150.2, -1.35
 150.3, -1.19
 150.4, -1.16
 150.5, -1.12
 150.6, -1
 150.7, -0.98
 150.8, -0.94
 150.9, -0.84
 151, -0.75
 151.1, -0.61
 151.2, -0.48
 151.3, -0.37
 151.4, -0.22
 151.5, -0.13
 151.6, -0.15
 151.7, -0.21
 151.8, -0.17
 151.9, -0.06
 152, -0.03
 152.1, 0
 152.2, 0.35
 152.3, 0.54
 152.4, 0.54
 152.5, 0.52
 152.6, 0.69
 152.7, 0.7
 152.8, 0.79
 152.9, 0.9
 153, 0.99
 153.1, 0.87
 153.2, 0.89
 153.3, 1.05
 153.4, 1.13
 153.5, 1.25
 153.6, 1.36
 153.7, 1.49
 153.8, 1.58
 153.9, 1.71
 154, 1.86
 154.1, 1.95
 154.2, 1.88
 154.3, 1.76
 154.4, 1.77
 154.5, 1.75
 154.6, 1.77
 154.7, 1.99
 154.8, 2.04
 154.9, 2.09
 155, 2.04
 155.1, 2.11
 155.2, 2.17
 155.3, 2.22
 155.4, 2.28
 155.5, 2.29
 155.6, 2.25
 155.7, 2.39
 155.8, 2.49
 155.9, 2.48
 156, 2.34
 156.1, 2.46
 156.2, 2.76
 156.3, 2.92
 156.4, 3
 156.5, 2.92
 156.6, 2.98
 156.7, 3.04
 156.8, 3.15
 156.9, 3.09
 157, 3.05
 157.1, 3.03
 157.2, 3.11
 157.3, 3.06
 157.4, 2.94
 157.5, 2.78
 157.6, 2.75
 157.7, 2.72
 157.8, 2.72
 157.9, 2.73
 158, 2.91
 158.1, 3.07
 158.2, 3.15
 158.3, 3.12
 158.4, 3.12
 158.5, 3.05
 158.6, 3.07
 158.7, 3.18
 158.8, 3.27
 158.9, 3.31
 159, 3.3
 159.1, 3.26
 159.2, 3.19
 159.3, 3.12
 159.4, 3.09
 159.5, 2.99
 159.6, 2.89
 159.7, 2.81
 159.8, 2.85
 159.9, 2.77
 160, 2.59
 160.1, 2.61
 160.2, 2.62
 160.3, 2.62
 160.4, 2.57
 160.5, 2.45
 160.6, 2.19
 160.7, 2.04
 160.8, 2.01
 160.9, 2.02
 161, 1.92
 161.1, 1.8
 161.2, 1.8
 161.3, 1.74
 161.4, 1.64
 161.5, 1.68
 161.6, 1.5
 161.7, 1.37
 161.8, 1.21
 161.9, 1.04
 162, 1.06
 162.1, 1.09
 162.2, 1.01
 162.3, 0.99
 162.4, 0.87
 162.5, 0.69
 162.6, 0.44
 162.7, 0.37
 162.8, 0.35
 162.9, 0.34
 163, 0.23
 163.1, 0.04
 163.2, -0.2
 163.3, -0.3
 163.4, -0.33
 163.5, -0.26
 163.6, -0.26
 163.7, -0.48
 163.8, -0.74
 163.9, -0.81
 164, -0.79
 164.1, -0.88
 164.2, -0.89
 164.3, -0.95
 164.4, -1.08
 164.5, -1.26
 164.6, -1.36
 164.7, -1.36
 164.8, -1.46
 164.9, -1.46
 165, -1.63
 165.1, -1.76
 165.2, -1.9
 165.3, -2.03
 165.4, -2.13
 165.5, -2.34
 165.6, -2.47
 165.7, -2.43
 165.8, -2.49
 165.9, -2.63
 166, -2.6
 166.1, -2.66
 166.2, -2.79
 166.3, -2.73
 166.4, -2.72
 166.5, -2.78
 166.6, -2.92
 166.7, -2.85
 166.8, -2.83
 166.9, -2.93
 167, -2.99
 167.1, -2.93
 167.2, -2.82
 167.3, -2.8
 167.4, -2.92
 167.5, -3.07
 167.6, -3.16
 167.7, -3.31
 167.8, -3.37
 167.9, -3.35
 168, -3.18
 168.1, -3.08
 168.2, -3.06
 168.3, -2.95
 168.4, -2.88
 168.5, -2.87
 168.6, -2.8
 168.7, -2.6
 168.8, -2.42
 168.9, -2.32
 169, -2.31
 169.1, -2.18
 169.2, -2.04
 169.3, -1.88
 169.4, -1.72
 169.5, -1.53
 169.6, -1.44
 169.7, -1.4
 169.8, -1.42
 169.9, -1.37
 170, -1.36
 170.1, -1.25
 170.2, -1.2
 170.3, -1.3
 170.4, -1.24
 170.5, -1.1
 170.6, -0.9
 170.7, -0.81
 170.8, -0.75
 170.9, -0.65
 171, -0.51
 171.1, -0.6
 171.2, -0.62
 171.3, -0.64
 171.4, -0.57
 171.5, -0.58
 171.6, -0.55
 171.7, -0.55
 171.8, -0.42
 171.9, -0.36
 172, -0.26
 172.1, -0.18
 172.2, -0.17
 172.3, -0.21
 172.4, -0.34
 172.5, -0.25
 172.6, -0.14
 172.7, 0
 172.8, 0.24
 172.9, 0.59
 173, 0.89
 173.1, 1.11
 173.2, 1.26
 173.3, 1.34
 173.4, 1.56
 173.5, 1.75
 173.6, 1.83
 173.7, 2.02
 173.8, 2.25
 173.9, 2.44
 174, 2.51
 174.1, 2.7
 174.2, 2.85
 174.3, 2.88
 174.4, 2.67
 174.5, 2.47
 174.6, 2.45
 174.7, 2.75
 174.8, 3
 174.9, 3.19
 175, 3.31
 175.1, 3.38
 175.2, 3.57
 175.3, 3.74
 175.4, 3.91
 175.5, 3.9
 175.6, 3.99
 175.7, 4.03
 175.8, 4.14
 175.9, 4.19
 176, 4.28
 176.1, 4.27
 176.2, 4.34
 176.3, 4.34
 176.4, 4.59
 176.5, 4.79
 176.6, 4.94
 176.7, 5.02
 176.8, 5.13
 176.9, 5.25
 177, 5.29
 177.1, 5.36
 177.2, 5.49
 177.3, 5.49
 177.4, 5.61
 177.5, 5.8
 177.6, 5.9
 177.7, 5.87
 177.8, 5.93
 177.9, 5.93
 178, 6.18
 178.1, 6.17
 178.2, 6.28
 178.3, 6.29
 178.4, 6.2
 178.5, 6.21
 178.6, 6.2
 178.7, 6.06
 178.8, 6.01
 178.9, 6.06
 179, 6.12
 179.1, 6.14
 179.2, 6.19
 179.3, 6.19
 179.4, 6.41
 179.5, 6.66
 179.6, 6.81
 179.7, 6.95
 179.8, 7.02
 179.9, 6.99
 180, 6.92
 180.1, 7.22
 180.2, 7.32
 180.3, 7.46
 180.4, 7.47
 180.5, 7.56
 180.6, 7.7
 180.7, 7.85
 180.8, 7.8
 180.9, 7.77
 181, 7.8
 181.1, 7.88
 181.2, 7.93
 181.3, 7.93
 181.4, 7.88
 181.5, 7.93
 181.6, 8.02
 181.7, 8.17
 181.8, 8.24
 181.9, 8.44
 182, 8.58
 182.1, 8.68
 182.2, 8.82
 182.3, 8.95
 182.4, 9.12
 182.5, 9.24
 182.6, 9.41
 182.7, 9.47
 182.8, 10.29
 182.9, 10.4
 183, 9.83
 183.1, 10.01
 183.2, 10.24
 183.3, 10.24
 183.4, 10.1
 183.5, 9.97
 183.6, 10.09
 183.7, 10.36
 183.8, 10.77
 183.9, 11.17
 184, 11.48
 184.1, 11.8
 184.2, 12
 184.3, 12.13
 184.4, 12.13
 184.5, 12.22
 184.6, 12.27
 184.7, 12.35
 184.8, 12.44
 184.9, 12.46
 185, 12.56
 185.1, 12.68
 185.2, 12.8
 185.3, 12.85
 185.4, 12.72
 185.5, 12.85
 185.6, 12.83
 185.7, 12.99
 185.8, 13.04
 185.9, 13.21
 186, 13.26
 186.1, 13.38
 186.2, 13.43
 186.3, 13.54
 186.4, 13.36
 186.5, 13.25
 186.6, 13.36
 186.7, 13.48
 186.8, 13.67
 186.9, 13.79
 187, 13.85
 187.1, 13.91
 187.2, 13.97
 187.3, 14
 187.4, 14.09
 187.5, 14.1
 187.6, 14.21
 187.7, 14.18
 187.8, 14.23
 187.9, 14.18
 188, 14.25
 188.1, 14.42
 188.2, 14.59
 188.3, 14.69
 188.4, 14.73
 188.5, 14.8
 188.6, 14.89
 188.7, 14.83
 188.8, 14.83
 188.9, 14.99
 189, 15.23
 189.1, 15.53
 189.2, 15.71
 189.3, 15.94
 189.4, 15.99
 189.5, 16.15
 189.6, 16.26
 189.7, 16.51
 189.8, 16.73
 189.9, 16.95
 190, 17.11
 190.1, 17.18
 190.2, 17.19
 190.3, 17.29
 190.4, 17.45
 190.5, 17.54
 190.6, 17.71
 190.7, 17.87
 190.8, 17.98
 190.9, 18.01
 191, 18.14
 191.1, 18.42
 191.2, 18.48
 191.3, 18.55
 191.4, 18.73
 191.5, 18.95
 191.6, 19.01
 191.7, 19.16
 191.8, 19.36
 191.9, 19.51
 192, 19.72
 192.1, 19.8
 192.2, 19.92
 192.3, 20
 192.4, 20.16
 192.5, 20.38
 192.6, 20.49
 192.7, 20.65
 192.8, 20.72
 192.9, 20.62
 193, 20.49
 193.1, 20.41
 193.2, 20.33
 193.3, 19.99
 193.4, 19.69
 193.5, 19.53
 193.6, 19.43
 193.7, 19.28
 193.8, 19.1
 193.9, 18.8
 194, 18.58
 194.1, 18.52
 194.2, 18.55
 194.3, 18.55
 194.4, 18.44
 194.5, 18.41
 194.6, 18.3
 194.7, 18.13
 194.8, 17.85
 194.9, 17.63
 195, 17.51
 195.1, 17.29
 195.2, 17.15
 195.3, 17.11
 195.4, 17.08
 195.5, 16.98
 195.6, 16.72
 195.7, 16.43
 195.8, 16.41
 195.9, 16.61
 196, 16.71
 196.1, 16.75
 196.2, 16.91
 196.3, 17.02
 196.4, 16.95
 196.5, 16.79
 196.6, 16.51
 196.7, 16.17
 196.8, 15.89
 196.9, 15.71
 197, 15.44
 197.1, 15.16
 197.2, 14.99
 197.3, 14.96
 197.4, 14.84
 197.5, 14.73
 197.6, 14.57
 197.7, 14.46
 197.8, 14.31
 197.9, 14.29
 198, 14.18
 198.1, 14.11
 198.2, 14.02
 198.3, 13.95
 198.4, 13.82
 198.5, 13.59
 198.6, 13.49
 198.7, 13.47
 198.8, 13.46
 198.9, 13.35
 199, 13.03
 199.1, 12.8
 199.2, 12.56
 199.3, 12.36
 199.4, 12.21
 199.5, 12.02
 199.6, 11.68
 199.7, 11.46
 199.8, 11.23
 199.9, 10.97
 200, 10.76
 200.1, 10.55
 200.2, 10.51
 200.3, 10.43
 200.4, 10.19
 200.5, 10
 200.6, 9.89
 200.7, 9.85
 200.8, 9.64
 200.9, 9.47
 201, 9.29
 201.1, 9.22
 201.2, 9.13
 201.3, 9
 201.4, 8.95
 201.5, 8.81
 201.6, 8.55
 201.7, 8.48
 201.8, 8.53
 201.9, 8.43
 202, 8.26
 202.1, 8.06
 202.2, 7.75
 202.3, 7.56
 202.4, 7.48
 202.5, 7.4
 202.6, 7.21
 202.7, 6.94
 202.8, 6.83
 202.9, 6.73
 203, 6.56
 203.1, 6.42
 203.2, 6.4
 203.3, 6.31
 203.4, 6.16
 203.5, 5.99
 203.6, 5.8
 203.7, 5.62
 203.8, 5.51
 203.9, 5.38
 204, 5.1
 204.1, 4.84
 204.2, 4.78
 204.3, 4.51
 204.4, 4.27
 204.5, 3.86
 204.6, 3.5
 204.7, 3.17
 204.8, 2.87
 204.9, 2.86
 205, 2.82
 205.1, 2.71
 205.2, 2.46
 205.3, 2.31
 205.4, 2.27
 205.5, 2.29
 205.6, 2.18
 205.7, 1.96
 205.8, 1.89
 205.9, 1.78
 206, 1.78
 206.1, 1.7
 206.2, 1.56
 206.3, 1.41
 206.4, 1.34
 206.5, 1.33
 206.6, 1.34
 206.7, 1.32
 206.8, 1.33
 206.9, 1.26
 207, 1.21
 207.1, 1.21
 207.2, 1.28
 207.3, 1.27
 207.4, 1.24
 207.5, 1.31
 207.6, 1.19
 207.7, 1.07
 207.8, 0.88
 207.9, 0.87
 208, 0.8
 208.1, 0.8
 208.2, 0.87
 208.3, 0.94
 208.4, 1.1
 208.5, 1.04
 208.6, 0.95
 208.7, 0.69
 208.8, 0.62
 208.9, 0.53
 209, 0.43
 209.1, 0.46
 209.2, 0.68
 209.3, 0.74
 209.4, 0.94
 209.5, 1.21
 209.6, 1.48
 209.7, 1.58
 209.8, 1.38
 209.9, 1.19
 210, 1.04
 210.1, 0.85
 210.2, 0.7
 210.3, 0.61
 210.4, 0.33
 210.5, 0.18
 210.6, 0.2
 210.7, 0.13
 210.8, 0.01
 210.9, -0.03
 211, -0.16
 211.1, -0.32
 211.2, -0.37
 211.3, -0.3
 211.4, -0.29
 211.5, -0.35
 211.6, -0.47
 211.7, -0.63
 211.8, -0.77
 211.9, -0.95
 212, -1.02
 212.1, -1.12
 212.2, -1.37
 212.3, -1.8
 212.4, -2.26
 212.5, -2.71
 212.6, -2.78
 212.7, -2.43
 212.8, -2.06
 212.9, -2.02
 213, -2.28
 213.1, -2.74
 213.2, -3.11
 213.3, -3.45
 213.4, -3.75
 213.5, -4.01
 213.6, -4.15
 213.7, -4.17
 213.8, -4.31
 213.9, -4.34
 214, -4.35
 214.1, -4.59
 214.2, -4.78
 214.3, -4.9
 214.4, -4.89
 214.5, -4.93
 214.6, -4.93
 214.7, -4.88
 214.8, -4.77
 214.9, -4.82
 215, -4.93
 215.1, -5.05
 215.2, -5.02
 215.3, -4.87
 215.4, -4.74
 215.5, -4.56
 215.6, -4.44
 215.7, -4.54
 215.8, -4.66
 215.9, -4.73
 216, -4.67
 216.1, -4.68
 216.2, -4.61
 216.3, -4.4
 216.4, -4.26
 216.5, -4.29
 216.6, -4.4
 216.7, -4.45
 216.8, -4.47
 216.9, -4.39
 217, -4.38
 217.1, -4.36
 217.2, -4.16
 217.3, -4.1
 217.4, -3.97
 217.5, -3.94
 217.6, -3.94
 217.7, -4.09
 217.8, -4.23
 217.9, -4.37
 218, -4.5
 218.1, -4.76
 218.2, -4.83
 218.3, -4.96
 218.4, -4.99
 218.5, -5.04
 218.6, -5.03
 218.7, -5.15
 218.8, -5.32
 218.9, -5.44
 219, -5.54
 219.1, -5.62
 219.2, -5.86
 219.3, -5.91
 219.4, -6.05
 219.5, -6.17
 219.6, -6.31
 219.7, -6.37
 219.8, -6.44
 219.9, -6.37
 220, -6.64
 220.1, -6.79
 220.2, -6.88
 220.3, -6.76
 220.4, -6.59
 220.5, -6.38
 220.6, -6.44
 220.7, -6.66
 220.8, -6.86
 220.9, -7.04
 221, -7.09
 221.1, -7.12
 221.2, -7.17
 221.3, -7.23
 221.4, -7.39
 221.5, -7.44
 221.6, -7.52
 221.7, -7.62
 221.8, -7.59
 221.9, -7.58
 222, -7.72
 222.1, -7.77
 222.2, -7.68
 222.3, -7.54
 222.4, -7.42
 222.5, -7.69
 222.6, -7.83
 222.7, -7.97
 222.8, -8.08
 222.9, -8.15
 223, -8.32
 223.1, -8.44
 223.2, -8.45
 223.3, -8.46
 223.4, -8.54
 223.5, -8.68
 223.6, -8.55
 223.7, -8.6
 223.8, -8.67
 223.9, -8.91
 224, -9
 224.1, -8.96
 224.2, -8.69
 224.3, -8.33
 224.4, -7.99
 224.5, -8
 224.6, -7.92
 224.7, -7.5
 224.8, -6.77
 224.9, -6.25
 225, -5.88
 225.1, -5.68
 225.2, -5.54
 225.3, -5.39
 225.4, -5.31
 225.5, -5.17
 225.6, -4.96
 225.7, -4.95
 225.8, -4.97
 225.9, -4.98
 226, -4.95
 226.1, -5.11
 226.2, -5.29
 226.3, -5.27
 226.4, -5.3
 226.5, -5.09
 226.6, -4.63
 226.7, -4.14
 226.8, -3.95
 226.9, -3.88
 227, -3.87
 227.1, -3.79
 227.2, -3.74
 227.3, -3.63
 227.4, -3.34
 227.5, -2.81
 227.6, -2.17
 227.7, -1.8
 227.8, -1.6
 227.9, -1.24
 228, -0.59
 228.1, -0.15
 228.2, 0.09
 228.3, 0.05
 228.4, 0.04
 228.5, 0.12
 228.6, 0.31
 228.7, 0.42
 228.8, 0.54
 228.9, 0.46
 229, 0.65
 229.1, 0.59
 229.2, 0.53
 229.3, 0.53
 229.4, 0.54
 229.5, 0.56
 229.6, 0.59
 229.7, 0.72
 229.8, 1.04
 229.9, 1.16
 230, 1.3
 230.1, 1.53
 230.2, 1.94
 230.3, 2.17
 230.4, 2.04
 230.5, 2.08
 230.6, 2.34
 230.7, 2.68
 230.8, 2.81
 230.9, 2.97
 231, 3.15
 231.1, 3.54
 231.2, 3.88
 231.3, 4.09
 231.4, 4.09
 231.5, 4.07
 231.6, 4.21
 231.7, 4.39
 231.8, 4.48
 231.9, 4.48
 232, 4.44
 232.1, 4.43
 232.2, 4.47
 232.3, 4.54
 232.4, 4.42
 232.5, 4.61
 232.6, 4.84
 232.7, 5.01
 232.8, 5.05
 232.9, 5.26
 233, 5.41
 233.1, 5.48
 233.2, 5.59
 233.3, 5.77
 233.4, 5.98
 233.5, 6.22
 233.6, 6.43
 233.7, 6.64
 233.8, 6.78
 233.9, 7.21
 234, 7.54
 234.1, 7.7
 234.2, 7.77
 234.3, 7.99
 234.4, 8.21
 234.5, 8.09
 234.6, 8.02
 234.7, 7.95
 234.8, 7.99
 234.9, 8.06
 235, 8.24
 235.1, 8.24
 235.2, 8.17
 235.3, 8.14
 235.4, 8.25
 235.5, 8.25
 235.6, 8.23
 235.7, 8.23
 235.8, 8.07
 235.9, 7.85
 236, 7.81
 236.1, 7.84
 236.2, 7.76
 236.3, 7.62
 236.4, 7.65
 236.5, 7.81
 236.6, 7.92
 236.7, 7.71
 236.8, 7.52
 236.9, 7.25
 237, 7.29
 237.1, 7.18
 237.2, 7.13
 237.3, 7.13
 237.4, 7.21
 237.5, 7.3
 237.6, 7.34
 237.7, 7.39
 237.8, 7.43
 237.9, 7.36
 238, 7.32
 238.1, 7.1
 238.2, 6.86
 238.3, 6.72
 238.4, 6.73
 238.5, 6.86
 238.6, 6.66
 238.7, 6.49
 238.8, 6.41
 238.9, 6.56
 239, 6.69
 239.1, 6.77
 239.2, 6.84
 239.3, 6.84
 239.4, 6.85
 239.5, 6.9
 239.6, 6.93
 239.7, 6.97
 239.8, 6.93
 239.9, 6.89
 240, 6.88
 240.1, 6.86
 240.2, 6.74
 240.3, 6.57
 240.4, 6.43
 240.5, 6.3
 240.6, 6.21
 240.7, 6.15
 240.8, 6.1
 240.9, 5.92
 241, 5.77
 241.1, 5.69
 241.2, 5.55
 241.3, 5.36
 241.4, 5.24
 241.5, 5.21
 241.6, 5.06
 241.7, 4.73
 241.8, 4.47
 241.9, 4.29
 242, 4.16
 242.1, 3.99
 242.2, 3.82
 242.3, 3.78
 242.4, 3.63
 242.5, 3.52
 242.6, 3.39
 242.7, 3.26
 242.8, 3.25
 242.9, 3.33
 243, 3.27
 243.1, 3.27
 243.2, 3.51
 243.3, 3.76
 243.4, 3.98
 243.5, 4.28
 243.6, 4.56
 243.7, 4.91
 243.8, 5.18
 243.9, 5.43
 244, 5.65
 244.1, 5.8
 244.2, 5.91
 244.3, 6.08
 244.4, 6.26
 244.5, 6.39
 244.6, 6.51
 244.7, 6.65
 244.8, 6.79
 244.9, 6.99
 245, 7.1
 245.1, 7.26
 245.2, 7.31
 245.3, 7.38
 245.4, 7.6
 245.5, 7.78
 245.6, 8.08
 245.7, 8.26
 245.8, 8.5
 245.9, 8.56
 246, 8.54
 246.1, 8.37
 246.2, 8.62
 246.3, 8.94
 246.4, 9.2
 246.5, 9.45
 246.6, 9.75
 246.7, 9.92
 246.8, 10.11
 246.9, 10.34
 247, 10.55
 247.1, 10.75
 247.2, 10.82
 247.3, 10.9
 247.4, 10.9
 247.5, 10.97
 247.6, 10.99
 247.7, 11.07
 247.8, 11.07
 247.9, 11.14
 248, 11.14
 248.1, 11.06
 248.2, 10.93
 248.3, 10.88
 248.4, 10.91
 248.5, 10.91
 248.6, 10.98
 248.7, 10.99
 248.8, 11.05
 248.9, 11.23
 249, 11.32
 249.1, 11.39
 249.2, 11.36
 249.3, 11.23
 249.4, 11.22
 249.5, 11.29
 249.6, 11.45
 249.7, 11.7
 249.8, 11.85
 249.9, 11.93
 250, 11.98
 250.1, 11.92
 250.2, 11.84
 250.3, 11.87
 250.4, 12
 250.5, 12.01
 250.6, 11.95
 250.7, 11.81
 250.8, 11.51
 250.9, 11.52
 251, 11.49
 251.1, 11.46
 251.2, 11.17
 251.3, 11.13
 251.4, 11.24
 251.5, 11.34
 251.6, 11.35
 251.7, 11.37
 251.8, 11.43
 251.9, 11.3
 252, 11.21
 252.1, 11.18
 252.2, 11.28
 252.3, 11.15
 252.4, 11.21
 252.5, 11.19
 252.6, 11.19
 252.7, 11.22
 252.8, 11.13
 252.9, 11.02
 253, 10.96
 253.1, 11.04
 253.2, 11.01
 253.3, 11
 253.4, 10.97
 253.5, 10.6
 253.6, 10.23
 253.7, 10.21
 253.8, 10.38
 253.9, 10.37
 254, 10.4
 254.1, 10.37
 254.2, 10.33
 254.3, 10.17
 254.4, 10.02
 254.5, 10.02
 254.6, 10.11
 254.7, 9.97
 254.8, 10.03
 254.9, 9.9
 255, 9.83
 255.1, 9.74
 255.2, 9.77
 255.3, 9.84
 255.4, 9.77
 255.5, 9.64
 255.6, 9.62
 255.7, 9.49
 255.8, 9.26
 255.9, 9.1
 256, 8.83
 256.1, 8.77
 256.2, 8.66
 256.3, 8.67
 256.4, 8.64
 256.5, 8.67
 256.6, 8.65
 256.7, 8.62
 256.8, 8.59
 256.9, 8.52
 257, 8.45
 257.1, 8.15
 257.2, 7.9
 257.3, 7.68
 257.4, 7.44
 257.5, 7.12
 257.6, 6.87
 257.7, 6.61
 257.8, 6.3
 257.9, 5.97
 258, 5.89
 258.1, 5.76
 258.2, 5.68
 258.3, 5.55
 258.4, 5.45
 258.5, 5.24
 258.6, 4.97
 258.7, 4.86
 258.8, 4.6
 258.9, 4.38
 259, 4.12
 259.1, 3.82
 259.2, 3.4
 259.3, 3.18
 259.4, 2.9
 259.5, 2.67
 259.6, 2.33
 259.7, 1.81
 259.8, 1.33
 259.9, 1.05
 260, 0.69
 260.1, 0.43
 260.2, 0.23
 260.3, 0.15
 260.4, 0
 260.5, -0.37
 260.6, -0.61
 260.7, -0.72
 260.8, -0.76
 260.9, -0.98
 261, -1.22
 261.1, -1.42
 261.2, -1.65
 261.3, -1.89
 261.4, -2.13
 261.5, -2.25
 261.6, -2.41
 261.7, -2.48
 261.8, -2.58
 261.9, -2.62
 262, -2.7
 262.1, -2.95
 262.2, -3.2
 262.3, -3.47
 262.4, -3.79
 262.5, -3.92
 262.6, -4.15
 262.7, -4.13
 262.8, -4.29
 262.9, -4.43
 263, -4.56
 263.1, -4.73
 263.2, -4.87
 263.3, -4.93
 263.4, -4.85
 263.5, -4.88
 263.6, -5.07
 263.7, -5.47
 263.8, -5.89
 263.9, -6.15
 264, -6.36
 264.1, -6.48
 264.2, -6.72
 264.3, -7.06
 264.4, -7.36
 264.5, -7.67
 264.6, -7.85
 264.7, -8.23
 264.8, -8.44
 264.9, -8.74
 265, -8.82
 265.1, -8.85
 265.2, -9.06
 265.3, -9.27
 265.4, -9.63
 265.5, -9.84
 265.6, -10.18
 265.7, -10.37
 265.8, -10.7
 265.9, -10.86
 266, -11
 266.1, -11.22
 266.2, -11.51
 266.3, -11.89
 266.4, -12.38
 266.5, -12.8
 266.6, -13.2
 266.7, -13.49
 266.8, -13.81
 266.9, -14.08
 267, -14.42
 267.1, -14.69
 267.2, -15.02
 267.3, -15.35
 267.4, -15.73
 267.5, -16.13
 267.6, -16.45
 267.7, -16.66
 267.8, -16.8
 267.9, -17.15
 268, -17.6
 268.1, -17.97
 268.2, -18.32
 268.3, -18.78
 268.4, -19.06
 268.5, -19.15
 268.6, -19.26
 268.7, -19.42
 268.8, -19.54
 268.9, -19.76
 269, -20.1
 269.1, -20.23
 269.2, -20.25
 269.3, -20.54
 269.4, -20.91
 269.5, -21.13
 269.6, -21.34
 269.7, -21.63
 269.8, -21.76
 269.9, -21.89
 270, -22.06
 270.1, -22.37
 270.2, -22.54
 270.3, -22.83
 270.4, -23.03
 270.5, -23.24
 270.6, -23.51
 270.7, -23.9
 270.8, -24.08
 270.9, -24.1
 271, -24.19
 271.1, -24.34
 271.2, -24.44
 271.3, -24.62
 271.4, -24.9
 271.5, -25.1
 271.6, -25.05
 271.7, -25.06
 271.8, -25.28
 271.9, -25.53
 272, -25.6
 272.1, -25.61
 272.2, -25.71
 272.3, -25.8
 272.4, -25.97
 272.5, -26.07
 272.6, -26.1
 272.7, -26.17
 272.8, -26.33
 272.9, -26.43
 273, -26.65
 273.1, -26.76
 273.2, -26.79
 273.3, -26.82
 273.4, -26.9
 273.5, -27.02
 273.6, -27.16
 273.7, -27.28
 273.8, -27.39
 273.9, -27.49
 274, -27.67
 274.1, -27.86
 274.2, -27.89
 274.3, -27.86
 274.4, -27.91
 274.5, -28.04
 274.6, -28.09
 274.7, -28
 274.8, -27.92
 274.9, -27.93
 275, -28.03
 275.1, -28.02
 275.2, -27.98
 275.3, -28.07
 275.4, -28.18
 275.5, -28.24
 275.6, -28.29
 275.7, -28.34
 275.8, -28.39
 275.9, -28.51
 276, -28.62
 276.1, -28.66
 276.2, -28.79
 276.3, -28.85
 276.4, -28.84
 276.5, -28.75
 276.6, -28.57
 276.7, -28.42
 276.8, -28.26
 276.9, -28.21
 277, -28.2
 277.1, -28.18
 277.2, -28.21
 277.3, -28.1
 277.4, -28.05
 277.5, -28.19
 277.6, -28.32
 277.7, -28.44
 277.8, -28.56
 277.9, -28.88
 278, -29.05
 278.1, -29.1
 278.2, -29
 278.3, -28.94
 278.4, -28.83
 278.5, -28.68
 278.6, -28.54
 278.7, -28.27
 278.8, -28.1
 278.9, -27.83
 279, -27.53
 279.1, -27.33
 279.2, -27.18
 279.3, -27.11
 279.4, -27.01
 279.5, -26.93
 279.6, -26.87
 279.7, -26.82
 279.8, -26.78
 279.9, -26.93
 280, -26.84
 280.1, -26.53
 280.2, -26.29
 280.3, -26.37
 280.4, -26.42
 280.5, -26.19
 280.6, -25.97
 280.7, -25.89
 280.8, -25.71
 280.9, -25.43
 281, -25.12
 281.1, -24.85
 281.2, -24.44
 281.3, -24.11
 281.4, -23.78
 281.5, -23.54
 281.6, -23.35
 281.7, -23.21
 281.8, -23.13
 281.9, -23.17
 282, -23.3
 282.1, -23.46
 282.2, -23.51
 282.3, -23.32
 282.4, -23.06
 282.5, -22.79
 282.6, -22.45
 282.7, -22.17
 282.8, -21.87
 282.9, -21.61
 283, -21.48
 283.1, -21.29
 283.2, -21.07
 283.3, -20.86
 283.4, -20.73
 283.5, -20.52
 283.6, -20.4
 283.7, -20.12
 283.8, -19.76
 283.9, -19.47
 284, -19.41
 284.1, -19.29
 284.2, -19.26
 284.3, -19.15
 284.4, -19.03
 284.5, -18.84
 284.6, -18.69
 284.7, -18.51
 284.8, -18.4
 284.9, -18.38
 285, -18.39
 285.1, -18.22
 285.2, -18.13
 285.3, -17.84
 285.4, -17.6
 285.5, -17.34
 285.6, -17.25
 285.7, -16.94
 285.8, -16.56
 285.9, -16.3
 286, -16.08
 286.1, -15.94
 286.2, -15.84
 286.3, -15.64
 286.4, -15.36
 286.5, -15.06
 286.6, -14.86
 286.7, -14.64
 286.8, -14.57
 286.9, -14.48
 287, -14.35
 287.1, -14.25
 287.2, -14.11
 287.3, -13.94
 287.4, -13.78
 287.5, -13.61
 287.6, -13.41
 287.7, -13.21
 287.8, -13.04
 287.9, -12.9
 288, -12.67
 288.1, -12.41
 288.2, -12.22
 288.3, -12.1
 288.4, -11.77
 288.5, -11.18
 288.6, -10.72
 288.7, -10.41
 288.8, -10.28
 288.9, -10.25
 289, -9.97
 289.1, -9.79
 289.2, -9.45
 289.3, -9.28
 289.4, -9.07
 289.5, -8.88
 289.6, -8.49
 289.7, -8.08
 289.8, -7.74
 289.9, -7.43
 290, -7.26
 290.1, -7.11
 290.2, -6.87
 290.3, -6.41
 290.4, -6.07
 290.5, -5.66
 290.6, -5.24
 290.7, -4.79
 290.8, -4.47
 290.9, -4.15
 291, -3.79
 291.1, -3.38
 291.2, -2.92
 291.3, -2.62
 291.4, -2.44
 291.5, -2.2
 291.6, -1.91
 291.7, -1.56
 291.8, -1.33
 291.9, -1.06
 292, -0.81
 292.1, -0.5
 292.2, -0.21
 292.3, -0.09
 292.4, 0.25
 292.5, 0.77
 292.6, 1.33
 292.7, 1.69
 292.8, 1.94
 292.9, 2.26
 293, 2.59
 293.1, 2.91
 293.2, 3.27
 293.3, 3.52
 293.4, 3.83
 293.5, 4.19
 293.6, 4.55
 293.7, 5.02
 293.8, 5.41
 293.9, 5.73
 294, 6.13
 294.1, 6.51
 294.2, 6.99
 294.3, 7.3
 294.4, 7.53
 294.5, 7.84
 294.6, 8.19
 294.7, 8.43
 294.8, 8.62
 294.9, 8.94
 295, 9.25
 295.1, 9.54
 295.2, 9.75
 295.3, 9.98
 295.4, 10.23
 295.5, 10.55
 295.6, 10.88
 295.7, 11.3
 295.8, 11.71
 295.9, 12.07
 296, 12.58
 296.1, 12.96
 296.2, 13.25
 296.3, 13.65
 296.4, 14
 296.5, 14.35
 296.6, 14.59
 296.7, 14.84
 296.8, 15.03
 296.9, 15.32
 297, 15.61
 297.1, 16.03
 298.1, 16.03
 298.2, -0.54
ENDTABLE
Z_PROFILE_GAIN(2)   1 ! Gain multiplied with calculated value to get elevation
                      ! increment
Z_PROFILE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get elevation increment
SSTART_Z_PROFILE(2) 0 ; m ! Offset subtracted from distance travelled
SSCALE_Z_PROFILE(2) 1 ! Scale factor divided into (distance travelled -
                      ! SSTART_Z_PROFILE)

!------------------------------------------------------------------------------------
! STATE VARIABLES (NEEDED FOR RESTART)
!------------------------------------------------------------------------------------
SV_ABS_ON_OFF_L1    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L1
SV_ABS_ON_OFF_L2    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L2
SV_ABS_ON_OFF_R1    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L1
SV_ABS_ON_OFF_R2    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L2
SV_AERO_ROAD_ID_1   1 ; - ! Road surface ID for tracked aero road point
SV_AERO_ROAD_STA_1 931.8610179 ; m ! Road path station for tracked aero road point
SV_AT_LOCKED        0 ; - ! Lock state of automatic transmission
SV_AVX   -0.116975909 ; deg/s ! ODE: Body-X roll rate of sprung-mass {AVx}
SV_AVX_A1 0.9224425146 ; deg/s ! ODE: Roll rate of axle 1
SV_AVX_A2 -0.4514472698 ; deg/s ! ODE: Roll rate of axle 2
SV_AVY   0.1014420813 ; deg/s ! ODE: Body-Y pitch rate of sprung-mass {AVy}
SV_AVY_L1 580.4310712 ; rpm ! ODE: Spin of wheel L1 {AVy_L1}
SV_AVY_L1_OLD 580.429021 ; rpm ! Spin of wheel L1 (previous time step)
SV_AVY_L2 589.6983994 ; rpm ! ODE: Spin of wheel L2 {AVy_L2}
SV_AVY_L2_OLD 589.6812596 ; rpm ! Spin of wheel L2 (previous time step)
SV_AVY_R1 580.4129879 ; rpm ! ODE: Spin of wheel R1 {AVy_R1}
SV_AVY_R1_OLD 580.4106777 ; rpm ! Spin of wheel R1 (previous time step)
SV_AVY_R2  589.269336 ; rpm ! ODE: Spin of wheel R2 {AVy_R2}
SV_AVY_R2_OLD 589.2514384 ; rpm ! Spin of wheel R2 (previous time step)
SV_AVZ  -0.0344436911 ; deg/s ! ODE: Body-Z yaw rate of sprung-mass {AVz}
SV_AV_CL            0 ; rpm ! Clutch relative spin
SV_AV_COL_CONTROL   0 ; deg/s ! ODE: Steering wheel angular rate
SV_AV_ENG 1910.567576 ; rpm ! ODE: Engine crankshaft spin {AV_Eng}
SV_AV_SHAFT_L_D2 589.6983994 ; rpm ! ODE: Diff2 Left (first) output shaft speed
SV_AV_SHAFT_R_D2 589.269336 ; rpm ! ODE: Diff2 Right (second) output shaft speed
SV_AV_SW 0.9793273322 ; deg/s ! ODE: Steering wheel angular rate {StrAV_SW}
SV_AV_TC  1910.567576 ; rpm ! ODE: Torque coupling output shaft spin
SV_AV_TR_OUT 2939.334733 ; rpm ! ODE: Transmission output shaft spin
SV_A_CONTROL        0 ; deg ! ODE: Str whl angle from driver model in torque control
SV_BETA -0.00327830524 ; deg ! Sideslip (ISO)
SV_BETA_RD -0.00327830524 ; deg ! Sideslip using road axes
SV_BRAKE_STATE      0 ; - ! Braking state, used for clutch control
SV_CL_2ND_DIFF_LOCKED_2 0 ; - ! 2nd Clutch lock state for 2nd drive axle diff
SV_CL_2ND_DIFF_SLIP_REF_2 0 ; deg ! 2nd Clutch ref. angle for 2nd drive axle diff
SV_CL_2ND_DIFF_SPIN_2 0 ; rpm ! 2nd Clutch rel. spin for 2nd drive axle diff
SV_CL_ACCEL_SHIFT   0 ; - ! Is clutch in auto control for low-speed accel?
SV_CL_AUTO_BRAKE    0 ; - ! Boolean: 1 if auto clutch for low-speed braking
SV_CL_AUTO_SHIFT    0 ; - ! Boolean: 1 if auto clutch for a gear shift
SV_CL_CON           0 ; - ! Transmission clutch control {ClutchTr}
SV_CL_DIFF_LOCKED_2 0 ; - ! Clutch lock state for 2nd drive axle diff
SV_CL_DIFF_SLIP_REF_2 0 ; deg ! Clutch ref. angle for 2nd drive axle diff
SV_CL_DIFF_SPIN_2 0.4298212143 ; rpm ! Clutch rel. spin for 2nd drive axle diff
SV_CL_LOCKED        1 ; - ! Clutch lockup state
SV_CL_PRESS         0 ; - ! Initial direction state for automatic clutch
SV_CL_TWIN_LOCKED_LR 0 ; - ! Lock state of LR twin clutch
SV_CL_TWIN_LOCKED_RR 0 ; - ! Lock state of RR twin clutch
SV_CL_TWIN_SPIN_LR  0 ; rpm ! Rel. spin of LR twin clutch
SV_CL_TWIN_SPIN_RR  0 ; rpm ! Rel. spin of RR twin clutch
SV_CMP_S_L1 63.79472012 ; mm ! Compression of ride spring L1
SV_CMP_S_L2 8.19588646 ; mm ! Compression of ride spring L2
SV_CMP_S_R1 64.17152484 ; mm ! Compression of ride spring R1
SV_CMP_S_R2 9.268467921 ; mm ! Compression of ride spring R2
SV_CMP_T_L1I 19.2399391 ; mm ! Tire L1i compression
SV_CMP_T_L1O        0 ; mm ! Tire L1o compression
SV_CMP_T_L2I 4.53305754 ; mm ! Tire L2i compression
SV_CMP_T_L2O 4.731784225 ; mm ! Tire L2o compression
SV_CMP_T_R1I 19.48832893 ; mm ! Tire R1i compression
SV_CMP_T_R1O        0 ; mm ! Tire R1o compression
SV_CMP_T_R2I 4.899069777 ; mm ! Tire R2i compression
SV_CMP_T_R2O 4.700342404 ; mm ! Tire R2o compression
SV_CONTACT_ID_L1I   1 ; - ! Road surface ID for tire contact {RdID_L1I}
SV_CONTACT_ID_L1O   1 ; - ! Road surface ID for tire contact {RdID_L1O}
SV_CONTACT_ID_L2I   1 ; - ! Road surface ID for tire contact {RdID_L2I}
SV_CONTACT_ID_L2O   1 ; - ! Road surface ID for tire contact {RdID_L2O}
SV_CONTACT_ID_R1I   1 ; - ! Road surface ID for tire contact {RdID_R1I}
SV_CONTACT_ID_R1O   1 ; - ! Road surface ID for tire contact {RdID_R1O}
SV_CONTACT_ID_R2I   1 ; - ! Road surface ID for tire contact {RdID_R2I}
SV_CONTACT_ID_R2O   1 ; - ! Road surface ID for tire contact {RdID_R2O}
SV_CONTACT_STA_L1I 934.3603351 ; m ! Road path station for tire contact {S_Rd_L1I}
SV_CONTACT_STA_L1O -1.124444346e-05 ; m ! Road path station for tire contact
                                    ! {S_Rd_L1O}
SV_CONTACT_STA_L2I 929.3599326 ; m ! Road path station for tire contact {S_Rd_L2I}
SV_CONTACT_STA_L2O 929.3599027 ; m ! Road path station for tire contact {S_Rd_L2O}
SV_CONTACT_STA_R1I 934.3607249 ; m ! Road path station for tire contact {S_Rd_R1I}
SV_CONTACT_STA_R1O -1.124444346e-05 ; m ! Road path station for tire contact
                                    ! {S_Rd_R1O}
SV_CONTACT_STA_R2I 929.3589498 ; m ! Road path station for tire contact {S_Rd_R2I}
SV_CONTACT_STA_R2O 929.3589793 ; m ! Road path station for tire contact {S_Rd_R2O}
SV_DRGEAR_CVT      -0 ; - ! Derivative of delayed CVT gear ratio
SV_DZDX_GND         0 ; - ! dZ/dX of ground at vehicle aero ref. pt
SV_DZDX_L1I 9.999996617e-05 ; - ! Ground X slope under tire L1i
SV_DZDX_L1O 9.999996617e-05 ; - ! Ground X slope under tire L1o
SV_DZDX_L2I -0.0004999999976 ; - ! Ground X slope under tire L2i
SV_DZDX_L2O -0.0004999999976 ; - ! Ground X slope under tire L2o
SV_DZDX_R1I 0.0005999999457 ; - ! Ground X slope under tire R1i
SV_DZDX_R1O 0.0005999999457 ; - ! Ground X slope under tire R1o
SV_DZDX_R2I -0.002699999987 ; - ! Ground X slope under tire R2i
SV_DZDX_R2O -0.002699999987 ; - ! Ground X slope under tire R2o
SV_DZDY_GND         0 ; - ! dZ/dY of ground at vehicle aero ref. pt
SV_DZDY_L1I -8.226136572e-08 ; - ! Ground Y slope under tire L1i
SV_DZDY_L1O -8.226136572e-08 ; - ! Ground Y slope under tire L1o
SV_DZDY_L2I -4.89724929e-08 ; - ! Ground Y slope under tire L2i
SV_DZDY_L2O -4.89724929e-08 ; - ! Ground Y slope under tire L2o
SV_DZDY_R1I 2.552686738e-07 ; - ! Ground Y slope under tire R1i
SV_DZDY_R1O 2.552686738e-07 ; - ! Ground Y slope under tire R1o
SV_DZDY_R2I -2.644514616e-07 ; - ! Ground Y slope under tire R2i
SV_DZDY_R2O -2.644514616e-07 ; - ! Ground Y slope under tire R2o
SV_D_ALPHA_L1I      0 ; - ! Delta Alpha (Fy 0-crossing), tire L1i
SV_D_ALPHA_L1O      0 ; - ! Delta Alpha (Fy 0-crossing), tire L1o
SV_D_ALPHA_L2I      0 ; - ! Delta Alpha (Fy 0-crossing), tire L2i
SV_D_ALPHA_L2O      0 ; - ! Delta Alpha (Fy 0-crossing), tire L2o
SV_D_ALPHA_MX_L1I   0 ; - ! Delta Alpha (Mx 0-crossing), tire L1i
SV_D_ALPHA_MX_L1O   0 ; - ! Delta Alpha (Mx 0-crossing), tire L1o
SV_D_ALPHA_MX_L2I   0 ; - ! Delta Alpha (Mx 0-crossing), tire L2i
SV_D_ALPHA_MX_L2O   0 ; - ! Delta Alpha (Mx 0-crossing), tire L2o
SV_D_ALPHA_MX_R1I   0 ; - ! Delta Alpha (Mx 0-crossing), tire R1i
SV_D_ALPHA_MX_R1O   0 ; - ! Delta Alpha (Mx 0-crossing), tire R1o
SV_D_ALPHA_MX_R2I   0 ; - ! Delta Alpha (Mx 0-crossing), tire R2i
SV_D_ALPHA_MX_R2O   0 ; - ! Delta Alpha (Mx 0-crossing), tire R2o
SV_D_ALPHA_R1I      0 ; - ! Delta Alpha (Fy 0-crossing), tire R1i
SV_D_ALPHA_R1O      0 ; - ! Delta Alpha (Fy 0-crossing), tire R1o
SV_D_ALPHA_R2I      0 ; - ! Delta Alpha (Fy 0-crossing), tire R2i
SV_D_ALPHA_R2O      0 ; - ! Delta Alpha (Fy 0-crossing), tire R2o
SV_D_CONI_L1I       0 ; - ! Delta Coni (Mz 0-crossing), tire L1i
SV_D_CONI_L1O       0 ; - ! Delta Coni (Mz 0-crossing), tire L1o
SV_D_CONI_L2I       0 ; - ! Delta Coni (Mz 0-crossing), tire L2i
SV_D_CONI_L2O       0 ; - ! Delta Coni (Mz 0-crossing), tire L2o
SV_D_CONI_R1I       0 ; - ! Delta Coni (Mz 0-crossing), tire R1i
SV_D_CONI_R1O       0 ; - ! Delta Coni (Mz 0-crossing), tire R1o
SV_D_CONI_R2I       0 ; - ! Delta Coni (Mz 0-crossing), tire R2i
SV_D_CONI_R2O       0 ; - ! Delta Coni (Mz 0-crossing), tire R2o
SV_D_KAPPA_L1I      0 ; - ! Delta Kappa (Fx 0-crossing), tire L1i
SV_D_KAPPA_L1O      0 ; - ! Delta Kappa (Fx 0-crossing), tire L1o
SV_D_KAPPA_L2I      0 ; - ! Delta Kappa (Fx 0-crossing), tire L2i
SV_D_KAPPA_L2O      0 ; - ! Delta Kappa (Fx 0-crossing), tire L2o
SV_D_KAPPA_R1I      0 ; - ! Delta Kappa (Fx 0-crossing), tire R1i
SV_D_KAPPA_R1O      0 ; - ! Delta Kappa (Fx 0-crossing), tire R1o
SV_D_KAPPA_R2I      0 ; - ! Delta Kappa (Fx 0-crossing), tire R2i
SV_D_KAPPA_R2O      0 ; - ! Delta Kappa (Fx 0-crossing), tire R2o
SV_ESC_STATE        0 ; - ! State of ESC engine torque control
SV_FBK              0 ; N ! ODE: Instant boost force (above input force)
SV_FBOOST           0 ; N ! ODE: Delayed boost force {F_boost}
SV_FS_L1  15745.60977 ; N ! Force from ride spring L1
SV_FS_L2  4319.172429 ; N ! Force from ride spring L2
SV_FS_R1  15982.05948 ; N ! Force from ride spring R1
SV_FS_R2  6366.279878 ; N ! Force from ride spring R2
SV_FUEL             0 ; kg ! ODE: Mass of fuel consumed {Mfuel}
SV_FX_SM_L1 -115.0694446 ; N ! Tire force [sx] component, wheel L1
SV_FX_SM_L2 1729.721456 ; N ! Tire force [sx] component, wheel L2
SV_FX_SM_R1 -127.2926175 ; N ! Tire force [sx] component, wheel R1
SV_FX_SM_R2 1747.621478 ; N ! Tire force [sx] component, wheel R2
SV_FY_SM_L1 -153.4405744 ; N ! Tire force [sy] component, wheel L1
SV_FY_SM_L2 31.74923318 ; N ! Tire force [sy] component, wheel L2
SV_FY_SM_R1 93.19071326 ; N ! Tire force [sy] component, wheel R1
SV_FY_SM_R2 32.81605331 ; N ! Tire force [sy] component, wheel R2
SV_FZ_SM_L1 18859.86968 ; N ! Tire force force [sz] component, wheel L1
SV_FZ_SM_L2 9063.463777 ; N ! Tire force force [sz] component, wheel L2
SV_FZ_SM_R1 19081.15048 ; N ! Tire force force [sz] component, wheel R1
SV_FZ_SM_R2 9473.71736 ; N ! Tire force force [sz] component, wheel R2
SV_F_HYS_RACK_A1    0 ; N ! Friction force at rack
SV_F_HYS_RACK_A2    0 ; N ! Friction force at rack
SV_GEAR             7 ; - ! Automatic transmission gear {GearAuto}
SV_GEAR_DELAY       7 ; - ! Delayed transmission gear position
SV_GEAR_MEM         7 ; - ! Gear saved in memory, used for transition
SV_GEAR_STAT        7 ; - ! Transmission gear status {GearStat}
SV_IVERR 0.2568788982 ; m ! ODE: Integral of SC speed error {Vx_IErr}
SV_I_GEAR_SHIFT   0.2 ; kg-m2 ! Transmission gear inertia modulated by shift
SV_I_GEAR_SHIFT_START 0 ; kg-m2 ! Gear spin inertia when automatic shift started
SV_JNCR_A1 0.01621969455 ; m/s ! ODE: Jounce rate of axle 1
SV_JNCR_A2 -0.009500639594 ; m/s ! ODE: Jounce rate of axle 2
SV_JNC_A1 -0.001541812531 ; m ! ODE: Jounce of axle 1
SV_JNC_A2 0.0009259206032 ; m ! ODE: Jounce of axle 2
SV_LK_WHL_L1        0 ; - ! Lockup state for wheel L1
SV_LK_WHL_L2        0 ; - ! Lockup state for wheel L2
SV_LK_WHL_R1        0 ; - ! Lockup state for wheel R1
SV_LK_WHL_R2        0 ; - ! Lockup state for wheel R2
SV_LOCKED_CLUTCH_NEUTRAL 0 ; - ! Is clutch locked while in neutral?
SV_MBOOST           0 ; N-m ! ODE: Delayed boost torque {M_boost}
SV_MY_BRK_L1 4.482177919 ; N-m ! Spin moment, wheel L1
SV_MY_BRK_L2 -905.444904 ; N-m ! Spin moment, wheel L2
SV_MY_BRK_R1 5.208734823 ; N-m ! Spin moment, wheel R1
SV_MY_BRK_R2 -905.0051395 ; N-m ! Spin moment, wheel R2
SV_MZ_WHEEL_L1 12.00164279 ; N-m ! Tire Mz, wheel L1
SV_MZ_WHEEL_L2 -1.178118499 ; N-m ! Tire Mz, wheel L2
SV_MZ_WHEEL_R1 -6.305143774 ; N-m ! Tire Mz, wheel R1
SV_MZ_WHEEL_R2 -1.243211906 ; N-m ! Tire Mz, wheel R2
SV_M_CL2_CAP_RD_DYN 0 ; N-m ! ODE: 2nd Clutch capacity for 2nd drive axle diff
SV_M_CLUTCH_DEL   900 ; N-m ! ODE: Time delayed clutch torque capacity
SV_M_CL_CAP_RD_DYN  0 ; N-m ! ODE: Clutch capacity for 2nd drive axle diff
SV_M_CL_LR_CAP_DYN  0 ; N-m ! ODE: Left twin clutch capacity for 2nd drive axle diff
SV_M_CL_RR_CAP_DYN  0 ; N-m ! ODE: Right twin clutch capacity for 2nd drive axle
                      ! diff
SV_M_ENG_ESC_APPLY  0 ; N-m ! ODE: Applied engine torque from ESC/TCS
SV_M_ENG_ESC_ERROR  0 ; N-m-s ! ODE: Integral of error from ESC request
SV_M_HYS_COL        0 ; N-m ! Steering column friction
SV_M_HYS_GEAR_A1    0 ; N-m ! Friction torque for recirculating ball
SV_M_HYS_GEAR_A2    0 ; N-m ! Friction torque for recirculating ball
SV_M_KP_L1 -141.405795 ; N-m ! Kingpin moment, wheel L1
SV_M_KP_L2          0 ; N-m ! Kingpin moment, wheel L2
SV_M_KP_R1 119.5400717 ; N-m ! Kingpin moment, wheel R1
SV_M_KP_R2          0 ; N-m ! Kingpin moment, wheel R2
SV_M_PARK_L1        0 ; N-m ! Kingpin steer park torque, wheel L1
SV_M_PARK_L2        0 ; N-m ! Kingpin steer park torque, wheel L2
SV_M_PARK_R1        0 ; N-m ! Kingpin steer park torque, wheel R1
SV_M_PARK_R2        0 ; N-m ! Kingpin steer park torque, wheel R2
SV_M_TC   685.4902406 ; N-m ! Transmission input shaft torque
SV_N_START_CROSS    0 ; - ! Count of start-crossings on looped driver path
SV_PBK_L1           0 ; MPa ! ODE: Brake actuator pressure for wheel L1
SV_PBK_L2           0 ; MPa ! ODE: Brake actuator pressure for wheel L2
SV_PBK_R1           0 ; MPa ! ODE: Brake actuator pressure for wheel R1
SV_PBK_R2           0 ; MPa ! ODE: Brake actuator pressure for wheel R2
SV_PITCH -0.08148471731 ; deg ! ODE: Pitch of sprung mass {Pitch}
SV_RGEAR_CVT        0 ; - ! ODE: Delayed CVT gear ratio
SV_ROLL  0.0249724809 ; deg ! ODE: Roll (Euler) of sprung mass {Roll_E}
SV_ROLL_A1 -0.02378664465 ; deg ! ODE: Roll of axle 1
SV_ROLL_A2 -0.06170218703 ; deg ! ODE: Roll of axle 2
SV_ROT_L1 291.3977738 ; rev ! ODE: Rotation of wheel L1
SV_ROT_L2 295.2617225 ; rev ! ODE: Rotation of wheel L2
SV_ROT_LK_L1        0 ; rev ! Rotation reference of wheel L1 in "locked" mode
SV_ROT_LK_L2        0 ; rev ! Rotation reference of wheel L2 in "locked" mode
SV_ROT_LK_R1        0 ; rev ! Rotation reference of wheel R1 in "locked" mode
SV_ROT_LK_R2        0 ; rev ! Rotation reference of wheel R2 in "locked" mode
SV_ROT_R1  291.397676 ; rev ! ODE: Rotation of wheel R1
SV_ROT_R2 295.3333388 ; rev ! ODE: Rotation of wheel R2
SV_ROT_SHAFT_2 1476.487653 ; rev ! ODE: 2nd drive axle diff input shaft rotation
SV_ROT_SHAFT_L_D2 295.2617225 ; rev ! ODE: Diff2 Left (first) output shaft rotation
SV_ROT_SHAFT_R_D2 295.3333388 ; rev ! ODE: Diff2 Right (second) output shaft
                              ! rotation
SV_ROT_TC 959.8209066 ; rev ! ODE: Torque coupling output shaft rotation
SV_ROT_TR_OUT 1476.647549 ; rev ! ODE: Transmission output shaft rotation
SV_R_GEAR_SHIFT  0.65 ; - ! Transmission gear ratio modulated by gear shift
SV_R_GEAR_SHIFT_START 0 ; - ! Gear ratio when automatic shift started
SV_R_GEAR_TOTAL_SC 3.25 ; - ! Driveline total gear ratio for speed controller
SV_R_KP_GND_L1 -1.012034523 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_KP_GND_L2      0 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_KP_GND_R1 -1.012041324 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_KP_GND_R2      0 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_L1I 0.5007554775 ; m ! Deflected radius for tire L1i
SV_R_L1O 0.5007554775 ; m ! Deflected radius for tire L1o
SV_R_L2I 0.5154726323 ; m ! Deflected radius for tire L2i
SV_R_L2O 0.5152755448 ; m ! Deflected radius for tire L2o
SV_R_R1I 0.5005295121 ; m ! Deflected radius for tire R1i
SV_R_R1O 0.5005295121 ; m ! Deflected radius for tire R1o
SV_R_R2I 0.5150642846 ; m ! Deflected radius for tire R2i
SV_R_R2O 0.5152613727 ; m ! Deflected radius for tire R2o
SV_SHIFT_DELAY      0 ; - ! Is shifting delay in T.C. active?
SV_SLIP_LAT_L1I 0.0009164835891 ; - ! ODE: Lagged tan of lateral slip, tire L1i
SV_SLIP_LAT_L1O     0 ; - ! ODE: Lagged tan of lateral slip, tire L1o
SV_SLIP_LAT_L2I -0.0002565121641 ; - ! ODE: Lagged tan of lateral slip, tire L2i
SV_SLIP_LAT_L2O -0.000255520236 ; - ! ODE: Lagged tan of lateral slip, tire L2o
SV_SLIP_LAT_R1I -0.0004626956108 ; - ! ODE: Lagged tan of lateral slip, tire R1i
SV_SLIP_LAT_R1O     0 ; - ! ODE: Lagged tan of lateral slip, tire R1o
SV_SLIP_LAT_R2I -0.0002518776077 ; - ! ODE: Lagged tan of lateral slip, tire R2i
SV_SLIP_LAT_R2O -0.0002528781708 ; - ! ODE: Lagged tan of lateral slip, tire R2o
SV_SLIP_LONG_L1I -0.000668592953 ; - ! ODE: Lagged long. slip, tire L1i
SV_SLIP_LONG_L1O    0 ; - ! ODE: Lagged long. slip, tire L1o
SV_SLIP_LONG_L2I 0.0152878802 ; - ! ODE: Lagged long. slip, tire L2i
SV_SLIP_LONG_L2O 0.01528159503 ; - ! ODE: Lagged long. slip, tire L2o
SV_SLIP_LONG_R1I -0.0006633416573 ; - ! ODE: Lagged long. slip, tire R1i
SV_SLIP_LONG_R1O    0 ; - ! ODE: Lagged long. slip, tire R1o
SV_SLIP_LONG_R2I 0.014583294 ; - ! ODE: Lagged long. slip, tire R2i
SV_SLIP_LONG_R2O 0.01458979636 ; - ! ODE: Lagged long. slip, tire R2o
SV_SO_DIST 934.3620994 ; m ! ODE: Distance  used for tire "wandering profiles"
                       ! {Sta_Prof}
SV_SPEED_DVDS       0 ; - ! dVdS derivative for speed control
SV_SPEED_PREVIEW_SSTART 0 ; m ! Start station in path preview array
SV_SPEED_PREVIEW_V_TARGET 0 ; km/h ! Initial target speed in preview array
SV_STATION 934.3610153 ; m ! Station of vehicle on driver path PATH_ID_DM {Station}
SV_STA_ROAD 934.3610153 ; m ! Vehicle station on road CURRENT_ROAD_ID {Sta_Road}
SV_STR_DM -0.04446937543 ; deg ! Road-wheel steer from driver model
SV_STR_DM_OLD -0.04448892184 ; deg ! Road-wheel steer from driver model (prev. time
                             ! step)
SV_STR_IN_DGR_A1 0.0170924864 ; - ! ODE: Steering gear input rate, axle 1
SV_STR_IN_DGR_A2    0 ; - ! ODE: Steering gear input rate, axle 2
SV_STR_IN_GR_A1 -0.01941253751 ; - ! ODE: Steering gear input position, axle 1
                               ! {A_StrIn1}
SV_STR_IN_GR_A2     0 ; - ! ODE: Steering gear input position, axle 2 {A_StrIn2}
SV_STR_KP_L1 -0.05327912112 ; deg ! Kingpin steer angle, wheel L1
SV_STR_KP_L1_OLD -0.05337995253 ; deg ! Kingpin steer angle, wheel L1 (previous time
                                ! step)
SV_STR_KP_L2_OLD    0 ; deg ! Kingpin steer angle, wheel L2 (previous time step)
SV_STR_KP_R1 0.0192947974 ; deg ! Kingpin steer angle, wheel R1
SV_STR_KP_R1_OLD 0.01899056843 ; deg ! Kingpin steer angle, wheel R1 (previous time
                               ! step)
SV_STR_KP_R2_OLD    0 ; deg ! Kingpin steer angle, wheel R2 (previous time step)
SV_STR_OUT_GR_A1 -0.00077684335 ; - ! Steering gear output
SV_STR_OUT_GR_A2    0 ; - ! Steering gear output
SV_SWA   -1.112256469 ; deg ! ODE: Steering wheel angle
SV_SWA_DM -1.112746132 ; deg ! Steering wheel angle from DM
SV_SWA_OL           0 ; deg ! Steering wheel angle from open loop control
SV_SWA_OLD -1.112746132 ; deg ! Steering wheel angle (previous time step)
SV_THROTTLE 0.9970166513 ; - ! ODE: Time delayed engine throttle
SV_THR_REQ          1 ; - ! Requested Throttle
SV_TH_AUTO_SHIFT    0 ; - ! Boolean: 1 if auto throttle for a gear shift
SV_TROT_L1          0 ; C ! ODE: Brake rotor L1 temperature {T_Rtr_L1}
SV_TROT_L2          0 ; C ! ODE: Brake rotor L2 temperature {T_Rtr_L2}
SV_TROT_R1          0 ; C ! ODE: Brake rotor R1 temperature {T_Rtr_R1}
SV_TROT_R2          0 ; C ! ODE: Brake rotor R2 temperature {T_Rtr_R2}
SV_T_ESC_STATE_CHANGE -10000000 ; s ! Time of ESC control status changed
SV_T_SHIFT_START    0 ; s ! Time when automatic gear shift started
SV_VBK_L1           0 ; mm3 ! ODE: Brake caliper L1 volume
SV_VBK_L2           0 ; mm3 ! ODE: Brake caliper L2 volume
SV_VBK_R1           0 ; mm3 ! ODE: Brake caliper R1 volume
SV_VBK_R2           0 ; mm3 ! ODE: Brake caliper R2 volume
SV_VERR_OLD 0.972824614 ; km/h ! Speed controller error at previous time step
SV_VXS    111.6768534 ; km/h ! ODE: Body-X speed of laden sprung-mass CG
SV_VYS -0.001425318419 ; m/s ! ODE: Body-Y speed of laden sprung-mass CG
SV_VZS -0.06038206932 ; m/s ! ODE: Body-Z speed of laden sprung-mass CG
SV_XO     934.3610153 ; m ! ODE: Global X coord. of sprung-mass origin {Xo}
SV_X_GND  931.8455082 ; m ! X coord, ground, vehicle aero ref. pt
SV_YAW 0.005594391181 ; deg ! ODE: Yaw of sprung mass {Yaw}
SV_YO   0.01262875103 ; m ! ODE: Global Y coord. of sprung-mass origin {Yo}
SV_Y_GND 0.01238458456 ; m ! Y coord, ground, vehicle aero ref. pt
SV_ZO -0.009330860457 ; m ! ODE: Global Z coord. of sprung-mass origin {Zo}
SV_Z_CTC_L1I -0.001603790057 ; m ! Center of tire contact L1i {Zgnd_L1i}
SV_Z_CTC_L1O -0.001603790057 ; m ! Center of tire contact L1o {Zgnd_L1o}
SV_Z_CTC_L2I -0.001481049716 ; m ! Center of tire contact L2i {Zgnd_L2i}
SV_Z_CTC_L2O -0.001481049717 ; m ! Center of tire contact L2o {Zgnd_L2o}
SV_Z_CTC_R1I -0.001402740348 ; m ! Center of tire contact R1i {Zgnd_R1i}
SV_Z_CTC_R1O -0.001402740348 ; m ! Center of tire contact R1o {Zgnd_R1o}
SV_Z_CTC_R2I -0.0001176681935 ; m ! Center of tire contact R2i {Zgnd_R2i}
SV_Z_CTC_R2O -0.0001176681816 ; m ! Center of tire contact R2o {Zgnd_R2o}
SV_Z_GND            0 ; m ! Z coord, ground, vehicle aero ref. pt


END
